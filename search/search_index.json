{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u8bfe\u7a0b\u7f51\u7ad9 \u7f51\u7ad9\u4e3b\u8981\u5b58\u653e\u8bfe\u7a0b\u76f8\u5173\u8d44\u6599. Python \u7a0b\u5e8f\u8bbe\u8ba1 \u672c\u8bfe\u7a0b\u65e8\u5728\u5f15\u5bfc\u5b66\u751f\u5bf9 Python \u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u5b66\u4e60\uff0c\u5e76\u4e86\u89e3\u5404\u79cd\u5b9e\u7528\u7684 Python \u5e93\uff0c\u80fd\u591f\u4f7f\u7528 Python \u89e3\u51b3\u65e5\u5e38\u751f\u6d3b\u3001\u5b66\u4e60\u3001\u5de5\u4f5c\u4e2d\u7684\u95ee\u9898\u3002 \u8bfe\u7a0b\u76f8\u5173\u6750\u6599\u8bf7\u70b9\u51fb Python \u7a0b\u5e8f\u8bbe\u8ba1 \u3002 \u8ba1\u7b97\u673a\u5b89\u5168\u4e0e\u7ef4\u62a4 \u672c\u8bfe\u7a0b\u9488\u5bf9\u8ba1\u7b97\u673a\u65e5\u5e38\u4f7f\u7528\u548c\u7ef4\u62a4\u8fc7\u7a0b\u4e2d\u7684\u5173\u952e\u6280\u672f\uff0c\u4ece\u5e94\u7528\u89d2\u5ea6\u51fa\u53d1\uff0c\u4ecb\u7ecd Windows \u64cd\u4f5c\u7cfb\u7edf\u3001\u6076\u610f\u4ee3\u7801\u3001\u5b89\u5168\u52a0\u56fa\u7b49\u57fa\u672c\u6982\u5ff5\u3001\u539f\u7406\u548c\u6280\u672f\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u8bb2\u89e3\u77e5\u8bc6\u70b9\uff0c\u5c06\u5b89\u5168\u7406\u8bba\u3001\u5b89\u5168\u6280\u672f\u548c\u5b89\u5168\u5de5\u5177\u6709\u673a\u7ed3\u5408\u3002 \u8bfe\u7a0b\u76f8\u5173\u6750\u6599\u8bf7\u70b9\u51fb \u8ba1\u7b97\u673a\u5b89\u5168\u4e0e\u7ef4\u62a4 \u3002 \u7f51\u9875\u8bbe\u8ba1\u4e0e\u5236\u4f5c \u672c\u8bfe\u7a0b\u7ed3\u5408\u5b9e\u8df5\u8bb2\u89e3 HTML\u3001CSS\u3001JavaScript\uff0c\u5e2e\u52a9\u540c\u5b66\u4eec\u4ece\u96f6\u5f00\u59cb\u5b66\u4e60\u8bbe\u8ba1 / \u5236\u4f5c\u7f51\u9875\uff0c\u8bfe\u7a0b\u540e\u671f\u4ee5\u9879\u76ee\u7684\u5f62\u5f0f\u5e26\u9886\u540c\u5b66\u4eec\u4e00\u8d77\u5236\u4f5c\u81ea\u5df1\u7684\u9875\u9762\u6216\u5e94\u7528\u3002 \u8bfe\u7a0b\u8d44\u6599\u8bf7\u70b9\u51fb \u7f51\u9875\u8bbe\u8ba1\u4e0e\u5236\u4f5c . \u6570\u5b57\u5a92\u4f53\u5b89\u5168\u5e94\u7528\u4e0e\u5b9e\u8df5 \u672c\u8bfe\u7a0b\u7efc\u5408\u8fd0\u7528\u4fe1\u606f\u9690\u85cf\u3001Web \u5f00\u53d1\u7b49\u77e5\u8bc6\uff0c\u5e26\u9886\u5927\u5bb6\u4e00\u8d77\u6784\u5efa\u4e00\u4e2a\u5b89\u5168\u7c7b\u7684\u5b9e\u8df5\u9879\u76ee\u3002 \u8bfe\u7a0b\u8d44\u6599\u8bf7\u70b9\u51fb \u6570\u5b57\u5a92\u4f53\u5b89\u5168\u5e94\u7528\u4e0e\u5b9e\u8df5 .","title":"\u9996\u9875"},{"location":"#_1","text":"\u7f51\u7ad9\u4e3b\u8981\u5b58\u653e\u8bfe\u7a0b\u76f8\u5173\u8d44\u6599.","title":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u8bfe\u7a0b\u7f51\u7ad9"},{"location":"#python","text":"\u672c\u8bfe\u7a0b\u65e8\u5728\u5f15\u5bfc\u5b66\u751f\u5bf9 Python \u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u5b66\u4e60\uff0c\u5e76\u4e86\u89e3\u5404\u79cd\u5b9e\u7528\u7684 Python \u5e93\uff0c\u80fd\u591f\u4f7f\u7528 Python \u89e3\u51b3\u65e5\u5e38\u751f\u6d3b\u3001\u5b66\u4e60\u3001\u5de5\u4f5c\u4e2d\u7684\u95ee\u9898\u3002 \u8bfe\u7a0b\u76f8\u5173\u6750\u6599\u8bf7\u70b9\u51fb Python \u7a0b\u5e8f\u8bbe\u8ba1 \u3002","title":"Python \u7a0b\u5e8f\u8bbe\u8ba1"},{"location":"#_2","text":"\u672c\u8bfe\u7a0b\u9488\u5bf9\u8ba1\u7b97\u673a\u65e5\u5e38\u4f7f\u7528\u548c\u7ef4\u62a4\u8fc7\u7a0b\u4e2d\u7684\u5173\u952e\u6280\u672f\uff0c\u4ece\u5e94\u7528\u89d2\u5ea6\u51fa\u53d1\uff0c\u4ecb\u7ecd Windows \u64cd\u4f5c\u7cfb\u7edf\u3001\u6076\u610f\u4ee3\u7801\u3001\u5b89\u5168\u52a0\u56fa\u7b49\u57fa\u672c\u6982\u5ff5\u3001\u539f\u7406\u548c\u6280\u672f\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u8bb2\u89e3\u77e5\u8bc6\u70b9\uff0c\u5c06\u5b89\u5168\u7406\u8bba\u3001\u5b89\u5168\u6280\u672f\u548c\u5b89\u5168\u5de5\u5177\u6709\u673a\u7ed3\u5408\u3002 \u8bfe\u7a0b\u76f8\u5173\u6750\u6599\u8bf7\u70b9\u51fb \u8ba1\u7b97\u673a\u5b89\u5168\u4e0e\u7ef4\u62a4 \u3002","title":"\u8ba1\u7b97\u673a\u5b89\u5168\u4e0e\u7ef4\u62a4"},{"location":"#_3","text":"\u672c\u8bfe\u7a0b\u7ed3\u5408\u5b9e\u8df5\u8bb2\u89e3 HTML\u3001CSS\u3001JavaScript\uff0c\u5e2e\u52a9\u540c\u5b66\u4eec\u4ece\u96f6\u5f00\u59cb\u5b66\u4e60\u8bbe\u8ba1 / \u5236\u4f5c\u7f51\u9875\uff0c\u8bfe\u7a0b\u540e\u671f\u4ee5\u9879\u76ee\u7684\u5f62\u5f0f\u5e26\u9886\u540c\u5b66\u4eec\u4e00\u8d77\u5236\u4f5c\u81ea\u5df1\u7684\u9875\u9762\u6216\u5e94\u7528\u3002 \u8bfe\u7a0b\u8d44\u6599\u8bf7\u70b9\u51fb \u7f51\u9875\u8bbe\u8ba1\u4e0e\u5236\u4f5c .","title":"\u7f51\u9875\u8bbe\u8ba1\u4e0e\u5236\u4f5c"},{"location":"#_4","text":"\u672c\u8bfe\u7a0b\u7efc\u5408\u8fd0\u7528\u4fe1\u606f\u9690\u85cf\u3001Web \u5f00\u53d1\u7b49\u77e5\u8bc6\uff0c\u5e26\u9886\u5927\u5bb6\u4e00\u8d77\u6784\u5efa\u4e00\u4e2a\u5b89\u5168\u7c7b\u7684\u5b9e\u8df5\u9879\u76ee\u3002 \u8bfe\u7a0b\u8d44\u6599\u8bf7\u70b9\u51fb \u6570\u5b57\u5a92\u4f53\u5b89\u5168\u5e94\u7528\u4e0e\u5b9e\u8df5 .","title":"\u6570\u5b57\u5a92\u4f53\u5b89\u5168\u5e94\u7528\u4e0e\u5b9e\u8df5"},{"location":"apdms/","text":"\u8bfe\u7a0b\u7b80\u4ecb \u672c\u8bfe\u7a0b\u7efc\u5408\u8fd0\u7528\u4fe1\u606f\u9690\u85cf\u3001Web\u5f00\u53d1\u7b49\u77e5\u8bc6\uff0c\u5e26\u9886\u5927\u5bb6\u4e00\u8d77\u6784\u5efa\u4e00\u4e2a\u5b89\u5168\u7c7b\u7684\u5b9e\u8df5\u9879\u76ee\u3002 \u5185\u5bb9\u76ee\u5f55 00-\u8bfe\u7a0b\u6982\u8ff0 01-Flask \u7b80\u4ecb 02-Flask \u521d\u63a2 03-Jinja2 \u6a21\u677f 04-WTForms \u8868\u5355","title":"\u6570\u5b57\u5a92\u4f53\u5b89\u5168\u5e94\u7528\u4e0e\u5b9e\u8df5"},{"location":"apdms/#_1","text":"\u672c\u8bfe\u7a0b\u7efc\u5408\u8fd0\u7528\u4fe1\u606f\u9690\u85cf\u3001Web\u5f00\u53d1\u7b49\u77e5\u8bc6\uff0c\u5e26\u9886\u5927\u5bb6\u4e00\u8d77\u6784\u5efa\u4e00\u4e2a\u5b89\u5168\u7c7b\u7684\u5b9e\u8df5\u9879\u76ee\u3002","title":"\u8bfe\u7a0b\u7b80\u4ecb"},{"location":"apdms/#_2","text":"00-\u8bfe\u7a0b\u6982\u8ff0 01-Flask \u7b80\u4ecb 02-Flask \u521d\u63a2 03-Jinja2 \u6a21\u677f 04-WTForms \u8868\u5355","title":"\u5185\u5bb9\u76ee\u5f55"},{"location":"cms/","text":"\u8bfe\u7a0b\u7b80\u4ecb \u672c\u8bfe\u7a0b\u9488\u5bf9\u8ba1\u7b97\u673a\u65e5\u5e38\u4f7f\u7528\u548c\u7ef4\u62a4\u8fc7\u7a0b\u4e2d\u7684\u5173\u952e\u6280\u672f\uff0c\u4ece\u5e94\u7528\u89d2\u5ea6\u51fa\u53d1\uff0c\u4ecb\u7ecd Windows \u64cd\u4f5c\u7cfb\u7edf\u3001\u6076\u610f\u4ee3\u7801\u3001\u5b89\u5168\u52a0\u56fa\u7b49\u57fa\u672c\u6982\u5ff5\u3001\u539f\u7406\u548c\u6280\u672f\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u8bb2\u89e3\u77e5\u8bc6\u70b9\uff0c\u5c06\u5b89\u5168\u7406\u8bba\u3001\u5b89\u5168\u6280\u672f\u548c\u5b89\u5168\u5de5\u5177\u6709\u673a\u7ed3\u5408\u3002 00-\u8bfe\u4ef6 01-Windows \u5b89\u88c5\u5b9e\u9a8c 02-Windows \u7ec4\u4ef6\u5b9e\u9a8c 03-\u6076\u610f\u8f6f\u4ef6\u5b9e\u9a8c 04-\u6570\u636e\u6062\u590d\u5b9e\u9a8c 05-\u811a\u672c\u5b9e\u9a8c","title":"\u8ba1\u7b97\u673a\u5b89\u5168\u4e0e\u7ef4\u62a4"},{"location":"cms/#_1","text":"\u672c\u8bfe\u7a0b\u9488\u5bf9\u8ba1\u7b97\u673a\u65e5\u5e38\u4f7f\u7528\u548c\u7ef4\u62a4\u8fc7\u7a0b\u4e2d\u7684\u5173\u952e\u6280\u672f\uff0c\u4ece\u5e94\u7528\u89d2\u5ea6\u51fa\u53d1\uff0c\u4ecb\u7ecd Windows \u64cd\u4f5c\u7cfb\u7edf\u3001\u6076\u610f\u4ee3\u7801\u3001\u5b89\u5168\u52a0\u56fa\u7b49\u57fa\u672c\u6982\u5ff5\u3001\u539f\u7406\u548c\u6280\u672f\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u8bb2\u89e3\u77e5\u8bc6\u70b9\uff0c\u5c06\u5b89\u5168\u7406\u8bba\u3001\u5b89\u5168\u6280\u672f\u548c\u5b89\u5168\u5de5\u5177\u6709\u673a\u7ed3\u5408\u3002","title":"\u8bfe\u7a0b\u7b80\u4ecb"},{"location":"cms/#00-","text":"","title":"00-\u8bfe\u4ef6"},{"location":"cms/#01-windows","text":"","title":"01-Windows \u5b89\u88c5\u5b9e\u9a8c"},{"location":"cms/#02-windows","text":"","title":"02-Windows \u7ec4\u4ef6\u5b9e\u9a8c"},{"location":"cms/#03-","text":"","title":"03-\u6076\u610f\u8f6f\u4ef6\u5b9e\u9a8c"},{"location":"cms/#04-","text":"","title":"04-\u6570\u636e\u6062\u590d\u5b9e\u9a8c"},{"location":"cms/#05-","text":"","title":"05-\u811a\u672c\u5b9e\u9a8c"},{"location":"python/","text":"\u8bfe\u7a0b\u7b80\u4ecb \u672c\u8bfe\u7a0b\u65e8\u5728\u5f15\u5bfc\u5b66\u751f\u5bf9 Python \u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u5b66\u4e60\uff0c\u5e76\u4e86\u89e3\u5404\u79cd\u5b9e\u7528\u7684 Python \u5e93\u3002 \u8bfe\u7a0b\u7ed3\u6784\u5982\u4e0b\uff1a 00-\u8bfe\u7a0b\u6982\u8ff0 01-\u57fa\u672c\u6982\u5ff5 02-\u6570\u636e\u7c7b\u578b\u57fa\u7840 03-\u7a0b\u5e8f\u7ed3\u6784 04-\u6570\u636e\u7c7b\u578b\u8fdb\u9636 05-\u8f93\u5165\u8f93\u51fa 06-\u6587\u4ef6\u4e0e\u76ee\u5f55","title":"Python \u7a0b\u5e8f\u8bbe\u8ba1"},{"location":"python/#_1","text":"\u672c\u8bfe\u7a0b\u65e8\u5728\u5f15\u5bfc\u5b66\u751f\u5bf9 Python \u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u5b66\u4e60\uff0c\u5e76\u4e86\u89e3\u5404\u79cd\u5b9e\u7528\u7684 Python \u5e93\u3002 \u8bfe\u7a0b\u7ed3\u6784\u5982\u4e0b\uff1a 00-\u8bfe\u7a0b\u6982\u8ff0 01-\u57fa\u672c\u6982\u5ff5 02-\u6570\u636e\u7c7b\u578b\u57fa\u7840 03-\u7a0b\u5e8f\u7ed3\u6784 04-\u6570\u636e\u7c7b\u578b\u8fdb\u9636 05-\u8f93\u5165\u8f93\u51fa 06-\u6587\u4ef6\u4e0e\u76ee\u5f55","title":"\u8bfe\u7a0b\u7b80\u4ecb"},{"location":"substitute/","text":"\u8f6f\u4ef6\u9879\u76ee\u5b89\u5168\u5f00\u53d1\u751f\u547d\u5468\u671f-WinDBG \u8f6f\u4ef6\u9879\u76ee\u5b89\u5168\u5f00\u53d1\u751f\u547d\u5468\u671f-WinDBG\u811a\u672c","title":"\u4e34\u65f6\u4ee3\u8bfe"},{"location":"substitute/#-windbg","text":"","title":"\u8f6f\u4ef6\u9879\u76ee\u5b89\u5168\u5f00\u53d1\u751f\u547d\u5468\u671f-WinDBG"},{"location":"substitute/#-windbg_1","text":"","title":"\u8f6f\u4ef6\u9879\u76ee\u5b89\u5168\u5f00\u53d1\u751f\u547d\u5468\u671f-WinDBG\u811a\u672c"},{"location":"web/","text":"\u8bfe\u7a0b\u7b80\u4ecb \u672c\u8bfe\u7a0b\u7ed3\u5408\u5b9e\u8df5\u8bb2\u89e3HTML\u3001CSS\u3001JavaScript\uff0c\u5e2e\u52a9\u540c\u5b66\u4eec\u4ece\u96f6\u5f00\u59cb\u5b66\u4e60\u8bbe\u8ba1 / \u5236\u4f5c\u7f51\u9875\uff0c\u8bfe\u7a0b\u540e\u671f\u4ee5\u9879\u76ee\u7684\u5f62\u5f0f\u5e26\u9886\u540c\u5b66\u4eec\u4e00\u8d77\u5236\u4f5c\u81ea\u5df1\u7684\u9875\u9762\u6216\u5e94\u7528\u3002 \u5185\u5bb9\u76ee\u5f55 XX-\u4f5c\u4e1a 00-\u8bfe\u7a0b\u6982\u8ff0 01-HTML \u5143\u7d20\u8be6\u89e3 02-CSS \u6837\u5f0f\u8868 03-CSS \u6587\u672c\u6837\u5f0f 04-CSS \u76d2\u5b50\u6837\u5f0f 05-CSS \u5e03\u5c40 06-JavaScript \u521d\u63a2 07-JavaScript \u57fa\u7840 08-JavaScript \u7ed3\u6784\u5316\u4ee3\u7801 09-\u9762\u5411\u5bf9\u8c61\u7684 JavaScript 10-JavaScript API 11-Bootstrap 12-jQuery","title":"\u7f51\u9875\u8bbe\u8ba1\u4e0e\u5236\u4f5c"},{"location":"web/#_1","text":"\u672c\u8bfe\u7a0b\u7ed3\u5408\u5b9e\u8df5\u8bb2\u89e3HTML\u3001CSS\u3001JavaScript\uff0c\u5e2e\u52a9\u540c\u5b66\u4eec\u4ece\u96f6\u5f00\u59cb\u5b66\u4e60\u8bbe\u8ba1 / \u5236\u4f5c\u7f51\u9875\uff0c\u8bfe\u7a0b\u540e\u671f\u4ee5\u9879\u76ee\u7684\u5f62\u5f0f\u5e26\u9886\u540c\u5b66\u4eec\u4e00\u8d77\u5236\u4f5c\u81ea\u5df1\u7684\u9875\u9762\u6216\u5e94\u7528\u3002","title":"\u8bfe\u7a0b\u7b80\u4ecb"},{"location":"web/#_2","text":"","title":"\u5185\u5bb9\u76ee\u5f55"},{"location":"web/#xx-","text":"","title":"XX-\u4f5c\u4e1a"},{"location":"web/#00-","text":"","title":"00-\u8bfe\u7a0b\u6982\u8ff0"},{"location":"web/#01-html","text":"","title":"01-HTML \u5143\u7d20\u8be6\u89e3"},{"location":"web/#02-css","text":"","title":"02-CSS \u6837\u5f0f\u8868"},{"location":"web/#03-css","text":"","title":"03-CSS \u6587\u672c\u6837\u5f0f"},{"location":"web/#04-css","text":"","title":"04-CSS \u76d2\u5b50\u6837\u5f0f"},{"location":"web/#05-css","text":"","title":"05-CSS \u5e03\u5c40"},{"location":"web/#06-javascript","text":"","title":"06-JavaScript \u521d\u63a2"},{"location":"web/#07-javascript","text":"","title":"07-JavaScript \u57fa\u7840"},{"location":"web/#08-javascript","text":"","title":"08-JavaScript \u7ed3\u6784\u5316\u4ee3\u7801"},{"location":"web/#09-javascript","text":"","title":"09-\u9762\u5411\u5bf9\u8c61\u7684 JavaScript"},{"location":"web/#10-javascript-api","text":"","title":"10-JavaScript API"},{"location":"web/#11-bootstrap","text":"","title":"11-Bootstrap"},{"location":"web/#12-jquery","text":"","title":"12-jQuery"},{"location":"apdms/flask-getting-start/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"Flask \u521d\u63a2"},{"location":"apdms/flask-intro/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"Flask \u7b80\u4ecb"},{"location":"apdms/introduction/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"\u8bfe\u7a0b\u6982\u8ff0"},{"location":"apdms/jinja2/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"Jinja2 \u6a21\u677f"},{"location":"apdms/wtforms/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"WTForms \u8868\u5355"},{"location":"cms/cmd-scripts/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"\u81ea\u52a8\u5316\u4e0e\u811a\u672c"},{"location":"cms/data-recovery-homework/","text":"\u6982\u8ff0 \u672c\u8282\u540c\u6837\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u4f5c\u4e1a\u56de\u987e\u3001\u5b9e\u9a8c\u3002 \u4f5c\u4e1a\u56de\u987e \u6076\u610f\u4ee3\u7801\u5b9e\u9a8c\u7684\u91cd\u70b9\u5728\u4e8e\u884c\u4e3a\u5206\u6790\uff0c\u5176\u6b21\u5728\u4e8e\u6740\u6bd2\u7684\u8fc7\u7a0b\uff0c\u81f3\u4e8e\u6700\u540e\u6709\u6ca1\u6709\u6e05\u7406\u5e72\u51c0\u4e0d\u662f\u91cd\u70b9\u3002 \u5206\u6790 \u6211\u4eec\u4e3b\u8981\u901a\u8fc7 Process Monitor \u7ed3\u5408 \u706b\u7ed2\u5251 \u6765\u5206\u6790\u75c5\u6bd2\u884c\u4e3a\u3002 \u4f7f\u7528\u975e\u7ba1\u7406\u5458\u6743\u9650\u6765\u6267\u884c\u75c5\u6bd2\uff0c\u8fd9\u6837\u6211\u4eec\u4e0d\u4f1a\u4e2d\u6bd2\uff0c\u4f46\u662f\u75c5\u6bd2\u4ecd\u7136\u4f1a\u6267\u884c\u5b83\u5c1d\u8bd5\u690d\u5165\u7cfb\u7edf\u7684\u6240\u6709\u64cd\u4f5c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7528 Process Monitor \u8fc7\u6ee4\u5e76\u4fdd\u5b58\u5b83\u7684\u6240\u6709\u884c\u4e3a\u3002 \u4fdd\u5b58\u6240\u6709\u884c\u4e3a\u7684\u65f6\u5019\u9009\u62e9 CSV \u683c\u5f0f\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528 Excel \u6253\u5f00\uff0c\u7136\u540e\u5bf9 Path \u5b57\u6bb5\u53bb\u91cd\uff0c\u6765\u65b9\u4fbf\u89c2\u5bdf\u75c5\u6bd2\u5230\u5e95\u64cd\u4f5c\u4e86\u54ea\u4e9b\u5bf9\u8c61\u3002 \u4f7f\u7528\u7ba1\u7406\u5458\u6743\u9650\u6267\u884c\u75c5\u6bd2\uff0c\u4e2d\u6bd2\u4e86\uff0c\u8fd9\u65f6\u5019\u7528 \u706b\u7ed2\u5251 \u6765\u67e5\u770b\u75c5\u6bd2\u7684\u884c\u4e3a\uff0c\u5bf9\u7167\u521a\u624d\u7684 Excel \u884c\u4e3a\u8bb0\u5f55\uff0c\u6765\u89c2\u5bdf\u75c5\u6bd2\u5230\u5e95\u8fdb\u884c\u4e86\u54ea\u4e9b\u64cd\u4f5c\u3002 \u4f7f\u7528 \u706b\u7ed2\u5251 \u5220\u6389\u75c5\u6bd2\u76f8\u5173\u6587\u4ef6\uff0c\u5373\u5c1d\u8bd5\u8fdb\u884c\u6740\u6bd2\uff0c\u5982\u679c\u90e8\u5206\u6587\u4ef6\u65e0\u6cd5\u88ab\u5220\u9664\uff0c\u4e5f\u6ca1\u5173\u7cfb\uff0c\u80fd\u89e3\u91ca\u6e05\u695a\u8fd9\u4e2a\u6587\u4ef6\u7684\u4f5c\u7528\u5c31\u884c\u4e86\u3002 \u4ee5\u4e0a\u8fc7\u7a0b\u5168\u7a0b\u8bb0\u5f55\uff0c\u4f5c\u4e3a\u62a5\u544a\u3002 \u6570\u636e\u6062\u590d\u5b9e\u9a8c \u8bf7\u70b9\u51fb \u4f5c\u4e1a\u94fe\u63a5 \u901a\u8fc7\u6821\u56ed\u7f51\u4ece FTP \u4e2d\u4e0b\u8f7d winhex.zip \u4ee5\u53ca\u81ea\u5df1\u5b66\u53f7\u5bf9\u5e94\u7684 vdi \u6587\u4ef6\u3002 \u5728\u81ea\u5df1\u7684\u865a\u62df\u673a\u4e2d\u6302\u5728 vdi \u786c\u76d8\uff0c\u5e76\u4f7f\u7528 winhex.zip \u5b9e\u73b0\u6570\u636e\u6062\u590d\uff0c\u8bb0\u5f55\u6302\u8f7d\u3001\u6062\u590d\u7684\u8fc7\u7a0b\u5199\u6210\u5b9e\u9a8c\u62a5\u544a\u4e0a\u4f20\u5230\u4ed3\u5e93\uff0c\u5e76\u540c\u65f6\u5c06\u6062\u590d\u51fa\u6765\u7684\u6587\u4ef6\u4e0a\u4f20\u5230\u4ed3\u5e93\u3002","title":"\u6570\u636e\u6062\u590d\u5b9e\u9a8c"},{"location":"cms/data-recovery-homework/#_1","text":"\u672c\u8282\u540c\u6837\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u4f5c\u4e1a\u56de\u987e\u3001\u5b9e\u9a8c\u3002","title":"\u6982\u8ff0"},{"location":"cms/data-recovery-homework/#_2","text":"\u6076\u610f\u4ee3\u7801\u5b9e\u9a8c\u7684\u91cd\u70b9\u5728\u4e8e\u884c\u4e3a\u5206\u6790\uff0c\u5176\u6b21\u5728\u4e8e\u6740\u6bd2\u7684\u8fc7\u7a0b\uff0c\u81f3\u4e8e\u6700\u540e\u6709\u6ca1\u6709\u6e05\u7406\u5e72\u51c0\u4e0d\u662f\u91cd\u70b9\u3002","title":"\u4f5c\u4e1a\u56de\u987e"},{"location":"cms/data-recovery-homework/#_3","text":"\u6211\u4eec\u4e3b\u8981\u901a\u8fc7 Process Monitor \u7ed3\u5408 \u706b\u7ed2\u5251 \u6765\u5206\u6790\u75c5\u6bd2\u884c\u4e3a\u3002 \u4f7f\u7528\u975e\u7ba1\u7406\u5458\u6743\u9650\u6765\u6267\u884c\u75c5\u6bd2\uff0c\u8fd9\u6837\u6211\u4eec\u4e0d\u4f1a\u4e2d\u6bd2\uff0c\u4f46\u662f\u75c5\u6bd2\u4ecd\u7136\u4f1a\u6267\u884c\u5b83\u5c1d\u8bd5\u690d\u5165\u7cfb\u7edf\u7684\u6240\u6709\u64cd\u4f5c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7528 Process Monitor \u8fc7\u6ee4\u5e76\u4fdd\u5b58\u5b83\u7684\u6240\u6709\u884c\u4e3a\u3002 \u4fdd\u5b58\u6240\u6709\u884c\u4e3a\u7684\u65f6\u5019\u9009\u62e9 CSV \u683c\u5f0f\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528 Excel \u6253\u5f00\uff0c\u7136\u540e\u5bf9 Path \u5b57\u6bb5\u53bb\u91cd\uff0c\u6765\u65b9\u4fbf\u89c2\u5bdf\u75c5\u6bd2\u5230\u5e95\u64cd\u4f5c\u4e86\u54ea\u4e9b\u5bf9\u8c61\u3002 \u4f7f\u7528\u7ba1\u7406\u5458\u6743\u9650\u6267\u884c\u75c5\u6bd2\uff0c\u4e2d\u6bd2\u4e86\uff0c\u8fd9\u65f6\u5019\u7528 \u706b\u7ed2\u5251 \u6765\u67e5\u770b\u75c5\u6bd2\u7684\u884c\u4e3a\uff0c\u5bf9\u7167\u521a\u624d\u7684 Excel \u884c\u4e3a\u8bb0\u5f55\uff0c\u6765\u89c2\u5bdf\u75c5\u6bd2\u5230\u5e95\u8fdb\u884c\u4e86\u54ea\u4e9b\u64cd\u4f5c\u3002 \u4f7f\u7528 \u706b\u7ed2\u5251 \u5220\u6389\u75c5\u6bd2\u76f8\u5173\u6587\u4ef6\uff0c\u5373\u5c1d\u8bd5\u8fdb\u884c\u6740\u6bd2\uff0c\u5982\u679c\u90e8\u5206\u6587\u4ef6\u65e0\u6cd5\u88ab\u5220\u9664\uff0c\u4e5f\u6ca1\u5173\u7cfb\uff0c\u80fd\u89e3\u91ca\u6e05\u695a\u8fd9\u4e2a\u6587\u4ef6\u7684\u4f5c\u7528\u5c31\u884c\u4e86\u3002 \u4ee5\u4e0a\u8fc7\u7a0b\u5168\u7a0b\u8bb0\u5f55\uff0c\u4f5c\u4e3a\u62a5\u544a\u3002","title":"\u5206\u6790"},{"location":"cms/data-recovery-homework/#_4","text":"\u8bf7\u70b9\u51fb \u4f5c\u4e1a\u94fe\u63a5 \u901a\u8fc7\u6821\u56ed\u7f51\u4ece FTP \u4e2d\u4e0b\u8f7d winhex.zip \u4ee5\u53ca\u81ea\u5df1\u5b66\u53f7\u5bf9\u5e94\u7684 vdi \u6587\u4ef6\u3002 \u5728\u81ea\u5df1\u7684\u865a\u62df\u673a\u4e2d\u6302\u5728 vdi \u786c\u76d8\uff0c\u5e76\u4f7f\u7528 winhex.zip \u5b9e\u73b0\u6570\u636e\u6062\u590d\uff0c\u8bb0\u5f55\u6302\u8f7d\u3001\u6062\u590d\u7684\u8fc7\u7a0b\u5199\u6210\u5b9e\u9a8c\u62a5\u544a\u4e0a\u4f20\u5230\u4ed3\u5e93\uff0c\u5e76\u540c\u65f6\u5c06\u6062\u590d\u51fa\u6765\u7684\u6587\u4ef6\u4e0a\u4f20\u5230\u4ed3\u5e93\u3002","title":"\u6570\u636e\u6062\u590d\u5b9e\u9a8c"},{"location":"cms/data-recovery/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"\u6570\u636e\u6062\u590d"},{"location":"cms/introduction/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"\u8bfe\u7a0b\u6982\u8ff0"},{"location":"cms/malware-analysis/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"\u6076\u610f\u4ee3\u7801\u5206\u6790"},{"location":"cms/malware-introduction/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"\u6076\u610f\u4ee3\u7801\u7b80\u4ecb"},{"location":"cms/malware/","text":"\u6982\u8ff0 \u672c\u8282\u540c\u6837\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u4f5c\u4e1a\u56de\u987e\u3001\u5b9e\u9a8c\u3002 \u4f5c\u4e1a\u56de\u987e \u4f5c\u4e1a\u53c2\u8003\u89c6\u9891\uff1a \u5176\u4e2d\u6709\u4e00\u4e2a\u503c\u5f97\u5355\u72ec\u62ff\u51fa\u6765\u89e3\u91ca\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u4f5c\u4e1a\u7684\u56fe\u7247\u5728\u672c\u5730\u9884\u89c8\u80fd\u591f\u663e\u793a\uff0c\u4e0a\u4f20\u540e\u663e\u793a\u4e0d\u4e86\uff0c\u9700\u8981\u5927\u5bb6\u5c06 /courses-wiki/img/xxx.jpg \u524d\u9762\u7684 / \u53bb\u6389\u7684\u95ee\u9898\u3002 \u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u8fd8\u662f\u6709\u90e8\u5206\u540c\u5b66\u7684\u865a\u62df\u673a\u6ca1\u6709\u529e\u6cd5\u6b63\u5e38\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u5728 \u670d\u52a1\u5668 \u653e\u4e86\u5df2\u7ecf\u88c5\u597d\u7684\u865a\u62df\u673a\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e0b\u8f7d\u4f7f\u7528\u3002 \u6700\u540e\u662f\u5f88\u591a\u540c\u5b66\u5728\u4f7f\u7528 Process Monitor \u6355\u83b7\u5206\u6790\u7a0b\u5e8f\u884c\u4e3a\u7684\u65f6\u5019\u4e00\u7bc7\u7a7a\u767d\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u4f60\u91cd\u590d\u8bbe\u7f6e\u4e86\u591a\u6b21 filter \u5bfc\u81f4\u8fc7\u6ee4\u5668\u628a\u6240\u6709\u884c\u4e3a\u90fd\u8fc7\u6ee4\u6389\u4e86\uff0c\u6240\u4ee5\u9700\u8981\u5148 reset filter \u4f7f filter \u56de\u5230\u9ed8\u8ba4\u72b6\u6001\u3002 \u4f5c\u4e1a \u8bf7\u70b9\u51fb \u4f5c\u4e1a\u94fe\u63a5 \u4e0b\u8f7d\u9644\u4ef6\u4e2d\u7684\u75c5\u6bd2\u6837\u672c\uff0c\u5728\u865a\u62df\u673a\u4e2d\u89e3\u538b\uff0c\u89e3\u538b\u5bc6\u7801\u8bf7\u5728\u7fa4\u4e2d\u641c\u7d22\u804a\u5929\u8bb0\u5f55\uff0c\u5173\u952e\u8bcd\"\u75c5\u6bd2\u89e3\u538b\u5bc6\u7801\"\u3002 \u4f7f\u7528 Process Monitor \u89c2\u5bdf\u5e76\u5206\u6790\u75c5\u6bd2\u884c\u4e3a\uff0c\u5c1d\u8bd5\u4f7f\u7528\u706b\u7ed2\u5251\u8fdb\u884c\u67e5\u6740\u3002 \u5c06\u4e0a\u8ff0\u884c\u4e3a\u5199\u6210\u5b9e\u9a8c\u62a5\u544a\u5e76\u63d0\u4ea4\u5230\u4f5c\u4e1a\u4ed3\u5e93\uff0c\u622a\u81f3\u65e5\u671f\u4e3a\u4e0b\u6b21\u7ebf\u4e0b\u8bfe\u4e4b\u524d\u3002 \u9644\u4ef6 \u75c5\u6bd2\u6837\u672c \u706b\u7ed2\u5251","title":"\u6076\u610f\u4ee3\u7801\u5b9e\u9a8c"},{"location":"cms/malware/#_1","text":"\u672c\u8282\u540c\u6837\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u4f5c\u4e1a\u56de\u987e\u3001\u5b9e\u9a8c\u3002","title":"\u6982\u8ff0"},{"location":"cms/malware/#_2","text":"\u4f5c\u4e1a\u53c2\u8003\u89c6\u9891\uff1a \u5176\u4e2d\u6709\u4e00\u4e2a\u503c\u5f97\u5355\u72ec\u62ff\u51fa\u6765\u89e3\u91ca\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u4f5c\u4e1a\u7684\u56fe\u7247\u5728\u672c\u5730\u9884\u89c8\u80fd\u591f\u663e\u793a\uff0c\u4e0a\u4f20\u540e\u663e\u793a\u4e0d\u4e86\uff0c\u9700\u8981\u5927\u5bb6\u5c06 /courses-wiki/img/xxx.jpg \u524d\u9762\u7684 / \u53bb\u6389\u7684\u95ee\u9898\u3002 \u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u8fd8\u662f\u6709\u90e8\u5206\u540c\u5b66\u7684\u865a\u62df\u673a\u6ca1\u6709\u529e\u6cd5\u6b63\u5e38\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u5728 \u670d\u52a1\u5668 \u653e\u4e86\u5df2\u7ecf\u88c5\u597d\u7684\u865a\u62df\u673a\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e0b\u8f7d\u4f7f\u7528\u3002 \u6700\u540e\u662f\u5f88\u591a\u540c\u5b66\u5728\u4f7f\u7528 Process Monitor \u6355\u83b7\u5206\u6790\u7a0b\u5e8f\u884c\u4e3a\u7684\u65f6\u5019\u4e00\u7bc7\u7a7a\u767d\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u4f60\u91cd\u590d\u8bbe\u7f6e\u4e86\u591a\u6b21 filter \u5bfc\u81f4\u8fc7\u6ee4\u5668\u628a\u6240\u6709\u884c\u4e3a\u90fd\u8fc7\u6ee4\u6389\u4e86\uff0c\u6240\u4ee5\u9700\u8981\u5148 reset filter \u4f7f filter \u56de\u5230\u9ed8\u8ba4\u72b6\u6001\u3002","title":"\u4f5c\u4e1a\u56de\u987e"},{"location":"cms/malware/#_3","text":"\u8bf7\u70b9\u51fb \u4f5c\u4e1a\u94fe\u63a5 \u4e0b\u8f7d\u9644\u4ef6\u4e2d\u7684\u75c5\u6bd2\u6837\u672c\uff0c\u5728\u865a\u62df\u673a\u4e2d\u89e3\u538b\uff0c\u89e3\u538b\u5bc6\u7801\u8bf7\u5728\u7fa4\u4e2d\u641c\u7d22\u804a\u5929\u8bb0\u5f55\uff0c\u5173\u952e\u8bcd\"\u75c5\u6bd2\u89e3\u538b\u5bc6\u7801\"\u3002 \u4f7f\u7528 Process Monitor \u89c2\u5bdf\u5e76\u5206\u6790\u75c5\u6bd2\u884c\u4e3a\uff0c\u5c1d\u8bd5\u4f7f\u7528\u706b\u7ed2\u5251\u8fdb\u884c\u67e5\u6740\u3002 \u5c06\u4e0a\u8ff0\u884c\u4e3a\u5199\u6210\u5b9e\u9a8c\u62a5\u544a\u5e76\u63d0\u4ea4\u5230\u4f5c\u4e1a\u4ed3\u5e93\uff0c\u622a\u81f3\u65e5\u671f\u4e3a\u4e0b\u6b21\u7ebf\u4e0b\u8bfe\u4e4b\u524d\u3002","title":"\u4f5c\u4e1a"},{"location":"cms/malware/#_4","text":"\u75c5\u6bd2\u6837\u672c \u706b\u7ed2\u5251","title":"\u9644\u4ef6"},{"location":"cms/scripts-homework/","text":"\u6982\u8ff0 \u672c\u8282\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u4f5c\u4e1a\u56de\u987e\u3001\u5b9e\u9a8c\u3002 \u4f5c\u4e1a\u56de\u987e \u5b9e\u9a8c\u6b65\u9aa4\u5206\u6790 \u786e\u8ba4\u865a\u62df\u673a\u5904\u4e8e\u5173\u673a\u72b6\u6001\uff08\u5feb\u7167\u3001\u6302\u8d77\uff09\u90fd\u4e0d\u53ef\u4ee5\uff1b \u4e0b\u8f7d\u81ea\u5df1\u5b66\u53f7\u5bf9\u5e94\u7684 vdi \u865a\u62df\u786c\u76d8\u6587\u4ef6\uff1b \u5728 Oracle VM VirtualBox \u7ba1\u7406\u5668 \u754c\u9762\u7684\u7ba1\u7406\u83dc\u5355\u4e2d\u6ce8\u518c\u8be5\u6587\u4ef6\uff1b \u5728\u865a\u62df\u673a\u8bbe\u7f6e\u4e2d\u7684 \u201c\u5b58\u50a8\u201d \u9875\u9762\u6302\u8f7d\u6539\u78c1\u76d8\uff1b \u8fd0\u884c\u865a\u62df\u673a\uff0c\u4f7f\u7528 winhex \u89c2\u5bdf\u9664 C \u76d8\u5916\u7684\u65b0\u786c\u76d8\uff1b \u5982\u679c\u5b58\u5728\u5df2\u5220\u9664\u6587\u4ef6\uff0c\u5c1d\u8bd5\u4f7f\u7528 winhex \u6062\u590d\uff1b \u5426\u5219\u8bf7\u5728\u865a\u62df\u673a\u7cfb\u7edf\u684c\u9762\u65b0\u5efa\u4e00\u4e2a\u5927\u4e8e 1kB \u7684\u6587\u672c\u6587\u4ef6\uff08\u5185\u5bb9\u6700\u597d\u82f1\u6587\uff09\uff1b \u7136\u540e\u590d\u5236\u8be5\u6587\u4ef6\u5230\u65b0\u7684\u76d8\u4e2d\uff0c\u6309\u5feb\u6377\u952e \"SHIFT+DELETE\" \u5220\u9664\u8be5\u6587\u4ef6\uff1b \u5c1d\u8bd5\u4f7f\u7528 winhex \u6062\u590d\u88ab\u5220\u9664\u7684\u6587\u4ef6\u3002 \u6587\u672c\u7f16\u7801 \u975e\u82f1\u6587\u7684\u6587\u672c\u5185\u5bb9\u5728\u4fdd\u5b58\u7684\u65f6\u5019\u4f1a\u6d89\u53ca\u6587\u672c\u7f16\u7801\u7684\u95ee\u9898\uff0c\u5373\uff1a\u5b57\u7b26\u96c6\u548c\u5b57\u7b26\u7f16\u7801\u3002 \u4e8c\u8fdb\u5236\u4e0e\u6587\u4ef6\u683c\u5f0f \u8ba1\u7b97\u673a\u53ea\u80fd\u4fdd\u5b58\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u6240\u4ee5\u4e0d\u8bba\u4f55\u79cd\u683c\u5f0f\u7684\u5185\u5bb9\u90fd\u662f\u4e8c\u8fdb\u5236\u4fdd\u5b58\u5728\u786c\u76d8\u91cc\u3002 \u6bd4\u5982 JPG \u548c EXE \u4ed6\u4eec\u7684\u683c\u5f0f\u4e3a\uff1a JPEG_File_Interchange_Format Portable_Executable \u811a\u672c\u5b9e\u9a8c \u8bf7\u70b9\u51fb \u4f5c\u4e1a\u94fe\u63a5 \u53c2\u8003\u4f5c\u4e1a\u4ed3\u5e93\u4e2d\u7684\u63d0\u793a\uff0c\u7f16\u5199\u4e00\u4e2a\u81ea\u52a8\u622a\u5c4f\u5e76\u53d1\u90ae\u4ef6\u7684\u6279\u5904\u7406\u811a\u672c\uff0c\u5c06\u8be5\u6279\u5904\u7406\u811a\u672c\u548c\u81ea\u5df1\u7684\u5b9e\u9a8c\u5fc3\u5f97\u63d0\u4ea4\u5230\u4f5c\u4e1a\u4ed3\u5e93\u4e2d\u3002","title":"\u811a\u672c\u5b9e\u9a8c"},{"location":"cms/scripts-homework/#_1","text":"\u672c\u8282\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u4f5c\u4e1a\u56de\u987e\u3001\u5b9e\u9a8c\u3002","title":"\u6982\u8ff0"},{"location":"cms/scripts-homework/#_2","text":"","title":"\u4f5c\u4e1a\u56de\u987e"},{"location":"cms/scripts-homework/#_3","text":"\u786e\u8ba4\u865a\u62df\u673a\u5904\u4e8e\u5173\u673a\u72b6\u6001\uff08\u5feb\u7167\u3001\u6302\u8d77\uff09\u90fd\u4e0d\u53ef\u4ee5\uff1b \u4e0b\u8f7d\u81ea\u5df1\u5b66\u53f7\u5bf9\u5e94\u7684 vdi \u865a\u62df\u786c\u76d8\u6587\u4ef6\uff1b \u5728 Oracle VM VirtualBox \u7ba1\u7406\u5668 \u754c\u9762\u7684\u7ba1\u7406\u83dc\u5355\u4e2d\u6ce8\u518c\u8be5\u6587\u4ef6\uff1b \u5728\u865a\u62df\u673a\u8bbe\u7f6e\u4e2d\u7684 \u201c\u5b58\u50a8\u201d \u9875\u9762\u6302\u8f7d\u6539\u78c1\u76d8\uff1b \u8fd0\u884c\u865a\u62df\u673a\uff0c\u4f7f\u7528 winhex \u89c2\u5bdf\u9664 C \u76d8\u5916\u7684\u65b0\u786c\u76d8\uff1b \u5982\u679c\u5b58\u5728\u5df2\u5220\u9664\u6587\u4ef6\uff0c\u5c1d\u8bd5\u4f7f\u7528 winhex \u6062\u590d\uff1b \u5426\u5219\u8bf7\u5728\u865a\u62df\u673a\u7cfb\u7edf\u684c\u9762\u65b0\u5efa\u4e00\u4e2a\u5927\u4e8e 1kB \u7684\u6587\u672c\u6587\u4ef6\uff08\u5185\u5bb9\u6700\u597d\u82f1\u6587\uff09\uff1b \u7136\u540e\u590d\u5236\u8be5\u6587\u4ef6\u5230\u65b0\u7684\u76d8\u4e2d\uff0c\u6309\u5feb\u6377\u952e \"SHIFT+DELETE\" \u5220\u9664\u8be5\u6587\u4ef6\uff1b \u5c1d\u8bd5\u4f7f\u7528 winhex \u6062\u590d\u88ab\u5220\u9664\u7684\u6587\u4ef6\u3002","title":"\u5b9e\u9a8c\u6b65\u9aa4\u5206\u6790"},{"location":"cms/scripts-homework/#_4","text":"\u975e\u82f1\u6587\u7684\u6587\u672c\u5185\u5bb9\u5728\u4fdd\u5b58\u7684\u65f6\u5019\u4f1a\u6d89\u53ca\u6587\u672c\u7f16\u7801\u7684\u95ee\u9898\uff0c\u5373\uff1a\u5b57\u7b26\u96c6\u548c\u5b57\u7b26\u7f16\u7801\u3002","title":"\u6587\u672c\u7f16\u7801"},{"location":"cms/scripts-homework/#_5","text":"\u8ba1\u7b97\u673a\u53ea\u80fd\u4fdd\u5b58\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u6240\u4ee5\u4e0d\u8bba\u4f55\u79cd\u683c\u5f0f\u7684\u5185\u5bb9\u90fd\u662f\u4e8c\u8fdb\u5236\u4fdd\u5b58\u5728\u786c\u76d8\u91cc\u3002 \u6bd4\u5982 JPG \u548c EXE \u4ed6\u4eec\u7684\u683c\u5f0f\u4e3a\uff1a JPEG_File_Interchange_Format Portable_Executable","title":"\u4e8c\u8fdb\u5236\u4e0e\u6587\u4ef6\u683c\u5f0f"},{"location":"cms/scripts-homework/#_6","text":"\u8bf7\u70b9\u51fb \u4f5c\u4e1a\u94fe\u63a5 \u53c2\u8003\u4f5c\u4e1a\u4ed3\u5e93\u4e2d\u7684\u63d0\u793a\uff0c\u7f16\u5199\u4e00\u4e2a\u81ea\u52a8\u622a\u5c4f\u5e76\u53d1\u90ae\u4ef6\u7684\u6279\u5904\u7406\u811a\u672c\uff0c\u5c06\u8be5\u6279\u5904\u7406\u811a\u672c\u548c\u81ea\u5df1\u7684\u5b9e\u9a8c\u5fc3\u5f97\u63d0\u4ea4\u5230\u4f5c\u4e1a\u4ed3\u5e93\u4e2d\u3002","title":"\u811a\u672c\u5b9e\u9a8c"},{"location":"cms/slides/","text":"\u8bfe\u7a0b\u7b80\u4ecb \u672c\u8bfe\u7a0b\u9488\u5bf9\u8ba1\u7b97\u673a\u65e5\u5e38\u4f7f\u7528\u548c\u7ef4\u62a4\u8fc7\u7a0b\u4e2d\u7684\u5173\u952e\u6280\u672f\uff0c\u4ece\u5e94\u7528\u89d2\u5ea6\u51fa\u53d1\uff0c\u4ecb\u7ecd Windows \u64cd\u4f5c\u7cfb\u7edf\u3001\u6076\u610f\u4ee3\u7801\u3001\u5b89\u5168\u52a0\u56fa\u7b49\u57fa\u672c\u6982\u5ff5\u3001\u539f\u7406\u548c\u6280\u672f\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u8bb2\u89e3\u77e5\u8bc6\u70b9\uff0c\u5c06\u5b89\u5168\u7406\u8bba\u3001\u5b89\u5168\u6280\u672f\u548c\u5b89\u5168\u5de5\u5177\u6709\u673a\u7ed3\u5408\u3002 \u5185\u5bb9\u76ee\u5f55 00-\u8bfe\u7a0b\u6982\u8ff0 01-Virtualbox 02-Windows \u5b89\u88c5 03-Windows \u7528\u6237\u8d26\u6237 04-Windows \u8fdb\u7a0b\u7ebf\u7a0b 05-Windows \u670d\u52a1 06-\u6076\u610f\u4ee3\u7801\u7b80\u4ecb 07-\u6076\u610f\u4ee3\u7801\u5206\u6790 08-\u6570\u636e\u6062\u590d 09-\u81ea\u52a8\u5316\u4e0e\u811a\u672c","title":"\u8bfe\u4ef6"},{"location":"cms/slides/#_1","text":"\u672c\u8bfe\u7a0b\u9488\u5bf9\u8ba1\u7b97\u673a\u65e5\u5e38\u4f7f\u7528\u548c\u7ef4\u62a4\u8fc7\u7a0b\u4e2d\u7684\u5173\u952e\u6280\u672f\uff0c\u4ece\u5e94\u7528\u89d2\u5ea6\u51fa\u53d1\uff0c\u4ecb\u7ecd Windows \u64cd\u4f5c\u7cfb\u7edf\u3001\u6076\u610f\u4ee3\u7801\u3001\u5b89\u5168\u52a0\u56fa\u7b49\u57fa\u672c\u6982\u5ff5\u3001\u539f\u7406\u548c\u6280\u672f\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u8bb2\u89e3\u77e5\u8bc6\u70b9\uff0c\u5c06\u5b89\u5168\u7406\u8bba\u3001\u5b89\u5168\u6280\u672f\u548c\u5b89\u5168\u5de5\u5177\u6709\u673a\u7ed3\u5408\u3002","title":"\u8bfe\u7a0b\u7b80\u4ecb"},{"location":"cms/slides/#_2","text":"","title":"\u5185\u5bb9\u76ee\u5f55"},{"location":"cms/slides/#00-","text":"","title":"00-\u8bfe\u7a0b\u6982\u8ff0"},{"location":"cms/slides/#01-virtualbox","text":"","title":"01-Virtualbox"},{"location":"cms/slides/#02-windows","text":"","title":"02-Windows \u5b89\u88c5"},{"location":"cms/slides/#03-windows","text":"","title":"03-Windows \u7528\u6237\u8d26\u6237"},{"location":"cms/slides/#04-windows","text":"","title":"04-Windows \u8fdb\u7a0b\u7ebf\u7a0b"},{"location":"cms/slides/#05-windows","text":"","title":"05-Windows \u670d\u52a1"},{"location":"cms/slides/#06-","text":"","title":"06-\u6076\u610f\u4ee3\u7801\u7b80\u4ecb"},{"location":"cms/slides/#07-","text":"","title":"07-\u6076\u610f\u4ee3\u7801\u5206\u6790"},{"location":"cms/slides/#08-","text":"","title":"08-\u6570\u636e\u6062\u590d"},{"location":"cms/slides/#09-","text":"","title":"09-\u81ea\u52a8\u5316\u4e0e\u811a\u672c"},{"location":"cms/virtualbox/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"Virtualbox"},{"location":"cms/windows-accounts/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"Windows \u7528\u6237\u8d26\u6237"},{"location":"cms/windows-components/","text":"\u6982\u8ff0 \u672c\u8282\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff1a\u4f5c\u4e1a\u56de\u987e\u3001\u89c6\u9891\u96be\u70b9\u5206\u6790\u3001\u5b9e\u9a8c\u3002 \u4f5c\u4e1a\u56de\u987e \u4e0a\u6b21\u4f5c\u4e1a\u7684\u4e3b\u8981\u96be\u70b9\u5728\u4e8e\u63d0\u4ea4\u9700\u8981\u4f7f\u7528 git \u5e76\u5b66\u4f1a\u914d\u7f6e Github \u8d26\u53f7\u3002 \u53c2\u8003\u89c6\u9891\uff1a Github \u914d\u7f6e\u90e8\u5206 \u7f16\u8f91\u63d0\u4ea4\u90e8\u5206 Markdown Cheet Sheet \u9274\u4e8e\u90e8\u5206\u540c\u5b66\u8fd8\u662f\u5bf9 Markdown \u4e0d\u592a\u719f\u6089\uff0c\u8fd9\u91cc\u7ed9\u5927\u5bb6\u63a8\u8350 Markdown Guide \u3002\u8fd9\u4e2a\u7f51\u7ad9\u662f\u4e00\u4e2a Markdown \u5b66\u4e60\u7ad9\u70b9\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e0a\u53bb\u5b66\u4e60\u4e00\u4e0b\u8bed\u6cd5\u3002\u4e0b\u9762\u4e00\u5c0f\u8282\u5c31\u662f\u53c2\u8003\u4ed6\u4eec\u7684 Markdown Cheet Sheet \u7ffb\u8bd1\u7684\u3002\u5f53\u7136\u8fd8\u6709\u5f88\u591a\u4e2d\u6587\u6559\u7a0b\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u8865\u4e60\u3002 \u57fa\u672c\u8bed\u6cd5 \u5143\u7d20 \u8bed\u6cd5 \u6807\u9898 # H1 ## H2 ### H3 \u7c97\u4f53 **bold text** \u659c\u4f53 _italicized text_ \u5f15\u7528 > blockquote \u6709\u5e8f\u5217\u8868 1. First item 2. Second item 3. Third item \u65e0\u5e8f\u5217\u8868 - First item - Second item - Third item \u4ee3\u7801 code \u6a2a\u5411\u5206\u5272\u7ebf --- \u8d85\u94fe\u63a5 [title](https://www.example.com) \u56fe\u7247 ![alt text](image.jpg) \u6269\u5c55\u8bed\u6cd5 \u5143\u7d20 \u8bed\u6cd5 \u8868\u683c | Syntax | Description | | ----------- | ----------- | | Header | Title | |Paragraph | Text | Fenced Code Block ``` { \" firstName\": \"John\", \"lastName\": \"Smith\", \"age\": 25 } ``` \u811a\u6ce8 Here's a sentence with a footnote. [^1] [^1]: This is the footnote. \u6807\u9898 id ### My Great Heading {#custom-id} \u5b9a\u4e49\u5217\u8868 term : definition \u5212\u6389 ~~The world is flat.~~ \u4efb\u52a1\u5217\u8868 - [x] Write the press release - [ ] Update the website - [ ] Contact the media \u89c6\u9891\u96be\u70b9\u5206\u6790 Windows \u8fdb\u7a0b\u7ebf\u7a0b \u90e8\u5206\u540c\u5b66\u53cd\u5e94\u7b2c\u4e8c\u4e2a\u89c6\u9891\uff0c\u5373\u5b9e\u9a8c\u90e8\u5206\u770b\u4e0d\u61c2\uff0c\u8fd9\u90e8\u5206\u9700\u8981\u8865\u5145\u7406\u8bba\u77e5\u8bc6\uff0c\u90a3\u4e48\u6211\u4eec\u8ddf\u7740\u89c6\u9891\u770b\u770b\uff0c\u7ed9\u5927\u5bb6\u8865\u5145\u8bb2\u89e3\u4e00\u4e9b\u7406\u8bba\u77e5\u8bc6\u3002 Windows \u670d\u52a1 Windows \u670d\u52a1\u4e5f\u662f\u4e00\u4e2a\u6709\u540c\u5b66\u63d0\u51fa\u6765\u7684\u96be\u70b9\uff0c\u540c\u6837\u6211\u4eec\u89e3\u91ca\u4e00\u4e0b\u670d\u52a1\u51fa\u73b0\u7684\u539f\u56e0\u548c\u539f\u7406\u3002 \u5b9e\u9a8c \u7528\u6237\u8d26\u6237\uff1a\u754c\u9762\u7ba1\u7406\u7528\u6237\uff0c\u547d\u4ee4\u884c\u7ba1\u7406\u7528\u6237\uff0c\u7ed5\u8fc7\u7528\u6237\u767b\u5f55\u3002 \u8fdb\u7a0b\u7ebf\u7a0b\uff1a\u4e3b\u8981\u662f\u4f7f\u7528\u4e24\u4e2a\u5de5\u5177\u67e5\u770b\u8fdb\u7a0b\uff0c\u5c24\u5176\u662f Process Monitor\u3002 \u6ce8\u518c\u8868\u81ea\u542f\u52a8\uff1a\u5229\u7528\u6ce8\u518c\u8868\u5b9e\u73b0\u5f00\u673a\u81ea\u52a8\u542f\u52a8\u8bb0\u4e8b\u672c\u6216\u8005\u81ea\u5df1\u60f3\u8981\u542f\u52a8\u7684\u7a0b\u5e8f\u3002 \u4f5c\u4e1a \u8bf7\u70b9\u51fb \u4f5c\u4e1a\u94fe\u63a5 \u4f7f\u7528 Process Monitor \u89c2\u5bdf homework.exe \u7684\u6587\u4ef6\u64cd\u4f5c\u8fc7\u7a0b\uff0c\u627e\u5230\u5bf9\u5e94\u7684 jpg \u6587\u4ef6\u3002 \u5c06\u627e\u5230\u7684\u56fe\u7247\u4e0a\u4f20\u5230\u4f5c\u4e1a\u4ed3\u5e93\uff0c\u5e76\u4f7f\u7528 Markdown \u64b0\u5199\u5b9e\u9a8c\u62a5\u544a\u3002 \u9644\u4ef6 \u70b9\u51fb\u4e0b\u8f7d ProcessExplorer \u70b9\u51fb\u4e0b\u8f7d ProcessMonitor \u70b9\u51fb\u4e0b\u8f7d homework","title":"Windows \u7ec4\u4ef6\u5b9e\u9a8c"},{"location":"cms/windows-components/#_1","text":"\u672c\u8282\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff1a\u4f5c\u4e1a\u56de\u987e\u3001\u89c6\u9891\u96be\u70b9\u5206\u6790\u3001\u5b9e\u9a8c\u3002","title":"\u6982\u8ff0"},{"location":"cms/windows-components/#_2","text":"\u4e0a\u6b21\u4f5c\u4e1a\u7684\u4e3b\u8981\u96be\u70b9\u5728\u4e8e\u63d0\u4ea4\u9700\u8981\u4f7f\u7528 git \u5e76\u5b66\u4f1a\u914d\u7f6e Github \u8d26\u53f7\u3002 \u53c2\u8003\u89c6\u9891\uff1a Github \u914d\u7f6e\u90e8\u5206 \u7f16\u8f91\u63d0\u4ea4\u90e8\u5206","title":"\u4f5c\u4e1a\u56de\u987e"},{"location":"cms/windows-components/#markdown-cheet-sheet","text":"\u9274\u4e8e\u90e8\u5206\u540c\u5b66\u8fd8\u662f\u5bf9 Markdown \u4e0d\u592a\u719f\u6089\uff0c\u8fd9\u91cc\u7ed9\u5927\u5bb6\u63a8\u8350 Markdown Guide \u3002\u8fd9\u4e2a\u7f51\u7ad9\u662f\u4e00\u4e2a Markdown \u5b66\u4e60\u7ad9\u70b9\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e0a\u53bb\u5b66\u4e60\u4e00\u4e0b\u8bed\u6cd5\u3002\u4e0b\u9762\u4e00\u5c0f\u8282\u5c31\u662f\u53c2\u8003\u4ed6\u4eec\u7684 Markdown Cheet Sheet \u7ffb\u8bd1\u7684\u3002\u5f53\u7136\u8fd8\u6709\u5f88\u591a\u4e2d\u6587\u6559\u7a0b\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u8865\u4e60\u3002","title":"Markdown Cheet Sheet"},{"location":"cms/windows-components/#_3","text":"\u5143\u7d20 \u8bed\u6cd5 \u6807\u9898 # H1 ## H2 ### H3 \u7c97\u4f53 **bold text** \u659c\u4f53 _italicized text_ \u5f15\u7528 > blockquote \u6709\u5e8f\u5217\u8868 1. First item 2. Second item 3. Third item \u65e0\u5e8f\u5217\u8868 - First item - Second item - Third item \u4ee3\u7801 code \u6a2a\u5411\u5206\u5272\u7ebf --- \u8d85\u94fe\u63a5 [title](https://www.example.com) \u56fe\u7247 ![alt text](image.jpg)","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"cms/windows-components/#_4","text":"\u5143\u7d20 \u8bed\u6cd5 \u8868\u683c | Syntax | Description | | ----------- | ----------- | | Header | Title | |Paragraph | Text | Fenced Code Block ``` { \" firstName\": \"John\", \"lastName\": \"Smith\", \"age\": 25 } ``` \u811a\u6ce8 Here's a sentence with a footnote. [^1] [^1]: This is the footnote. \u6807\u9898 id ### My Great Heading {#custom-id} \u5b9a\u4e49\u5217\u8868 term : definition \u5212\u6389 ~~The world is flat.~~ \u4efb\u52a1\u5217\u8868 - [x] Write the press release - [ ] Update the website - [ ] Contact the media","title":"\u6269\u5c55\u8bed\u6cd5"},{"location":"cms/windows-components/#_5","text":"","title":"\u89c6\u9891\u96be\u70b9\u5206\u6790"},{"location":"cms/windows-components/#windows","text":"\u90e8\u5206\u540c\u5b66\u53cd\u5e94\u7b2c\u4e8c\u4e2a\u89c6\u9891\uff0c\u5373\u5b9e\u9a8c\u90e8\u5206\u770b\u4e0d\u61c2\uff0c\u8fd9\u90e8\u5206\u9700\u8981\u8865\u5145\u7406\u8bba\u77e5\u8bc6\uff0c\u90a3\u4e48\u6211\u4eec\u8ddf\u7740\u89c6\u9891\u770b\u770b\uff0c\u7ed9\u5927\u5bb6\u8865\u5145\u8bb2\u89e3\u4e00\u4e9b\u7406\u8bba\u77e5\u8bc6\u3002","title":"Windows \u8fdb\u7a0b\u7ebf\u7a0b"},{"location":"cms/windows-components/#windows_1","text":"Windows \u670d\u52a1\u4e5f\u662f\u4e00\u4e2a\u6709\u540c\u5b66\u63d0\u51fa\u6765\u7684\u96be\u70b9\uff0c\u540c\u6837\u6211\u4eec\u89e3\u91ca\u4e00\u4e0b\u670d\u52a1\u51fa\u73b0\u7684\u539f\u56e0\u548c\u539f\u7406\u3002","title":"Windows \u670d\u52a1"},{"location":"cms/windows-components/#_6","text":"\u7528\u6237\u8d26\u6237\uff1a\u754c\u9762\u7ba1\u7406\u7528\u6237\uff0c\u547d\u4ee4\u884c\u7ba1\u7406\u7528\u6237\uff0c\u7ed5\u8fc7\u7528\u6237\u767b\u5f55\u3002 \u8fdb\u7a0b\u7ebf\u7a0b\uff1a\u4e3b\u8981\u662f\u4f7f\u7528\u4e24\u4e2a\u5de5\u5177\u67e5\u770b\u8fdb\u7a0b\uff0c\u5c24\u5176\u662f Process Monitor\u3002 \u6ce8\u518c\u8868\u81ea\u542f\u52a8\uff1a\u5229\u7528\u6ce8\u518c\u8868\u5b9e\u73b0\u5f00\u673a\u81ea\u52a8\u542f\u52a8\u8bb0\u4e8b\u672c\u6216\u8005\u81ea\u5df1\u60f3\u8981\u542f\u52a8\u7684\u7a0b\u5e8f\u3002","title":"\u5b9e\u9a8c"},{"location":"cms/windows-components/#_7","text":"\u8bf7\u70b9\u51fb \u4f5c\u4e1a\u94fe\u63a5 \u4f7f\u7528 Process Monitor \u89c2\u5bdf homework.exe \u7684\u6587\u4ef6\u64cd\u4f5c\u8fc7\u7a0b\uff0c\u627e\u5230\u5bf9\u5e94\u7684 jpg \u6587\u4ef6\u3002 \u5c06\u627e\u5230\u7684\u56fe\u7247\u4e0a\u4f20\u5230\u4f5c\u4e1a\u4ed3\u5e93\uff0c\u5e76\u4f7f\u7528 Markdown \u64b0\u5199\u5b9e\u9a8c\u62a5\u544a\u3002","title":"\u4f5c\u4e1a"},{"location":"cms/windows-components/#_8","text":"\u70b9\u51fb\u4e0b\u8f7d ProcessExplorer \u70b9\u51fb\u4e0b\u8f7d ProcessMonitor \u70b9\u51fb\u4e0b\u8f7d homework","title":"\u9644\u4ef6"},{"location":"cms/windows-install-homework/","text":"Github \u53ca \u4f5c\u4e1a \u8f6f\u4ef6\u5b89\u88c5 \u5728\u8fdb\u884c\u4f5c\u4e1a\u4ed3\u5e93\u7684\u83b7\u53d6\u3001\u63d0\u4ea4\u7b49\u64cd\u4f5c\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5b89\u88c5\u4e24\u4e2a\u8f6f\u4ef6\uff1a Git for Windows TortoiseGit Git for Windows \u662f Windows \u4e0b\u7684\u547d\u4ee4\u884c git \u5de5\u5177\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u91cd\u542f cmd \u5e76\u8f93\u5165 git \u3002\u5982\u679c\u6b63\u786e\u8f93\u51fa\u547d\u4ee4\u5e2e\u52a9\uff0c\u5219\u8bf4\u660e\u5b89\u88c5\u6210\u529f\uff0c\u4e14\u7cfb\u7edf\u53f3\u952e\u83dc\u5355\u4f1a\u591a\u51fa Git GUI Here \u4ee5\u53ca Git Bash Here \u4e24\u4e2a\u9009\u9879\u3002 \u4e3a\u4e86\u4f7f\u7528\u56fe\u5f62\u5316\u754c\u9762\u6765\u4f7f\u7528 git \uff0c\u6211\u4eec\u53ef\u4ee5\u5b89\u88c5\u4fd7\u79f0\u7684\u201c\u5c0f\u4e4c\u9f9f\u201d\uff0c\u5373 TortoiseGit \u3002\u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4f7f\u7528\u7cfb\u7edf\u53f3\u952e\u83dc\u5355\u6765\u8fd0\u884c\u5b9e\u73b0\u5404\u79cd git \u64cd\u4f5c\u3002 \u4ee5\u4e0a\u4e24\u4e2a\u8f6f\u4ef6\u7684\u5b89\u88c5\u8fc7\u7a0b\u4e0d\u5728\u6b64\u8d58\u8ff0\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c TortoiseGit \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728\u5176\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 bin \u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e2a puttygen.exe \u53ef\u7528\u4e8e\u751f\u6210\u516c\u79c1\u94a5\u5bf9\uff0c\u540e\u9762\u7684\u6b65\u9aa4\u4e2d\u4f1a\u7528\u5230\u3002 \u8bbf\u95ee\u4f5c\u4e1a\u4ed3\u5e93 \u9996\u5148\u5927\u5bb6\u9700\u8981\u6ce8\u518c\u4e00\u4e2a Github \u8d26\u53f7\uff0c\u63a8\u8350\u4f7f\u7528\u5b66\u6821\u90ae\u7bb1\u6ce8\u518c\uff0c\u53ef\u4ee5\u7533\u8bf7\u4e00\u4e9b\u6559\u80b2\u4f18\u60e0\u548c\u798f\u5229\u3002\u6ce8\u518c\u5b8c\u6210\u540e\uff0c\u8bf7\u8bbf\u95ee\u4ee5\u4e0b\u94fe\u63a5\uff1a \u4f5c\u4e1a\u94fe\u63a5 \u70b9\u51fb\u4ee5\u4e0a\u8fde\u63a5\uff0c\u767b\u5f55 Github \u8d26\u53f7\u5e76\u8fdb\u884c\u6388\u6743\u540e\uff0c\u4f1a\u8fdb\u5165\u5230\u4ee5\u4e0b\u754c\u9762\uff1a \u70b9\u51fb\u81ea\u5df1\u7684\u5b66\u53f7\u5e76\u7ed1\u5b9a\u540e\uff0c Accept this assignment \u5373\u53ef\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u63d0\u4ea4\u4f5c\u4e1a\u7684\u4ed3\u5e93\u3002 \u70b9\u51fb\u4e0a\u56fe\u4e2d\u7ea2\u7ebf\u753b\u51fa\u6765\u7684\u94fe\u63a5\u5373\u53ef\u8df3\u8f6c\u5230\u4ed3\u5e93\u9875\u9762\u3002 \u70b9\u51fb\u7eff\u8272\u7684 Clone or download \u5e76\u9009\u4e2d\u590d\u5236 Clone with SSH \u7684\u94fe\u63a5\uff0c\u53ef\u4ee5\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9636\u6bb5\u3002 \u914d\u7f6e\u516c\u79c1\u94a5\u5bf9 \u8981\u4f7f\u7528 git \u6765 clone \u4f5c\u4e1a\u4ed3\u5e93\uff0c\u9996\u5148\u8981\u4f7f\u7528\u4e4b\u524d\u63d0\u5230\u7684 puttygen.exe \u751f\u6210\u516c\u79c1\u94a5\u5bf9\u6765\u751f\u6210\u516c\u79c1\u94a5\u5bf9\u3002 \u70b9\u51fb Generate \u5e76\u6301\u7eed\u6643\u52a8\u9f20\u6807\uff0c\u5373\u53ef\u5b8c\u6210\u516c\u79c1\u94a5\u751f\u6210\u3002 \u4e0a\u56fe\u4e2d\u7ea2\u8272\u533a\u57df\u662f\u516c\u94a5\u7684\u6587\u672c\uff0c\u8bf7\u5168\u9009\u7136\u540e\u590d\u5236\u5230\u526a\u8d34\u677f\uff0c\u6253\u5f00 Github \u5e76\u767b\u5f55\u81ea\u5df1\u8d26\u6237\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u4e2a\u4eba\u5934\u50cf\uff0c\u5728\u5f39\u51fa\u7684\u4e0b\u62c9\u83dc\u5355\u4e2d\u9009\u62e9 Settings \u8fdb\u5165\u8bbe\u7f6e\u9875\u9762\uff0c\u5e76\u70b9\u51fb\u8bbe\u7f6e SSH and GPG keys \u7136\u540e\u70b9\u51fb New SSH key \u6765\u65b0\u5efa\u4e00\u4e2a SSH key \u3002 \u5728\u65b0\u5efa SSH key \u7684\u9875\u9762\u5c06\u521a\u624d\u7528 puttygen \u751f\u6210\u5e76\u590d\u5236\u4e86\u7684\u6587\u672c\u5f62\u5f0f\u516c\u94a5 (\u4ee5 ssh-rsa \u5f00\u5934\u7684\u4e00\u5927\u4e32\u5b57\u7b26) \u8d34\u5728 Key \u5bf9\u5e94\u533a\u57df\uff0c\u5e76\u5728 Title \u5904\u586b\u5165\u81ea\u5df1\u559c\u6b22\u7684\u540d\u5b57\u4fdd\u5b58\u5373\u53ef\u3002 \u8d26\u53f7\u4e2d\u7684\u516c\u94a5\u914d\u7f6e\u5c31\u5b8c\u6210\u4e86\uff0c\u7136\u540e\u5728 puttygen.exe \u7684\u754c\u9762\u4e2d\u70b9 Save private key \u5e76\u786e\u5b9a\u4e0d\u7528\u5bc6\u7801\u4fdd\u62a4\u540e\uff0c\u9009\u62e9\u4e00\u4e2a\u8def\u5f84\u5b58\u653e\u81ea\u5df1\u7684\u79c1\u94a5\u3002 clone \u4ed3\u5e93 \u5b8c\u6210\u4e0a\u9762\u4e24\u4e2a\u6b65\u9aa4\uff0c\u5373\u590d\u5236\u4e86\u4e2a\u4eba\u4ed3\u5e93\u7684 Clone with SSH \u94fe\u63a5\uff0c\u5e76\u5b8c\u6210\u4e86\u516c\u79c1\u94a5\u5bf9\u914d\u7f6e\u540e\uff0c\u5373\u53ef\u5f00\u59cb clone \u4ed3\u5e93\u3002 \u9009\u62e9\u81ea\u5df1\u5b58\u653e\u4ee3\u7801\u7684\u6587\u4ef6\u5939\uff0c\u7a7a\u767d\u5904\u70b9\u53f3\u952e\uff0c\u5728\u5f39\u51fa\u7684\u7cfb\u7edf\u53f3\u952e\u83dc\u5355\u4e2d\u9009\u62e9 Git Clone... \u9009\u9879\uff0c\u4f1a\u81ea\u52a8\u5f39\u51fa clone \u754c\u9762\u3002 URL \u662f\u4e2a\u4eba\u4f5c\u4e1a\u4ed3\u5e93\u7684 Clone with SSH \u94fe\u63a5\uff0c Directory \u662f\u4f60\u8981\u5b58\u653e\u4ee3\u7801\u7684\u672c\u5730\u8def\u5f84\uff0c Load Putty Key \u5219\u662f\u79c1\u94a5\u7684\u8def\u5f84\uff08\u6ce8\u610f\uff1a\u79c1\u94a5\u5fc5\u987b\u662f\u4e0e\u521a\u624d\u5728 Github \u8d26\u53f7\u4e2d\u7c98\u8d34\u7684\u516c\u94a5\u662f\u540c\u65f6\u751f\u6210\u7684\u624d\u80fd\u8ba4\u8bc1\u6210\u529f\uff09\uff0c\u7136\u540e\u70b9 OK \u5c31\u4f1a\u628a\u4f5c\u4e1a\u4ed3\u5e93 clone \u5230\u672c\u5730\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u4ee3\u7801\u5566\u3002 \u672c\u6b21\u4f5c\u4e1a\u8981\u6c42 \u4f7f\u7528 Markdown \u8bb0\u5f55\u5b89\u88c5 Windows\u7684\u8fc7\u7a0b\uff0ccommit \u5e76 push \u5230\u4e2a\u4eba\u4f5c\u4e1a\u4ed3\u5e93\u5373\u53ef\u3002 \u9644\u52a0\u8d44\u6599 Git \u5b98\u65b9\u89c6\u9891\u4e2d\u5b57 https://www.nowcoder.com/courses/2","title":"Windows \u5b89\u88c5\u5b9e\u9a8c"},{"location":"cms/windows-install-homework/#github","text":"","title":"Github \u53ca \u4f5c\u4e1a"},{"location":"cms/windows-install-homework/#_1","text":"\u5728\u8fdb\u884c\u4f5c\u4e1a\u4ed3\u5e93\u7684\u83b7\u53d6\u3001\u63d0\u4ea4\u7b49\u64cd\u4f5c\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5b89\u88c5\u4e24\u4e2a\u8f6f\u4ef6\uff1a Git for Windows TortoiseGit Git for Windows \u662f Windows \u4e0b\u7684\u547d\u4ee4\u884c git \u5de5\u5177\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u91cd\u542f cmd \u5e76\u8f93\u5165 git \u3002\u5982\u679c\u6b63\u786e\u8f93\u51fa\u547d\u4ee4\u5e2e\u52a9\uff0c\u5219\u8bf4\u660e\u5b89\u88c5\u6210\u529f\uff0c\u4e14\u7cfb\u7edf\u53f3\u952e\u83dc\u5355\u4f1a\u591a\u51fa Git GUI Here \u4ee5\u53ca Git Bash Here \u4e24\u4e2a\u9009\u9879\u3002 \u4e3a\u4e86\u4f7f\u7528\u56fe\u5f62\u5316\u754c\u9762\u6765\u4f7f\u7528 git \uff0c\u6211\u4eec\u53ef\u4ee5\u5b89\u88c5\u4fd7\u79f0\u7684\u201c\u5c0f\u4e4c\u9f9f\u201d\uff0c\u5373 TortoiseGit \u3002\u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4f7f\u7528\u7cfb\u7edf\u53f3\u952e\u83dc\u5355\u6765\u8fd0\u884c\u5b9e\u73b0\u5404\u79cd git \u64cd\u4f5c\u3002 \u4ee5\u4e0a\u4e24\u4e2a\u8f6f\u4ef6\u7684\u5b89\u88c5\u8fc7\u7a0b\u4e0d\u5728\u6b64\u8d58\u8ff0\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c TortoiseGit \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728\u5176\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 bin \u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e2a puttygen.exe \u53ef\u7528\u4e8e\u751f\u6210\u516c\u79c1\u94a5\u5bf9\uff0c\u540e\u9762\u7684\u6b65\u9aa4\u4e2d\u4f1a\u7528\u5230\u3002","title":"\u8f6f\u4ef6\u5b89\u88c5"},{"location":"cms/windows-install-homework/#_2","text":"\u9996\u5148\u5927\u5bb6\u9700\u8981\u6ce8\u518c\u4e00\u4e2a Github \u8d26\u53f7\uff0c\u63a8\u8350\u4f7f\u7528\u5b66\u6821\u90ae\u7bb1\u6ce8\u518c\uff0c\u53ef\u4ee5\u7533\u8bf7\u4e00\u4e9b\u6559\u80b2\u4f18\u60e0\u548c\u798f\u5229\u3002\u6ce8\u518c\u5b8c\u6210\u540e\uff0c\u8bf7\u8bbf\u95ee\u4ee5\u4e0b\u94fe\u63a5\uff1a \u4f5c\u4e1a\u94fe\u63a5 \u70b9\u51fb\u4ee5\u4e0a\u8fde\u63a5\uff0c\u767b\u5f55 Github \u8d26\u53f7\u5e76\u8fdb\u884c\u6388\u6743\u540e\uff0c\u4f1a\u8fdb\u5165\u5230\u4ee5\u4e0b\u754c\u9762\uff1a \u70b9\u51fb\u81ea\u5df1\u7684\u5b66\u53f7\u5e76\u7ed1\u5b9a\u540e\uff0c Accept this assignment \u5373\u53ef\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u63d0\u4ea4\u4f5c\u4e1a\u7684\u4ed3\u5e93\u3002 \u70b9\u51fb\u4e0a\u56fe\u4e2d\u7ea2\u7ebf\u753b\u51fa\u6765\u7684\u94fe\u63a5\u5373\u53ef\u8df3\u8f6c\u5230\u4ed3\u5e93\u9875\u9762\u3002 \u70b9\u51fb\u7eff\u8272\u7684 Clone or download \u5e76\u9009\u4e2d\u590d\u5236 Clone with SSH \u7684\u94fe\u63a5\uff0c\u53ef\u4ee5\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9636\u6bb5\u3002","title":"\u8bbf\u95ee\u4f5c\u4e1a\u4ed3\u5e93"},{"location":"cms/windows-install-homework/#_3","text":"\u8981\u4f7f\u7528 git \u6765 clone \u4f5c\u4e1a\u4ed3\u5e93\uff0c\u9996\u5148\u8981\u4f7f\u7528\u4e4b\u524d\u63d0\u5230\u7684 puttygen.exe \u751f\u6210\u516c\u79c1\u94a5\u5bf9\u6765\u751f\u6210\u516c\u79c1\u94a5\u5bf9\u3002 \u70b9\u51fb Generate \u5e76\u6301\u7eed\u6643\u52a8\u9f20\u6807\uff0c\u5373\u53ef\u5b8c\u6210\u516c\u79c1\u94a5\u751f\u6210\u3002 \u4e0a\u56fe\u4e2d\u7ea2\u8272\u533a\u57df\u662f\u516c\u94a5\u7684\u6587\u672c\uff0c\u8bf7\u5168\u9009\u7136\u540e\u590d\u5236\u5230\u526a\u8d34\u677f\uff0c\u6253\u5f00 Github \u5e76\u767b\u5f55\u81ea\u5df1\u8d26\u6237\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u4e2a\u4eba\u5934\u50cf\uff0c\u5728\u5f39\u51fa\u7684\u4e0b\u62c9\u83dc\u5355\u4e2d\u9009\u62e9 Settings \u8fdb\u5165\u8bbe\u7f6e\u9875\u9762\uff0c\u5e76\u70b9\u51fb\u8bbe\u7f6e SSH and GPG keys \u7136\u540e\u70b9\u51fb New SSH key \u6765\u65b0\u5efa\u4e00\u4e2a SSH key \u3002 \u5728\u65b0\u5efa SSH key \u7684\u9875\u9762\u5c06\u521a\u624d\u7528 puttygen \u751f\u6210\u5e76\u590d\u5236\u4e86\u7684\u6587\u672c\u5f62\u5f0f\u516c\u94a5 (\u4ee5 ssh-rsa \u5f00\u5934\u7684\u4e00\u5927\u4e32\u5b57\u7b26) \u8d34\u5728 Key \u5bf9\u5e94\u533a\u57df\uff0c\u5e76\u5728 Title \u5904\u586b\u5165\u81ea\u5df1\u559c\u6b22\u7684\u540d\u5b57\u4fdd\u5b58\u5373\u53ef\u3002 \u8d26\u53f7\u4e2d\u7684\u516c\u94a5\u914d\u7f6e\u5c31\u5b8c\u6210\u4e86\uff0c\u7136\u540e\u5728 puttygen.exe \u7684\u754c\u9762\u4e2d\u70b9 Save private key \u5e76\u786e\u5b9a\u4e0d\u7528\u5bc6\u7801\u4fdd\u62a4\u540e\uff0c\u9009\u62e9\u4e00\u4e2a\u8def\u5f84\u5b58\u653e\u81ea\u5df1\u7684\u79c1\u94a5\u3002","title":"\u914d\u7f6e\u516c\u79c1\u94a5\u5bf9"},{"location":"cms/windows-install-homework/#clone","text":"\u5b8c\u6210\u4e0a\u9762\u4e24\u4e2a\u6b65\u9aa4\uff0c\u5373\u590d\u5236\u4e86\u4e2a\u4eba\u4ed3\u5e93\u7684 Clone with SSH \u94fe\u63a5\uff0c\u5e76\u5b8c\u6210\u4e86\u516c\u79c1\u94a5\u5bf9\u914d\u7f6e\u540e\uff0c\u5373\u53ef\u5f00\u59cb clone \u4ed3\u5e93\u3002 \u9009\u62e9\u81ea\u5df1\u5b58\u653e\u4ee3\u7801\u7684\u6587\u4ef6\u5939\uff0c\u7a7a\u767d\u5904\u70b9\u53f3\u952e\uff0c\u5728\u5f39\u51fa\u7684\u7cfb\u7edf\u53f3\u952e\u83dc\u5355\u4e2d\u9009\u62e9 Git Clone... \u9009\u9879\uff0c\u4f1a\u81ea\u52a8\u5f39\u51fa clone \u754c\u9762\u3002 URL \u662f\u4e2a\u4eba\u4f5c\u4e1a\u4ed3\u5e93\u7684 Clone with SSH \u94fe\u63a5\uff0c Directory \u662f\u4f60\u8981\u5b58\u653e\u4ee3\u7801\u7684\u672c\u5730\u8def\u5f84\uff0c Load Putty Key \u5219\u662f\u79c1\u94a5\u7684\u8def\u5f84\uff08\u6ce8\u610f\uff1a\u79c1\u94a5\u5fc5\u987b\u662f\u4e0e\u521a\u624d\u5728 Github \u8d26\u53f7\u4e2d\u7c98\u8d34\u7684\u516c\u94a5\u662f\u540c\u65f6\u751f\u6210\u7684\u624d\u80fd\u8ba4\u8bc1\u6210\u529f\uff09\uff0c\u7136\u540e\u70b9 OK \u5c31\u4f1a\u628a\u4f5c\u4e1a\u4ed3\u5e93 clone \u5230\u672c\u5730\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u4ee3\u7801\u5566\u3002","title":"clone \u4ed3\u5e93"},{"location":"cms/windows-install-homework/#_4","text":"\u4f7f\u7528 Markdown \u8bb0\u5f55\u5b89\u88c5 Windows\u7684\u8fc7\u7a0b\uff0ccommit \u5e76 push \u5230\u4e2a\u4eba\u4f5c\u4e1a\u4ed3\u5e93\u5373\u53ef\u3002","title":"\u672c\u6b21\u4f5c\u4e1a\u8981\u6c42"},{"location":"cms/windows-install-homework/#_5","text":"Git \u5b98\u65b9\u89c6\u9891\u4e2d\u5b57 https://www.nowcoder.com/courses/2","title":"\u9644\u52a0\u8d44\u6599"},{"location":"cms/windows-install/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"Windows \u5b89\u88c5"},{"location":"cms/windows-process-thread/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"Windows \u8fdb\u7a0b\u7ebf\u7a0b"},{"location":"cms/windows-service/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"Windows \u670d\u52a1"},{"location":"python/basic/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"python/control-flow/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u793a\u4f8b \u6267\u7740\u4e8e\u8868\u767d\u7684 Python\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 import tkinter as tk import random # \u6309\u94ae\u88ab\u70b9\u51fb\u540e\u6267\u884c\u8fd9\u4e2a\u51fd\u6570 def hit_me (): print ( '\u4e0d\u559c\u6b22' ) # \u6bcf\u5f53\u9f20\u6807 Enter \u6309\u94ae\u65f6\uff0c\u6267\u884c\u8fd9\u4e2a\u51fd\u6570 # \u6309\u94ae\u5c31\u9003\u8dd1\u4e86 def escape ( event ): b = event . widget # \u83b7\u53d6\u6309\u94ae\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u4ee5\u53ca\u9f20\u6807\u7684x,y\u5750\u6807 width = b . winfo_width () height = b . winfo_height () mouse_x = b . winfo_x () + event . x mouse_y = b . winfo_y () + event . y while True : # \u968f\u673a\u65b0\u7684\u6309\u94ae\u4f4d\u7f6e x = random . randint ( 0 , 800 ) y = random . randint ( 0 , 600 ) # \u65b0\u7684\u4f4d\u7f6e\u6ca1\u6709\u5728\u9f20\u6807\u4e0a\uff0c\u5c31\u8df3\u51fa\u5faa\u73af if ( x < mouse_x or x > mouse_x + width and x + width < 800 ) and ( y < mouse_y or y > mouse_y + height and y + height < 600 ): break # \u5c06\u6309\u94ae\u79fb\u52a8\u5230\u65b0\u4f4d\u7f6e b . place ( x = x , y = y ) # \u521b\u5efa\u4e00\u4e2a\u7a97\u4f53 window = tk . Tk () window . title ( '\u6267\u7740\u4e8e\u8868\u767d\u7684 Python' ) # \u4fee\u6539\u6807\u9898 window . geometry ( '800x600' ) # \u8bbe\u5b9a\u7a97\u53e3\u5206\u8fa8\u7387 800x600 # \u521b\u5efa\u4e00\u4e2a\u6309\u94ae button = tk . Button ( window , # \u7236\u63a7\u4ef6\uff0c\u5373\u8fd9\u4e2abutton\u5c5e\u4e8ewindow text = '\u4e0d\u559c\u6b22' , # \u663e\u793a\u5728\u6309\u94ae\u4e0a\u7684\u6587\u5b57 command = hit_me ) # \u70b9\u51fb\u6309\u94ae\u65f6\u6267\u884c\u7684\u547d\u4ee4 # \u76d1\u542c\u6309\u94ae\u7684\u6d88\u606f\uff0c\u6d88\u606f <Enter> \uff0c\u5373\u9f20\u6807\u8fdb\u5165\u65f6\uff0c\u8c03\u7528escape\u51fd\u6570 button . bind ( '<Enter>' , escape ) # \u628abutton\u6253\u5305\u5230\u7a97\u53e3\u4e0a\uff0c\u9ed8\u8ba4\u60c5\u51b5\u5c45\u4e2d\u663e\u793a\u5728\u6700\u4e0a\u9762 button . pack () # \u6309\u94ae\u4f4d\u7f6e # \u663e\u793a\u7a97\u53e3\uff0c\u5f00\u59cb\u5904\u7406\u5404\u79cd\u7a97\u53e3\u6d88\u606f\uff0c\u8fd9\u4e2a\u5faa\u73af\u4e0d\u4f1a\u9000\u51fa\uff0c\u9664\u975e\u5173\u95ed\u7a97\u53e3 window . mainloop () \u4f5c\u4e1a \u4f5c\u4e1a\u94fe\u63a5\uff1a https://classroom.github.com/a/D_m4Mzhb \u672c\u6b21\u4f5c\u4e1a\u751f\u6210\u7684\u662f\u4e00\u4e2a\u7a7a\u7684\u4ed3\u5e93\uff0c\u8bf7\u81ea\u884c\u7f16\u5199 Base64 \u7f16\u89e3\u7801\u4ee3\u7801\u5e76\u63d0\u4ea4\u3002 \u5982\u679c\u6211\u6ca1\u6709\u660e\u786e\u8bf4\u660e\uff0c\u6240\u6709\u4f5c\u4e1a\u90fd \u4e0d\u5fc5\u987b \u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\uff0c\u4f46\u662f\u4ee3\u7801\u8bf7\u5199\u597d\u6ce8\u91ca\u3002 \u672c\u6b21 Base64 \u7f16\u7801\u8fc7\u7a0b\u5e94\u8be5\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8be5\u5b57\u7b26\u4e32\u7ecf\u8fc7 base64 \u7f16\u7801\u540e\u7684\u7ed3\u679c\uff08\u7c7b\u578b\u4e5f\u662f\u5b57\u7b26\u4e32\uff09\uff1b\u89e3\u7801\u5219\u53cd\u8fc7\u6765\u3002","title":"\u7a0b\u5e8f\u7ed3\u6784"},{"location":"python/control-flow/#_1","text":"\u6267\u7740\u4e8e\u8868\u767d\u7684 Python\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 import tkinter as tk import random # \u6309\u94ae\u88ab\u70b9\u51fb\u540e\u6267\u884c\u8fd9\u4e2a\u51fd\u6570 def hit_me (): print ( '\u4e0d\u559c\u6b22' ) # \u6bcf\u5f53\u9f20\u6807 Enter \u6309\u94ae\u65f6\uff0c\u6267\u884c\u8fd9\u4e2a\u51fd\u6570 # \u6309\u94ae\u5c31\u9003\u8dd1\u4e86 def escape ( event ): b = event . widget # \u83b7\u53d6\u6309\u94ae\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u4ee5\u53ca\u9f20\u6807\u7684x,y\u5750\u6807 width = b . winfo_width () height = b . winfo_height () mouse_x = b . winfo_x () + event . x mouse_y = b . winfo_y () + event . y while True : # \u968f\u673a\u65b0\u7684\u6309\u94ae\u4f4d\u7f6e x = random . randint ( 0 , 800 ) y = random . randint ( 0 , 600 ) # \u65b0\u7684\u4f4d\u7f6e\u6ca1\u6709\u5728\u9f20\u6807\u4e0a\uff0c\u5c31\u8df3\u51fa\u5faa\u73af if ( x < mouse_x or x > mouse_x + width and x + width < 800 ) and ( y < mouse_y or y > mouse_y + height and y + height < 600 ): break # \u5c06\u6309\u94ae\u79fb\u52a8\u5230\u65b0\u4f4d\u7f6e b . place ( x = x , y = y ) # \u521b\u5efa\u4e00\u4e2a\u7a97\u4f53 window = tk . Tk () window . title ( '\u6267\u7740\u4e8e\u8868\u767d\u7684 Python' ) # \u4fee\u6539\u6807\u9898 window . geometry ( '800x600' ) # \u8bbe\u5b9a\u7a97\u53e3\u5206\u8fa8\u7387 800x600 # \u521b\u5efa\u4e00\u4e2a\u6309\u94ae button = tk . Button ( window , # \u7236\u63a7\u4ef6\uff0c\u5373\u8fd9\u4e2abutton\u5c5e\u4e8ewindow text = '\u4e0d\u559c\u6b22' , # \u663e\u793a\u5728\u6309\u94ae\u4e0a\u7684\u6587\u5b57 command = hit_me ) # \u70b9\u51fb\u6309\u94ae\u65f6\u6267\u884c\u7684\u547d\u4ee4 # \u76d1\u542c\u6309\u94ae\u7684\u6d88\u606f\uff0c\u6d88\u606f <Enter> \uff0c\u5373\u9f20\u6807\u8fdb\u5165\u65f6\uff0c\u8c03\u7528escape\u51fd\u6570 button . bind ( '<Enter>' , escape ) # \u628abutton\u6253\u5305\u5230\u7a97\u53e3\u4e0a\uff0c\u9ed8\u8ba4\u60c5\u51b5\u5c45\u4e2d\u663e\u793a\u5728\u6700\u4e0a\u9762 button . pack () # \u6309\u94ae\u4f4d\u7f6e # \u663e\u793a\u7a97\u53e3\uff0c\u5f00\u59cb\u5904\u7406\u5404\u79cd\u7a97\u53e3\u6d88\u606f\uff0c\u8fd9\u4e2a\u5faa\u73af\u4e0d\u4f1a\u9000\u51fa\uff0c\u9664\u975e\u5173\u95ed\u7a97\u53e3 window . mainloop ()","title":"\u793a\u4f8b"},{"location":"python/control-flow/#_2","text":"\u4f5c\u4e1a\u94fe\u63a5\uff1a https://classroom.github.com/a/D_m4Mzhb \u672c\u6b21\u4f5c\u4e1a\u751f\u6210\u7684\u662f\u4e00\u4e2a\u7a7a\u7684\u4ed3\u5e93\uff0c\u8bf7\u81ea\u884c\u7f16\u5199 Base64 \u7f16\u89e3\u7801\u4ee3\u7801\u5e76\u63d0\u4ea4\u3002 \u5982\u679c\u6211\u6ca1\u6709\u660e\u786e\u8bf4\u660e\uff0c\u6240\u6709\u4f5c\u4e1a\u90fd \u4e0d\u5fc5\u987b \u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\uff0c\u4f46\u662f\u4ee3\u7801\u8bf7\u5199\u597d\u6ce8\u91ca\u3002 \u672c\u6b21 Base64 \u7f16\u7801\u8fc7\u7a0b\u5e94\u8be5\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8be5\u5b57\u7b26\u4e32\u7ecf\u8fc7 base64 \u7f16\u7801\u540e\u7684\u7ed3\u679c\uff08\u7c7b\u578b\u4e5f\u662f\u5b57\u7b26\u4e32\uff09\uff1b\u89e3\u7801\u5219\u53cd\u8fc7\u6765\u3002","title":"\u4f5c\u4e1a"},{"location":"python/data-types-advanced/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u793a\u4f8b\u4ee3\u7801 \u5217\u8868 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # \u521d\u59cb\u9009\u8bfe\u7684\u540c\u5b66 students = [ 20190001 + x for x in range ( 10 )] # \u65b0\u589e\u4e00\u4f4d students . append ( 20191234 ) # \u65b0\u589e\u4e00\u6279 students . extend ( range ( 20192020 , 20192030 )) # \u628a\u67d0\u4f4d\u540c\u5b66\u52a0\u5230\u6700\u524d\u9762 students . insert ( 0 , 20190000 ) # \u66ff\u6362\uff0c\u88ab\u66ff\u6362\u7684\u957f\u5ea6\u53ef\u4ee5\u4e0d\u7b49\u4e8e\u66ff\u6362\u5185\u5bb9\u7684\u957f\u5ea6 students [ 5 : 15 ] = range ( 20192333 , 20192340 ) # \u6709\u6b65\u957f\u7684\u66ff\u6362\u5219\u8981\u6c42\u4e24\u8fb9\u7684\u5e8f\u5217\u957f\u5ea6\u4e00\u6837 students [ 0 : 5 : 2 ] = [ 20195333 , 20196333 , 20197333 ] # \u6392\u5e8f\u548c\u53cd\u5e8f students . sort () students . reverse () if 20195333 in students : print ( '\u4f60\u9009\u4e0a\u4e86\uff0c\u540c\u5b66\u3002' ) students . remove ( 20195333 ) print ( '\u4f60\u53c8\u9000\u4e86\uff0c\u540c\u5b66\u3002' ) del students [:] print ( students ) del students print ( students ) \u5143\u7ec4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # \u5143\u7ec4\u4e2d\u53ef\u4ee5\u53ea\u6709\u4e00\u9879\u5185\u5bb9\uff0c\u5355\u72ec\u4f7f\u7528\u5143\u7ec4\u65f6\u62ec\u53f7\u53ef\u4ee5\u7701\u7565\uff0c\u4f46\u9017\u53f7\u662f\u4e0d\u80fd\u7701\u7565\u7684 teachers = 'anjing' , # \u5143\u7ec4\u652f\u6301\u62fc\u63a5\u64cd\u4f5c more_teachers = teachers + ( 'Tom' , 'Jerry' ) # \u652f\u6301\u5168\u5207\u7247\u590d\u5236\u5143\u7ec4\uff0c\u4f46\u4e0d\u652f\u6301 .copy() same_teachers = more_teachers [:] # \u652f\u6301\u67e5\u627e\uff0c\u4f46\u4e0d\u652f\u6301\u6392\u5e8f .sort() same_teachers . index ( 'anjing' ) # \u652f\u6301\u54c8\u5e0c print ( hash ( same_teachers )) # \u53ef\u4ee5\u6574\u4f53\u5220\u9664\u4f46\u4e0d\u652f\u6301\u90e8\u5206\u5220\u9664 del more_teachers del teachers \u5bf9\u4e8e\u5e8f\u5217\u7684\u8fdb\u9636\u5faa\u73af\u6280\u5de7 1 2 3 4 5 6 7 8 9 10 11 # \u540c\u65f6\u53d6\u51fa\u7d22\u5f15\u6570\u5b57\u548c\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20 for index , student in enumerate ( students ): print ( index , student ) # \u540c\u65f6\u5faa\u73af\u4e24\u4e2a\u5e8f\u5217 import random scores = [ random . randint ( 60 , 100 ) for x in range ( 10 )] students = [ 20190001 + x for x in range ( 10 )] for score , student in zip ( scores , students ): print ( score , student ) \u96c6\u5408 1 2 3 4 5 6 7 8 9 10 11 12 13 # \u7b7e\u5230\u7684\u5b66\u751f checkin = [ 20190001 , 20190002 , 20190003 , 20190004 , 20190002 ] # \u4e00\u952e\u53bb\u91cd unique_checkin = list ( set ( checkin )) # \u6240\u6709\u5b66\u751f\u540d\u5355 all_students = [ 20190001 , 20190002 , 20190003 , 20190004 , 20190005 , 20190006 ] # \u6ca1\u6765\u7684\uff0c\u6293\u4f4f\u4f60\u4e86 nauty_kids = set ( all_students ) - set ( checkin ) print ( nauty_kids ) \u5b57\u5178 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import random scores = [ random . randint ( 60 , 100 ) for x in range ( 10 )] students = [ 20190001 + x for x in range ( 10 )] transcript = dict ( zip ( students , scores )) # \u4f20\u7edf\u5199\u6cd5 ranking = sorted ( transcript . items (), key = lambda x : x [ 1 ], reverse = True ) ranked_transcript = dict ( ranking ) # python 3.6+ ranked_transcript = { k : v for k , v in sorted ( transcript . items (), key = lambda item : item [ 1 ], reverse = True ) } print ( ranked_transcript ) \u6df7\u5408\u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 import random # \u751f\u6210\u4e00\u4e2a\u5047\u7684\u540d\u5355 # \u5305\u542b 10 \u4e2a\u5b66\u751f students = [] for x in range ( 10 ): # \u5229\u7528\u5b57\u6bcd\u5bf9\u5e94 ASCII \u7801\u589e\u52a0\u6765\u81ea\u52a8\u8d77\u540d name = '\u5c0f' + chr ( ord ( 'A' ) + x ) student = { 'name' : name , 'id' : 20190001 + x , # \u6309\u987a\u5e8f\u751f\u6210\u5b66\u53f7 'score' : random . randint ( 60 , 100 ) # \u968f\u673a\u4e00\u4e2a\u6210\u7ee9 } # \u5c06\u4e00\u540d\u5b66\u751f\u5bf9\u5e94\u7684\u5b57\u5178\u52a0\u5165\u5230\u540d\u5355\u4e2d students . append ( student ) # \u8f93\u51fa\u540d\u5355\u4f5c\u4e3a\u8c03\u8bd5\u4fe1\u606f print ( students ) # \u5bf9\u540d\u5355\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u7684key\u662f\u6bcf\u4e2a\u5b66\u751f\u7684\u6210\u7ee9\uff0c\u5012\u5e8f students . sort ( key = lambda x : x [ 'score' ], reverse = True ) # \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6210\u7ee9\u5355 for student in students : print ( student [ 'id' ], student [ 'name' ], student [ 'score' ])","title":"\u6570\u636e\u7c7b\u578b\u8fdb\u9636"},{"location":"python/data-types-advanced/#_1","text":"","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"python/data-types-advanced/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # \u521d\u59cb\u9009\u8bfe\u7684\u540c\u5b66 students = [ 20190001 + x for x in range ( 10 )] # \u65b0\u589e\u4e00\u4f4d students . append ( 20191234 ) # \u65b0\u589e\u4e00\u6279 students . extend ( range ( 20192020 , 20192030 )) # \u628a\u67d0\u4f4d\u540c\u5b66\u52a0\u5230\u6700\u524d\u9762 students . insert ( 0 , 20190000 ) # \u66ff\u6362\uff0c\u88ab\u66ff\u6362\u7684\u957f\u5ea6\u53ef\u4ee5\u4e0d\u7b49\u4e8e\u66ff\u6362\u5185\u5bb9\u7684\u957f\u5ea6 students [ 5 : 15 ] = range ( 20192333 , 20192340 ) # \u6709\u6b65\u957f\u7684\u66ff\u6362\u5219\u8981\u6c42\u4e24\u8fb9\u7684\u5e8f\u5217\u957f\u5ea6\u4e00\u6837 students [ 0 : 5 : 2 ] = [ 20195333 , 20196333 , 20197333 ] # \u6392\u5e8f\u548c\u53cd\u5e8f students . sort () students . reverse () if 20195333 in students : print ( '\u4f60\u9009\u4e0a\u4e86\uff0c\u540c\u5b66\u3002' ) students . remove ( 20195333 ) print ( '\u4f60\u53c8\u9000\u4e86\uff0c\u540c\u5b66\u3002' ) del students [:] print ( students ) del students print ( students )","title":"\u5217\u8868"},{"location":"python/data-types-advanced/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # \u5143\u7ec4\u4e2d\u53ef\u4ee5\u53ea\u6709\u4e00\u9879\u5185\u5bb9\uff0c\u5355\u72ec\u4f7f\u7528\u5143\u7ec4\u65f6\u62ec\u53f7\u53ef\u4ee5\u7701\u7565\uff0c\u4f46\u9017\u53f7\u662f\u4e0d\u80fd\u7701\u7565\u7684 teachers = 'anjing' , # \u5143\u7ec4\u652f\u6301\u62fc\u63a5\u64cd\u4f5c more_teachers = teachers + ( 'Tom' , 'Jerry' ) # \u652f\u6301\u5168\u5207\u7247\u590d\u5236\u5143\u7ec4\uff0c\u4f46\u4e0d\u652f\u6301 .copy() same_teachers = more_teachers [:] # \u652f\u6301\u67e5\u627e\uff0c\u4f46\u4e0d\u652f\u6301\u6392\u5e8f .sort() same_teachers . index ( 'anjing' ) # \u652f\u6301\u54c8\u5e0c print ( hash ( same_teachers )) # \u53ef\u4ee5\u6574\u4f53\u5220\u9664\u4f46\u4e0d\u652f\u6301\u90e8\u5206\u5220\u9664 del more_teachers del teachers","title":"\u5143\u7ec4"},{"location":"python/data-types-advanced/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 # \u540c\u65f6\u53d6\u51fa\u7d22\u5f15\u6570\u5b57\u548c\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20 for index , student in enumerate ( students ): print ( index , student ) # \u540c\u65f6\u5faa\u73af\u4e24\u4e2a\u5e8f\u5217 import random scores = [ random . randint ( 60 , 100 ) for x in range ( 10 )] students = [ 20190001 + x for x in range ( 10 )] for score , student in zip ( scores , students ): print ( score , student )","title":"\u5bf9\u4e8e\u5e8f\u5217\u7684\u8fdb\u9636\u5faa\u73af\u6280\u5de7"},{"location":"python/data-types-advanced/#_5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 # \u7b7e\u5230\u7684\u5b66\u751f checkin = [ 20190001 , 20190002 , 20190003 , 20190004 , 20190002 ] # \u4e00\u952e\u53bb\u91cd unique_checkin = list ( set ( checkin )) # \u6240\u6709\u5b66\u751f\u540d\u5355 all_students = [ 20190001 , 20190002 , 20190003 , 20190004 , 20190005 , 20190006 ] # \u6ca1\u6765\u7684\uff0c\u6293\u4f4f\u4f60\u4e86 nauty_kids = set ( all_students ) - set ( checkin ) print ( nauty_kids )","title":"\u96c6\u5408"},{"location":"python/data-types-advanced/#_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import random scores = [ random . randint ( 60 , 100 ) for x in range ( 10 )] students = [ 20190001 + x for x in range ( 10 )] transcript = dict ( zip ( students , scores )) # \u4f20\u7edf\u5199\u6cd5 ranking = sorted ( transcript . items (), key = lambda x : x [ 1 ], reverse = True ) ranked_transcript = dict ( ranking ) # python 3.6+ ranked_transcript = { k : v for k , v in sorted ( transcript . items (), key = lambda item : item [ 1 ], reverse = True ) } print ( ranked_transcript )","title":"\u5b57\u5178"},{"location":"python/data-types-advanced/#_7","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 import random # \u751f\u6210\u4e00\u4e2a\u5047\u7684\u540d\u5355 # \u5305\u542b 10 \u4e2a\u5b66\u751f students = [] for x in range ( 10 ): # \u5229\u7528\u5b57\u6bcd\u5bf9\u5e94 ASCII \u7801\u589e\u52a0\u6765\u81ea\u52a8\u8d77\u540d name = '\u5c0f' + chr ( ord ( 'A' ) + x ) student = { 'name' : name , 'id' : 20190001 + x , # \u6309\u987a\u5e8f\u751f\u6210\u5b66\u53f7 'score' : random . randint ( 60 , 100 ) # \u968f\u673a\u4e00\u4e2a\u6210\u7ee9 } # \u5c06\u4e00\u540d\u5b66\u751f\u5bf9\u5e94\u7684\u5b57\u5178\u52a0\u5165\u5230\u540d\u5355\u4e2d students . append ( student ) # \u8f93\u51fa\u540d\u5355\u4f5c\u4e3a\u8c03\u8bd5\u4fe1\u606f print ( students ) # \u5bf9\u540d\u5355\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u7684key\u662f\u6bcf\u4e2a\u5b66\u751f\u7684\u6210\u7ee9\uff0c\u5012\u5e8f students . sort ( key = lambda x : x [ 'score' ], reverse = True ) # \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6210\u7ee9\u5355 for student in students : print ( student [ 'id' ], student [ 'name' ], student [ 'score' ])","title":"\u6df7\u5408\u793a\u4f8b"},{"location":"python/data-types-basic/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u4f5c\u4e1a \u8bf7\u8bbf\u95ee \u4f5c\u4e1a\u4ed3\u5e93 \u63a5\u53d7\u4f5c\u4e1a\u3002 \u8bf7\u7f16\u5199\u76f4\u7537\u8868\u767d\u89e3\u7801\u7a0b\u5e8f\uff0c\u80fd\u591f\u5c06\u793a\u4f8b\u4ed3\u5e93\u4e2d\u7f16\u7801\u7a0b\u5e8f\u7f16\u7801\u7684\u5185\u5bb9\u8f6c\u6362\u6210\u539f\u59cb\u5185\u5bb9\uff0c\u8bf7\u4e8e 2020-03-27 \u4e0a\u8bfe\u4e4b\u524d\u63d0\u4ea4\u672c\u6b21\u4f5c\u4e1a\u3002","title":"\u6570\u636e\u7c7b\u578b\u57fa\u7840"},{"location":"python/data-types-basic/#_1","text":"\u8bf7\u8bbf\u95ee \u4f5c\u4e1a\u4ed3\u5e93 \u63a5\u53d7\u4f5c\u4e1a\u3002 \u8bf7\u7f16\u5199\u76f4\u7537\u8868\u767d\u89e3\u7801\u7a0b\u5e8f\uff0c\u80fd\u591f\u5c06\u793a\u4f8b\u4ed3\u5e93\u4e2d\u7f16\u7801\u7a0b\u5e8f\u7f16\u7801\u7684\u5185\u5bb9\u8f6c\u6362\u6210\u539f\u59cb\u5185\u5bb9\uff0c\u8bf7\u4e8e 2020-03-27 \u4e0a\u8bfe\u4e4b\u524d\u63d0\u4ea4\u672c\u6b21\u4f5c\u4e1a\u3002","title":"\u4f5c\u4e1a"},{"location":"python/file-and-path/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u793a\u4f8b 1 \u7528\u6807\u51c6\u5e93 struct \u89e3\u5305\u4e00\u4e2a 24 bits \u65e0\u8c03\u8272\u677f\u7684 BMP \u6587\u4ef6\u5934\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import struct # \u4f7f\u7528 r \u8bfb\u53d6 b \u4e8c\u8fdb\u5236 \u6a21\u5f0f\u6253\u5f00\u6587\u4ef6 with open ( 'test.bmp' , 'rb' ) as f : # \u8bfb\u53d6 14 \u5b57\u8282\u7684\u6587\u4ef6\u5934 bmp_file_header = f . read ( 14 ) # BMP \u6587\u4ef6\u5934 # bm \u5bf9\u5e94 2 \u5b57\u8282\u7684\u6807\u5fd7'BM' # size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u6587\u4ef6\u5927\u5c0f # r1 r2 \u5bf9\u5e94 2 \u4e2a\u5bbd\u5ea6\u4e3a 2 \u5b57\u8282\u7684\u4fdd\u7559\u4f4d\u7f6e # offset \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u6570\u636e\u7684\u8d77\u59cb\u504f\u79fb bm , size , r1 , r2 , offset = struct . unpack ( '<2sIHHI' , bmp_file_header ) print ( bm , size , offset ) # \u8bfb\u53d6 40 \u5b57\u8282\u7684\u6587\u4ef6\u5934 bmp_info_header = f . read ( 40 ) # \u4e0d\u5b9a\u957f\u7684\u4fe1\u606f\u5934\uff0c\u4e00\u822c\u4e3a 40 \u5b57\u8282 # info_size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u4fe1\u606f\u5934\u5927\u5c0f # width \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u5bbd\u5ea6 # height \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u9ad8\u5ea6 # planes \u5bf9\u5e94 2 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8272\u5f69\u5c42\u6570\uff0c\u4e00\u822c\u503c\u4e3a 1 # bits \u5bf9\u5e94 2 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u4f4d\u6df1\u5ea6\uff0c\u5373\u7528\u591a\u5c11\u6bd4\u7279\u8868\u793a\u989c\u8272 # compression \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u538b\u7f29\u65b9\u5f0f # data_size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u6570\u636e\u5927\u5c0f = width * height * bits # x_res \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u6a2a\u5411\uff08x\u8f74\uff09\u5206\u8fa8\u7387\uff08\u591a\u5c11\u50cf\u7d20\u6bcf\u7c73\uff09 # y_res \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u7eb5\u5411\uff08y\u8f74\uff09\u5206\u8fa8\u7387\uff08\u591a\u5c11\u50cf\u7d20\u6bcf\u7c73\uff09 # clr_used \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8c03\u8272\u677f\u989c\u8272\u6570\u91cf # clr_important \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8c03\u8272\u677f\u91cd\u8981\u989c\u8272\u6570\u91cf info_size , width , height , planes , bits , compression , data_size , x_res , y_res , clr_used , clr_important = struct . unpack ( '<IiiHHIIiiII' , bmp_info_header ) print ( compression , info_size , width , height , bits , data_size , clr_used ) \u793a\u4f8b 2 \u5c06\u67d0\u4e2a\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\uff08\u5305\u62ec\u5b50\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff09\u6309\u7167\u7531\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u79fb\u52a8\u5230\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55\uff0c\u5e76\u4e14\u52a0\u4e0a\u6570\u5b57\u524d\u7f00\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 import os # \u901a\u8fc7\u9012\u5f52\u8c03\u7528 os.listdir() \u6765\u5b9e\u73b0\u76ee\u5f55\u904d\u5386\uff0c\u5f97\u5230\u4e00\u4e2a\u5305\u542b\u6240\u6709\u6587\u4ef6\u7684\u5217\u8868 def walk_dir ( path ): result = [] for filename in os . listdir ( path ): file_path = os . path . join ( path , filename ) if os . path . isdir ( file_path ): result += walk_dir ( file_path ) if os . path . isfile ( file_path ): result . append ( file_path ) return result root = input ( '\u8bf7\u8f93\u5165\u4f60\u8981\u904d\u5386\u7684\u76ee\u5f55: ' ) # \u904d\u5386\u7528\u6237\u6307\u5b9a\u7684\u76ee\u5f55 files = walk_dir ( root ) # \u6309\u6587\u4ef6\u5927\u5c0f\u7531\u5927\u5230\u5c0f\u547d\u540d\u7684\u65b0\u76ee\u5f55 output_dir = input ( '\u8bf7\u8f93\u5165\u4f60\u8981\u65b0\u5efa\u7684\u76ee\u5f55: ' ) # \u65b0\u76ee\u5f55\u4e0d\u5b58\u5728\u65f6\u81ea\u52a8\u521b\u5efa\u8fd9\u4e2a\u76ee\u5f55 if not os . path . exists ( output_dir ): os . mkdir ( output_dir ) # \u4f7f\u7528 os.stat() \u83b7\u53d6\u6587\u4ef6\u5927\u5c0f file_dict = {} for file in files : st = os . stat ( file ) file_dict [ file ] = st . st_size # \u7528 \u6570\u636e\u7c7b\u578b\u8fdb\u9636 \u4e00\u8282\u5b66\u8fc7\u7684\u65b9\u6cd5\u6392\u5e8f sorted_files = { k : v for k , v in sorted ( file_dict . items (), key = lambda x : x [ 1 ], reverse = True ) } # \u6309\u7167\u7531\u5927\u5230\u5c0f\u7684\u987a\u5e8f\uff0c\u7ed9\u6587\u4ef6\u540d\u524d\u9762\u52a0\u4e0a\u6570\u5b57\u524d\u7f00\u5e76\u79fb\u52a8\u5230\u65b0\u7684\u76ee\u5f55 filename = 1 for file in sorted_files . keys (): # \u83b7\u53d6\u6587\u4ef6\u540d\u7684\u90e8\u5206\uff08\u4e0d\u5305\u62ec\u524d\u9762\u7684\u8def\u5f84\uff09 basename = os . path . basename ( file ) # \u5c06\u6587\u4ef6\u540d\u62c6\u5206\u6210\u540d\u5b57\u548c\u540e\u7f00 name , ext = os . path . splitext ( basename ) # \u7ec4\u5408\u65b0\u7684\u76ee\u5f55\u548c\u65b0\u6587\u4ef6\u540d new_basename = str ( filename ) + '_' + name + ext newfilename = os . path . join ( output_dir , new_basename ) # \u8c03\u7528 os.rename() \u5b9e\u73b0\u79fb\u52a8\u6587\u4ef6\u7684\u6548\u679c os . rename ( file , newfilename ) filename += 1 \u53e6\u4e00\u79cd\u904d\u5386\u76ee\u5f55\u7684\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 def walk_dir ( path ): result = [] for root , dirs , files in os . walk ( path ): for file in files : filename = os . path . join ( root , file ) result . append ( filename ) return result \u793a\u4f8b 3 \u4e0a\u9762\u7684\u4f8b\u5b50\u5982\u679c\u4f7f\u7528 pathlib \u6765\u5b9e\u73b0\uff0c\u5219\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 from pathlib import Path root = input ( '\u8bf7\u8f93\u5165\u4f60\u8981\u904d\u5386\u7684\u76ee\u5f55: ' ) # \u904d\u5386\u7528\u6237\u6307\u5b9a\u7684\u76ee\u5f55\uff0c\u5982\u679c\u60f3\u5077\u61d2\uff0c\u53ef\u4ee5\u7528 Path.rglob('*') # Path.rglob('*') \u76f8\u5f53\u4e8e\u81ea\u52a8\u7ed9\u53c2\u6570\u52a0\u4e0a '**/' \u7684 glob files = Path ( root ) . glob ( '**/*' ) # \u6309\u6587\u4ef6\u5927\u5c0f\u7531\u5927\u5230\u5c0f\u547d\u540d\u7684\u65b0\u76ee\u5f55 output_dir = input ( '\u8bf7\u8f93\u5165\u4f60\u8981\u65b0\u5efa\u7684\u76ee\u5f55: ' ) Path ( output_dir ) . mkdir ( exist_ok = True ) # \u4f7f\u7528 Path.stat() \u83b7\u53d6\u6587\u4ef6\u5927\u5c0f file_dict = {} for file in files : if Path ( file ) . is_file (): st = Path ( file ) . stat () file_dict [ file ] = st . st_size # \u7528 \u6570\u636e\u7c7b\u578b\u8fdb\u9636 \u4e00\u8282\u5b66\u8fc7\u7684\u65b9\u6cd5\u6392\u5e8f sorted_files = { k : v for k , v in sorted ( file_dict . items (), key = lambda x : x [ 1 ], reverse = True ) } # \u6309\u7167\u7531\u5927\u5230\u5c0f\u7684\u987a\u5e8f\uff0c\u7ed9\u6587\u4ef6\u540d\u524d\u9762\u52a0\u4e0a\u6570\u5b57\u524d\u7f00\u5e76\u79fb\u52a8\u5230\u65b0\u7684\u76ee\u5f55 filename = 1 for file in sorted_files . keys (): old_file = Path ( file ) # \u7ec4\u5408\u65b0\u7684\u76ee\u5f55\u548c\u65b0\u6587\u4ef6\u540d new_basename = str ( filename ) + '_' + old_file . stem + old_file . suffix newfilename = Path ( output_dir ) / Path ( new_basename ) # \u8c03\u7528 Path.rename() \u5b9e\u73b0\u79fb\u52a8\u6587\u4ef6\u7684\u6548\u679c old_file . rename ( newfilename ) filename += 1 \u4f5c\u4e1a-\u732b\u9f20\u6e38\u620f \u4f5c\u4e1a\u94fe\u63a5: https://classroom.github.com/a/s2f5Vvvb \u8be6\u7ec6\u8981\u6c42\u53c2\u8003\u4f5c\u4e1a\u4ed3\u5e93\u7684 README.md \u3002","title":"\u6587\u4ef6\u4e0e\u76ee\u5f55"},{"location":"python/file-and-path/#1","text":"\u7528\u6807\u51c6\u5e93 struct \u89e3\u5305\u4e00\u4e2a 24 bits \u65e0\u8c03\u8272\u677f\u7684 BMP \u6587\u4ef6\u5934\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import struct # \u4f7f\u7528 r \u8bfb\u53d6 b \u4e8c\u8fdb\u5236 \u6a21\u5f0f\u6253\u5f00\u6587\u4ef6 with open ( 'test.bmp' , 'rb' ) as f : # \u8bfb\u53d6 14 \u5b57\u8282\u7684\u6587\u4ef6\u5934 bmp_file_header = f . read ( 14 ) # BMP \u6587\u4ef6\u5934 # bm \u5bf9\u5e94 2 \u5b57\u8282\u7684\u6807\u5fd7'BM' # size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u6587\u4ef6\u5927\u5c0f # r1 r2 \u5bf9\u5e94 2 \u4e2a\u5bbd\u5ea6\u4e3a 2 \u5b57\u8282\u7684\u4fdd\u7559\u4f4d\u7f6e # offset \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u6570\u636e\u7684\u8d77\u59cb\u504f\u79fb bm , size , r1 , r2 , offset = struct . unpack ( '<2sIHHI' , bmp_file_header ) print ( bm , size , offset ) # \u8bfb\u53d6 40 \u5b57\u8282\u7684\u6587\u4ef6\u5934 bmp_info_header = f . read ( 40 ) # \u4e0d\u5b9a\u957f\u7684\u4fe1\u606f\u5934\uff0c\u4e00\u822c\u4e3a 40 \u5b57\u8282 # info_size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u4fe1\u606f\u5934\u5927\u5c0f # width \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u5bbd\u5ea6 # height \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u9ad8\u5ea6 # planes \u5bf9\u5e94 2 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8272\u5f69\u5c42\u6570\uff0c\u4e00\u822c\u503c\u4e3a 1 # bits \u5bf9\u5e94 2 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u4f4d\u6df1\u5ea6\uff0c\u5373\u7528\u591a\u5c11\u6bd4\u7279\u8868\u793a\u989c\u8272 # compression \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u538b\u7f29\u65b9\u5f0f # data_size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u6570\u636e\u5927\u5c0f = width * height * bits # x_res \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u6a2a\u5411\uff08x\u8f74\uff09\u5206\u8fa8\u7387\uff08\u591a\u5c11\u50cf\u7d20\u6bcf\u7c73\uff09 # y_res \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u7eb5\u5411\uff08y\u8f74\uff09\u5206\u8fa8\u7387\uff08\u591a\u5c11\u50cf\u7d20\u6bcf\u7c73\uff09 # clr_used \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8c03\u8272\u677f\u989c\u8272\u6570\u91cf # clr_important \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8c03\u8272\u677f\u91cd\u8981\u989c\u8272\u6570\u91cf info_size , width , height , planes , bits , compression , data_size , x_res , y_res , clr_used , clr_important = struct . unpack ( '<IiiHHIIiiII' , bmp_info_header ) print ( compression , info_size , width , height , bits , data_size , clr_used )","title":"\u793a\u4f8b 1"},{"location":"python/file-and-path/#2","text":"\u5c06\u67d0\u4e2a\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\uff08\u5305\u62ec\u5b50\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff09\u6309\u7167\u7531\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u79fb\u52a8\u5230\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55\uff0c\u5e76\u4e14\u52a0\u4e0a\u6570\u5b57\u524d\u7f00\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 import os # \u901a\u8fc7\u9012\u5f52\u8c03\u7528 os.listdir() \u6765\u5b9e\u73b0\u76ee\u5f55\u904d\u5386\uff0c\u5f97\u5230\u4e00\u4e2a\u5305\u542b\u6240\u6709\u6587\u4ef6\u7684\u5217\u8868 def walk_dir ( path ): result = [] for filename in os . listdir ( path ): file_path = os . path . join ( path , filename ) if os . path . isdir ( file_path ): result += walk_dir ( file_path ) if os . path . isfile ( file_path ): result . append ( file_path ) return result root = input ( '\u8bf7\u8f93\u5165\u4f60\u8981\u904d\u5386\u7684\u76ee\u5f55: ' ) # \u904d\u5386\u7528\u6237\u6307\u5b9a\u7684\u76ee\u5f55 files = walk_dir ( root ) # \u6309\u6587\u4ef6\u5927\u5c0f\u7531\u5927\u5230\u5c0f\u547d\u540d\u7684\u65b0\u76ee\u5f55 output_dir = input ( '\u8bf7\u8f93\u5165\u4f60\u8981\u65b0\u5efa\u7684\u76ee\u5f55: ' ) # \u65b0\u76ee\u5f55\u4e0d\u5b58\u5728\u65f6\u81ea\u52a8\u521b\u5efa\u8fd9\u4e2a\u76ee\u5f55 if not os . path . exists ( output_dir ): os . mkdir ( output_dir ) # \u4f7f\u7528 os.stat() \u83b7\u53d6\u6587\u4ef6\u5927\u5c0f file_dict = {} for file in files : st = os . stat ( file ) file_dict [ file ] = st . st_size # \u7528 \u6570\u636e\u7c7b\u578b\u8fdb\u9636 \u4e00\u8282\u5b66\u8fc7\u7684\u65b9\u6cd5\u6392\u5e8f sorted_files = { k : v for k , v in sorted ( file_dict . items (), key = lambda x : x [ 1 ], reverse = True ) } # \u6309\u7167\u7531\u5927\u5230\u5c0f\u7684\u987a\u5e8f\uff0c\u7ed9\u6587\u4ef6\u540d\u524d\u9762\u52a0\u4e0a\u6570\u5b57\u524d\u7f00\u5e76\u79fb\u52a8\u5230\u65b0\u7684\u76ee\u5f55 filename = 1 for file in sorted_files . keys (): # \u83b7\u53d6\u6587\u4ef6\u540d\u7684\u90e8\u5206\uff08\u4e0d\u5305\u62ec\u524d\u9762\u7684\u8def\u5f84\uff09 basename = os . path . basename ( file ) # \u5c06\u6587\u4ef6\u540d\u62c6\u5206\u6210\u540d\u5b57\u548c\u540e\u7f00 name , ext = os . path . splitext ( basename ) # \u7ec4\u5408\u65b0\u7684\u76ee\u5f55\u548c\u65b0\u6587\u4ef6\u540d new_basename = str ( filename ) + '_' + name + ext newfilename = os . path . join ( output_dir , new_basename ) # \u8c03\u7528 os.rename() \u5b9e\u73b0\u79fb\u52a8\u6587\u4ef6\u7684\u6548\u679c os . rename ( file , newfilename ) filename += 1 \u53e6\u4e00\u79cd\u904d\u5386\u76ee\u5f55\u7684\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 def walk_dir ( path ): result = [] for root , dirs , files in os . walk ( path ): for file in files : filename = os . path . join ( root , file ) result . append ( filename ) return result","title":"\u793a\u4f8b 2"},{"location":"python/file-and-path/#3","text":"\u4e0a\u9762\u7684\u4f8b\u5b50\u5982\u679c\u4f7f\u7528 pathlib \u6765\u5b9e\u73b0\uff0c\u5219\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 from pathlib import Path root = input ( '\u8bf7\u8f93\u5165\u4f60\u8981\u904d\u5386\u7684\u76ee\u5f55: ' ) # \u904d\u5386\u7528\u6237\u6307\u5b9a\u7684\u76ee\u5f55\uff0c\u5982\u679c\u60f3\u5077\u61d2\uff0c\u53ef\u4ee5\u7528 Path.rglob('*') # Path.rglob('*') \u76f8\u5f53\u4e8e\u81ea\u52a8\u7ed9\u53c2\u6570\u52a0\u4e0a '**/' \u7684 glob files = Path ( root ) . glob ( '**/*' ) # \u6309\u6587\u4ef6\u5927\u5c0f\u7531\u5927\u5230\u5c0f\u547d\u540d\u7684\u65b0\u76ee\u5f55 output_dir = input ( '\u8bf7\u8f93\u5165\u4f60\u8981\u65b0\u5efa\u7684\u76ee\u5f55: ' ) Path ( output_dir ) . mkdir ( exist_ok = True ) # \u4f7f\u7528 Path.stat() \u83b7\u53d6\u6587\u4ef6\u5927\u5c0f file_dict = {} for file in files : if Path ( file ) . is_file (): st = Path ( file ) . stat () file_dict [ file ] = st . st_size # \u7528 \u6570\u636e\u7c7b\u578b\u8fdb\u9636 \u4e00\u8282\u5b66\u8fc7\u7684\u65b9\u6cd5\u6392\u5e8f sorted_files = { k : v for k , v in sorted ( file_dict . items (), key = lambda x : x [ 1 ], reverse = True ) } # \u6309\u7167\u7531\u5927\u5230\u5c0f\u7684\u987a\u5e8f\uff0c\u7ed9\u6587\u4ef6\u540d\u524d\u9762\u52a0\u4e0a\u6570\u5b57\u524d\u7f00\u5e76\u79fb\u52a8\u5230\u65b0\u7684\u76ee\u5f55 filename = 1 for file in sorted_files . keys (): old_file = Path ( file ) # \u7ec4\u5408\u65b0\u7684\u76ee\u5f55\u548c\u65b0\u6587\u4ef6\u540d new_basename = str ( filename ) + '_' + old_file . stem + old_file . suffix newfilename = Path ( output_dir ) / Path ( new_basename ) # \u8c03\u7528 Path.rename() \u5b9e\u73b0\u79fb\u52a8\u6587\u4ef6\u7684\u6548\u679c old_file . rename ( newfilename ) filename += 1","title":"\u793a\u4f8b 3"},{"location":"python/file-and-path/#-","text":"\u4f5c\u4e1a\u94fe\u63a5: https://classroom.github.com/a/s2f5Vvvb \u8be6\u7ec6\u8981\u6c42\u53c2\u8003\u4f5c\u4e1a\u4ed3\u5e93\u7684 README.md \u3002","title":"\u4f5c\u4e1a-\u732b\u9f20\u6e38\u620f"},{"location":"python/introduction/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u5c0f\u4e4c\u9f9f\u5b9e\u4f8b \u8be5\u5b9e\u4f8b\u6f14\u793a\u5229\u7528 Python \u81ea\u5e26\u7684 turtle \u6a21\u5757\u753b\u56fe\u3002 \u5176\u4e2d\u5fc3\u578b\u90e8\u5206\u53c2\u8003\u4e86 https://www.youtube.com/watch?v=2STVF2vCx2c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 import turtle # \u753b\u4e00\u4e2a\u5f27\u5ea6 def curve ( t ): for i in range ( 200 ): t . right ( 1 ) t . forward ( 1 ) # \u521b\u5efa\u4e00\u4e2a\u7a7a\u767d\u7684\u7a97\u53e3 w = turtle . Screen () # \u521b\u5efa\u4e00\u53ea\u5c0f\u6d77\u9f9f t = turtle . Turtle () # \u4e0d\u753b\u7ebf\uff0c\u8dd1\u5230 x=0 y=128 \u7684\u4f4d\u7f6e t . penup () t . goto ( 0 , 128 ) # \u843d\u7b14\uff0c\u7b14\u7684\u989c\u8272\u662f\u84dd\u8272\uff0c\u5199 anjingcuc t . pendown () t . pencolor ( 'blue' ) t . write ( 'anjingcuc' , False , align = 'center' , font = ( 'Times New Roman' , 64 , 'normal' )) # \u62ac\u8d77\u7b14\uff0c\u8dd1\u5230 x=0 y=-50 \u7684\u4f4d\u7f6e t . penup () t . goto ( 0 , - 50 ) # \u843d\u7b14\uff0c\u4e14\u7ebf\u6761\u989c\u8272\u4e3a\u7ea2\u8272\uff0c\u586b\u5145\u989c\u8272\u4e3a\u7ea2\u8272 t . pendown () t . color ( 'red' , 'red' ) # \u753b\u5fc3\u578b\u5e76\u586b\u5145 t . begin_fill () t . left ( 140 ) t . forward ( 111.65 ) curve ( t ) t . left ( 120 ) curve ( t ) t . forward ( 111.65 ) t . end_fill () # \u62ac\u7b14\uff0c\u5e76\u8dd1\u5230 x=0 y=-148 \u7684\u4f4d\u7f6e t . penup () t . goto ( 0 , - 148 ) # \u843d\u7b14\uff0c\u989c\u8272\u4e3a\u7eff\u8272 t . pendown () t . pencolor ( 'green' ) # \u5199 bilibili t . write ( 'bilibili' , False , align = 'center' , font = ( 'Times New Roman' , 64 , 'normal' )) # \u9690\u85cf\u7bad\u5934\uff08\u5373\u5c0f\u4e4c\u9f9f\uff09 t . hideturtle () # \u663e\u793a\u7a97\u53e3 w . mainloop () \u7f51\u7edc\u722c\u866b \u6279\u91cf\u83b7\u53d6\u559c\u6b22\u7684\u56fe\u7247\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 from pathlib import Path import time import requests from bs4 import BeautifulSoup # \u6dfb\u52a0 HTTP header \u901a\u8fc7\u4fee\u6539User-Agent\u5b57\u6bb5\u4f2a\u88c5\u6210Chrome headers = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' } r = requests . get ( \"https://www.zhihu.com/question/33797069/answer/961097566\" , headers = headers ) # \u7528 BeautifulSoup \u89e3\u6790\u8fd4\u56de\u7684 HTML soup = BeautifulSoup ( r . text , 'html.parser' ) images = soup . select ( 'div.RichContent-inner > span > figure > img' ) image_number = 1 for image in images : image_url = image [ 'data-actualsrc' ] image_path = str ( image_number ) + Path ( image_url ) . suffix # \u4e0b\u8f7d\u6587\u4ef6 r = requests . get ( image_url ) f = open ( image_path , 'wb' ) for chunk in r . iter_content ( chunk_size = 512 * 1024 ): if chunk : # filter out keep-alive new chunks f . write ( chunk ) f . close () # \u6709\u793c\u8c8c\u5730\u95f4\u96945\u79d2\u83b7\u53d6\u4e00\u4e2a\u6587\u4ef6 time . sleep ( 5 ) image_number += 1 \u4eba\u5de5\u667a\u80fd-\u6362\u8138 \u4e00\u952e\u6362\u88c5\uff1f\u53c2\u8003 \u840c\u65b0\u5982\u4f55\u7528 Python \u5b9e\u73b0\u4eba\u8138\u66ff\u6362\uff1f / matthewearl/faceswap \uimport cv2 import dlib import numpy import sys , os PREDICTOR_PATH = os . path . join ( os . path . abspath ( os . path . dirname ( __file__ )), \"shape_predictor_68_face_landmarks.dat\" ) SCALE_FACTOR = 1 FEATHER_AMOUNT = 11 # 1-16 \u8138\u578b JAW_POINTS = list ( range ( 0 , 17 )) # 17-21 \u53f3\u8fb9\u7709\u6bdb RIGHT_BROW_POINTS = list ( range ( 17 , 22 )) # 22-26 \u5de6\u8fb9\u7709\u6bdb LEFT_BROW_POINTS = list ( range ( 22 , 27 )) # 27-35 \u9f3b\u5b50 NOSE_POINTS = list ( range ( 27 , 35 )) # 36-41 \u773c\u775b RIGHT_EYE_POINTS = list ( range ( 36 , 42 )) # 42-47 \u773c\u775b LEFT_EYE_POINTS = list ( range ( 42 , 48 )) # 48-68 \u5634\u5df4 MOUTH_POINTS = list ( range ( 48 , 68 )) # 17-68 \u6574\u4e2a\u8138 FACE_POINTS = list ( range ( 17 , 68 )) FACE_END = 68 # Points used to line up the images. ALIGN_POINTS = ( LEFT_BROW_POINTS + RIGHT_EYE_POINTS + LEFT_EYE_POINTS + RIGHT_BROW_POINTS + NOSE_POINTS + MOUTH_POINTS ) # Points from the second image to overlay on the first. The convex hull of each # element will be overlaid. OVERLAY_POINTS = [ FACE_POINTS ] # Amount of blur to use during colour correction, as a fraction of the # pupillary distance. COLOUR_CORRECT_BLUR_FRAC = 0.6 detector = dlib . get_frontal_face_detector () predictor = dlib . shape_predictor ( PREDICTOR_PATH ) class TooManyFaces ( Exception ): pass class NoFaces ( Exception ): pass def draw_point ( img , p , color ): cv2 . circle ( img , ( p [ 0 ], p [ 1 ]), 2 , color , cv2 . FILLED , cv2 . LINE_AA , 0 ) def rect_contains ( rect , point ): if point [ 0 ] < rect [ 0 ]: return False elif point [ 1 ] < rect [ 1 ]: return False elif point [ 0 ] > rect [ 0 ] + rect [ 2 ]: return False elif point [ 1 ] > rect [ 1 ] + rect [ 3 ]: return False return True def measure_triangle ( shape , points ): rect = ( 0 , 0 , shape [ 1 ], shape [ 0 ]) sub_div = cv2 . Subdiv2D ( rect ) for p in points : sub_div . insert (( p [ 0 ], p [ 1 ])) #sub_div.insert(points) triangle_list = sub_div . getTriangleList () triangle = [] for t in triangle_list : pt = [( t [ 0 ], t [ 1 ]), ( t [ 2 ], t [ 3 ]), ( t [ 4 ], t [ 5 ])] pt1 = ( t [ 0 ], t [ 1 ]) pt2 = ( t [ 2 ], t [ 3 ]) pt3 = ( t [ 4 ], t [ 5 ]) if rect_contains ( rect , pt1 ) and rect_contains ( rect , pt2 ) and rect_contains ( rect , pt3 ): ind = [] for j in range ( 0 , 3 ): for k in range ( 0 , len ( points )): if abs ( pt [ j ][ 0 ] - points [ k ][ 0 ]) < 1.0 and abs ( pt [ j ][ 1 ] - points [ k ][ 1 ]) < 1.0 : ind . append ( k ) if len ( ind ) == 3 : triangle . append (( ind [ 0 ], ind [ 1 ], ind [ 2 ])) return triangle def morph_triangle ( src , dst , img , t_src , t_dst , t , alpha ): r1 = cv2 . boundingRect ( np . float32 ([ t_src ])) r2 = cv2 . boundingRect ( np . float32 ([ t_dst ])) r = cv2 . boundingRect ( np . float32 ([ t ])) t1_rect = [] t2_rect = [] t_rect = [] for i in range ( 0 , 3 ): t_rect . append ((( t [ i ][ 0 ] - r [ 0 ]), ( t [ i ][ 1 ] - r [ 1 ]))) t1_rect . append ((( t_src [ i ][ 0 ] - r1 [ 0 ]), ( t_src [ i ][ 1 ] - r1 [ 1 ]))) t2_rect . append ((( t_dst [ i ][ 0 ] - r2 [ 0 ]), ( t_dst [ i ][ 1 ] - r2 [ 1 ]))) mask = np . zeros (( r [ 3 ], r [ 2 ], 3 ), dtype = np . float32 ) cv2 . fillConvexPoly ( mask , np . int32 ( t_rect ), ( 1.0 , 1.0 , 1.0 ), 16 , 0 ) img1_rect = src [ r1 [ 1 ]: r1 [ 1 ] + r1 [ 3 ], r1 [ 0 ]: r1 [ 0 ] + r1 [ 2 ]] img2_rect = dst [ r2 [ 1 ]: r2 [ 1 ] + r2 [ 3 ], r2 [ 0 ]: r2 [ 0 ] + r2 [ 2 ]] size = ( r [ 2 ], r [ 3 ]) warp_img1 = affine_transform ( img1_rect , t1_rect , t_rect , size ) warp_img2 = affine_transform ( img2_rect , t2_rect , t_rect , size ) img_rect = ( 1.0 - alpha ) * warp_img1 + alpha * warp_img2 img [ r [ 1 ]: r [ 1 ] + r [ 3 ], r [ 0 ]: r [ 0 ] + r [ 2 ]] = img [ r [ 1 ]: r [ 1 ] + r [ 3 ], r [ 0 ]: r [ 0 ] + r [ 2 ]] * ( 1 - mask ) + img_rect * mask def affine_triangle ( src , dst , t_src , t_dst ): r1 = cv2 . boundingRect ( np . float32 ([ t_src ])) r2 = cv2 . boundingRect ( np . float32 ([ t_dst ])) t1_rect = [] t2_rect = [] t2_rect_int = [] for i in range ( 0 , 3 ): t1_rect . append (( t_src [ i ][ 0 ] - r1 [ 0 ], t_src [ i ][ 1 ] - r1 [ 1 ])) t2_rect . append (( t_dst [ i ][ 0 ] - r2 [ 0 ], t_dst [ i ][ 1 ] - r2 [ 1 ])) t2_rect_int . append (( t_dst [ i ][ 0 ] - r2 [ 0 ], t_dst [ i ][ 1 ] - r2 [ 1 ])) mask = np . zeros (( r2 [ 3 ], r2 [ 2 ], 3 ), dtype = np . float32 ) cv2 . fillConvexPoly ( mask , np . int32 ( t2_rect_int ), ( 1.0 , 1.0 , 1.0 ), 16 , 0 ) img1_rect = src [ r1 [ 1 ]: r1 [ 1 ] + r1 [ 3 ], r1 [ 0 ]: r1 [ 0 ] + r1 [ 2 ]] size = ( r2 [ 2 ], r2 [ 3 ]) img2_rect = affine_transform ( img1_rect , t1_rect , t2_rect , size ) img2_rect = img2_rect * mask dst [ r2 [ 1 ]: r2 [ 1 ] + r2 [ 3 ], r2 [ 0 ]: r2 [ 0 ] + r2 [ 2 ]] = dst [ r2 [ 1 ]: r2 [ 1 ] + r2 [ 3 ], r2 [ 0 ]: r2 [ 0 ] + r2 [ 2 ]] * ( ( 1.0 , 1.0 , 1.0 ) - mask ) dst [ r2 [ 1 ]: r2 [ 1 ] + r2 [ 3 ], r2 [ 0 ]: r2 [ 0 ] + r2 [ 2 ]] = dst [ r2 [ 1 ]: r2 [ 1 ] + r2 [ 3 ], r2 [ 0 ]: r2 [ 0 ] + r2 [ 2 ]] + img2_rect def affine_transform ( src , src_tri , dst_tri , size ): warp_mat = cv2 . getAffineTransform ( np . float32 ( src_tri ), np . float32 ( dst_tri )) dst = cv2 . warpAffine ( src , warp_mat , ( size [ 0 ], size [ 1 ]), None , flags = cv2 . INTER_LINEAR , borderMode = cv2 . BORDER_REFLECT_101 ) return dst def get_landmarks ( im ): rects = detector ( im , 1 ) if len ( rects ) > 1 : raise TooManyFaces if len ( rects ) == 0 : raise NoFaces # \u7279\u5f81\u63d0\u53d6\u5668\uff08predictor\uff09\u8981\u4e00\u4e2a\u7c97\u7cd9\u7684\u8fb9\u754c\u6846\u4f5c\u4e3a\u7b97\u6cd5\u8f93\u5165\uff0c\u7531\u4f20\u7edf\u7684\u80fd\u8fd4\u56de\u4e00\u4e2a\u77e9\u5f62\u5217\u8868\u7684\u4eba\u8138\u68c0\u6d4b\u5668\uff08detector\uff09\u63d0\u4f9b\uff0c\u5176\u6bcf\u4e2a\u77e9\u5f62\u5217\u8868\u5728\u56fe\u50cf\u4e2d\u5bf9\u5e94\u4e00\u4e2a\u8138\u3002 return numpy . matrix ([[ p . x , p . y ] for p in predictor ( im , rects [ 0 ]) . parts ()]) def draw_convex_hull ( im , points , color ): points = cv2 . convexHull ( points ) cv2 . fillConvexPoly ( im , points , color = color ) # \u7528\u666e\u6c0f\u5206\u6790\u6cd5\uff08Procrustes Analysis\uff09\u5b9e\u73b0\u4eba\u8138\u5bf9\u9f50 def transformation_from_points ( points1 , points2 ): \"\"\" Return an affine transformation [s * R | T] such that: sum ||s*R*p1,i + T - p2,i||^2 is minimized. \"\"\" # Solve the procrustes problem by subtracting centroids, scaling by the # standard deviation, and then using the SVD to calculate the rotation. See # the following for more details: # https://en.wikipedia.org/wiki/Orthogonal_Procrustes_problem # 1.\u5c062\u4e2a\u56fe\u7247\u7684\u8138\u90e8\u6d6e\u70b9\u8f6c\u6362\u6210\u77e9\u9635 points1 = points1 . astype ( numpy . float64 ) points2 = points2 . astype ( numpy . float64 ) # 2.\u5c06\u6bcf\u4e00\u4e2a\u70b9\u96c6\u51cf\u53bb\u5b83\u7684\u77e9\u5fc3\u3002\u4e00\u65e6\u4e3a\u8fd9\u4e24\u4e2a\u65b0\u7684\u70b9\u96c6\u627e\u5230\u4e86\u4e00\u4e2a\u6700\u4f73\u7684\u7f29\u653e\u548c\u65cb\u8f6c\u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u77e9\u5fc3c1\u548cc2\u5c31\u53ef\u4ee5\u7528\u6765\u627e\u5230\u5b8c\u6574\u7684\u89e3\u51b3\u65b9\u6848\u3002 c1 = numpy . mean ( points1 , axis = 0 ) c2 = numpy . mean ( points2 , axis = 0 ) points1 -= c1 points2 -= c2 # 3.\u540c\u6837\uff0c\u5c06\u6bcf\u4e00\u4e2a\u70b9\u96c6\u9664\u4ee5\u5b83\u7684\u6807\u51c6\u504f\u5dee\u3002\u8fd9\u6d88\u9664\u4e86\u7f29\u653e\u504f\u5dee\u3002 s1 = numpy . std ( points1 ) s2 = numpy . std ( points2 ) points1 /= s1 points2 /= s2 # 4.\u4f7f\u7528\u5947\u5f02\u503c\u5206\u89e3\uff08singular value decomposition\uff09\u8ba1\u7b97\u65cb\u8f6c\u90e8\u5206\u3002\u8bf7\u53c2\u9605\u7ef4\u57fa\u767e\u79d1\u6709\u5173Orthogonal Procrustes Problem\u7684\u6587\u7ae0\uff0c\u4ee5\u4e86\u89e3\u5b83\u7684\u5177\u4f53\u5de5\u4f5c\u539f\u7406\u3002 U , S , Vt = numpy . linalg . svd ( points1 . T * points2 ) # The R we seek is in fact the transpose of the one given by U * Vt. This # is because the above formulation assumes the matrix goes on the right # (with row vectors) where as our solution requires the matrix to be on the # left (with column vectors). R = ( U * Vt ) . T # 5.\u5c06\u6574\u4e2a\u53d8\u6362\u8fc7\u7a0b\u4ee5\u4eff\u5c04\u53d8\u6362\u77e9\u9635\u5f62\u5f0f\u8fd4\u56de\u3002 return numpy . vstack ([ numpy . hstack ((( s2 / s1 ) * R , c2 . T - ( s2 / s1 ) * R * c1 . T )), numpy . matrix ([ 0. , 0. , 1. ]) ]) def read_im_and_landmarks ( fname ): im = cv2 . imread ( fname , cv2 . IMREAD_COLOR ) im = cv2 . resize ( im , ( im . shape [ 1 ] * SCALE_FACTOR , im . shape [ 0 ] * SCALE_FACTOR )) s = get_landmarks ( im ) return im , s def warp_im ( im , M , dshape ): output_im = numpy . zeros ( dshape , dtype = im . dtype ) cv2 . warpAffine ( im , M [: 2 ], ( dshape [ 1 ], dshape [ 0 ]), dst = output_im , borderMode = cv2 . BORDER_TRANSPARENT , flags = cv2 . WARP_INVERSE_MAP ) return output_im def get_face_mask ( im , landmarks ): im = numpy . zeros ( im . shape [: 2 ], dtype = numpy . float64 ) for group in OVERLAY_POINTS : draw_convex_hull ( im , landmarks [ group ], color = 1 ) im = numpy . array ([ im , im , im ]) . transpose (( 1 , 2 , 0 )) im = ( cv2 . GaussianBlur ( im , ( FEATHER_AMOUNT , FEATHER_AMOUNT ), 0 ) > 0 ) * 1.0 im = cv2 . GaussianBlur ( im , ( FEATHER_AMOUNT , FEATHER_AMOUNT ), 0 ) return im def correct_colours ( im1 , im2 , landmarks1 ): blur_amount = COLOUR_CORRECT_BLUR_FRAC * numpy . linalg . norm ( numpy . mean ( landmarks1 [ LEFT_EYE_POINTS ], axis = 0 ) - numpy . mean ( landmarks1 [ RIGHT_EYE_POINTS ], axis = 0 )) blur_amount = int ( blur_amount ) if blur_amount % 2 == 0 : blur_amount += 1 im1_blur = cv2 . GaussianBlur ( im1 , ( blur_amount , blur_amount ), 0 ) im2_blur = cv2 . GaussianBlur ( im2 , ( blur_amount , blur_amount ), 0 ) # Avoid divide-by-zero errors. im2_blur += ( 128 * ( im2_blur <= 1.0 )) . astype ( im2_blur . dtype ) return ( im2 . astype ( numpy . float64 ) * im1_blur . astype ( numpy . float64 ) / im2_blur . astype ( numpy . float64 )) def change_face ( src_img , dst_img , out_img ): # \u4e00\u3001\u5c06face\u53d8\u5f62\u6210model\u7684\u5f62\u72b6 # 1.\u5c06\u4e24\u5f20\u56fe\u7247\u8f6c\u5316\u6210numpy\u6570\u7ec4\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a68 x2\u5143\u7d20\u77e9\u9635\uff0c\u8f93\u5165\u56fe\u50cf\u7684\u6bcf\u4e2a\u7279\u5f81\u70b9\u5bf9\u5e94\u6bcf\u884c\u7684\u4e00\u4e2ax\uff0cy\u5750\u6807\u3002 model_img , model_landmarks = read_im_and_landmarks ( src_img ) face_img , face_landmarks = read_im_and_landmarks ( dst_img ) # 2.\u7528\u666e\u6c0f\u5206\u6790\u6cd5\uff08Procrustes Analysis\uff09\u5b9e\u73b0\u4eba\u8138\u5bf9\u9f50 M = transformation_from_points ( model_landmarks [ ALIGN_POINTS ], face_landmarks [ ALIGN_POINTS ]) mask = get_face_mask ( face_img , face_landmarks ) warped_mask = warp_im ( mask , M , model_img . shape ) combined_mask = numpy . max ( [ get_face_mask ( model_img , model_landmarks ), warped_mask ], axis = 0 ) warped_im2 = warp_im ( face_img , M , model_img . shape ) warped_corrected_im2 = correct_colours ( model_img , warped_im2 , model_landmarks ) output_im = model_img * ( 1.0 - combined_mask ) + warped_corrected_im2 * combined_mask cv2 . imwrite ( out_img , output_im ) if __name__ == '__main__' : change_face ( 'target.jpg' , 'face.jpg' , 'output.jpg' )","title":"\u8bfe\u7a0b\u6982\u8ff0"},{"location":"python/introduction/#_1","text":"\u8be5\u5b9e\u4f8b\u6f14\u793a\u5229\u7528 Python \u81ea\u5e26\u7684 turtle \u6a21\u5757\u753b\u56fe\u3002 \u5176\u4e2d\u5fc3\u578b\u90e8\u5206\u53c2\u8003\u4e86 https://www.youtube.com/watch?v=2STVF2vCx2c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 import turtle # \u753b\u4e00\u4e2a\u5f27\u5ea6 def curve ( t ): for i in range ( 200 ): t . right ( 1 ) t . forward ( 1 ) # \u521b\u5efa\u4e00\u4e2a\u7a7a\u767d\u7684\u7a97\u53e3 w = turtle . Screen () # \u521b\u5efa\u4e00\u53ea\u5c0f\u6d77\u9f9f t = turtle . Turtle () # \u4e0d\u753b\u7ebf\uff0c\u8dd1\u5230 x=0 y=128 \u7684\u4f4d\u7f6e t . penup () t . goto ( 0 , 128 ) # \u843d\u7b14\uff0c\u7b14\u7684\u989c\u8272\u662f\u84dd\u8272\uff0c\u5199 anjingcuc t . pendown () t . pencolor ( 'blue' ) t . write ( 'anjingcuc' , False , align = 'center' , font = ( 'Times New Roman' , 64 , 'normal' )) # \u62ac\u8d77\u7b14\uff0c\u8dd1\u5230 x=0 y=-50 \u7684\u4f4d\u7f6e t . penup () t . goto ( 0 , - 50 ) # \u843d\u7b14\uff0c\u4e14\u7ebf\u6761\u989c\u8272\u4e3a\u7ea2\u8272\uff0c\u586b\u5145\u989c\u8272\u4e3a\u7ea2\u8272 t . pendown () t . color ( 'red' , 'red' ) # \u753b\u5fc3\u578b\u5e76\u586b\u5145 t . begin_fill () t . left ( 140 ) t . forward ( 111.65 ) curve ( t ) t . left ( 120 ) curve ( t ) t . forward ( 111.65 ) t . end_fill () # \u62ac\u7b14\uff0c\u5e76\u8dd1\u5230 x=0 y=-148 \u7684\u4f4d\u7f6e t . penup () t . goto ( 0 , - 148 ) # \u843d\u7b14\uff0c\u989c\u8272\u4e3a\u7eff\u8272 t . pendown () t . pencolor ( 'green' ) # \u5199 bilibili t . write ( 'bilibili' , False , align = 'center' , font = ( 'Times New Roman' , 64 , 'normal' )) # \u9690\u85cf\u7bad\u5934\uff08\u5373\u5c0f\u4e4c\u9f9f\uff09 t . hideturtle () # \u663e\u793a\u7a97\u53e3 w . mainloop ()","title":"\u5c0f\u4e4c\u9f9f\u5b9e\u4f8b"},{"location":"python/introduction/#_2","text":"\u6279\u91cf\u83b7\u53d6\u559c\u6b22\u7684\u56fe\u7247\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 from pathlib import Path import time import requests from bs4 import BeautifulSoup # \u6dfb\u52a0 HTTP header \u901a\u8fc7\u4fee\u6539User-Agent\u5b57\u6bb5\u4f2a\u88c5\u6210Chrome headers = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' } r = requests . get ( \"https://www.zhihu.com/question/33797069/answer/961097566\" , headers = headers ) # \u7528 BeautifulSoup \u89e3\u6790\u8fd4\u56de\u7684 HTML soup = BeautifulSoup ( r . text , 'html.parser' ) images = soup . select ( 'div.RichContent-inner > span > figure > img' ) image_number = 1 for image in images : image_url = image [ 'data-actualsrc' ] image_path = str ( image_number ) + Path ( image_url ) . suffix # \u4e0b\u8f7d\u6587\u4ef6 r = requests . get ( image_url ) f = open ( image_path , 'wb' ) for chunk in r . iter_content ( chunk_size = 512 * 1024 ): if chunk : # filter out keep-alive new chunks f . write ( chunk ) f . close () # \u6709\u793c\u8c8c\u5730\u95f4\u96945\u79d2\u83b7\u53d6\u4e00\u4e2a\u6587\u4ef6 time . sleep ( 5 ) image_number += 1","title":"\u7f51\u7edc\u722c\u866b"},{"location":"python/introduction/#-","text":"\u4e00\u952e\u6362\u88c5\uff1f\u53c2\u8003 \u840c\u65b0\u5982\u4f55\u7528 Python \u5b9e\u73b0\u4eba\u8138\u66ff\u6362\uff1f / matthewearl/faceswap \uimport cv2 import dlib import numpy import sys , os PREDICTOR_PATH = os . path . join ( os . path . abspath ( os . path . dirname ( __file__ )), \"shape_predictor_68_face_landmarks.dat\" ) SCALE_FACTOR = 1 FEATHER_AMOUNT = 11 # 1-16 \u8138\u578b JAW_POINTS = list ( range ( 0 , 17 )) # 17-21 \u53f3\u8fb9\u7709\u6bdb RIGHT_BROW_POINTS = list ( range ( 17 , 22 )) # 22-26 \u5de6\u8fb9\u7709\u6bdb LEFT_BROW_POINTS = list ( range ( 22 , 27 )) # 27-35 \u9f3b\u5b50 NOSE_POINTS = list ( range ( 27 , 35 )) # 36-41 \u773c\u775b RIGHT_EYE_POINTS = list ( range ( 36 , 42 )) # 42-47 \u773c\u775b LEFT_EYE_POINTS = list ( range ( 42 , 48 )) # 48-68 \u5634\u5df4 MOUTH_POINTS = list ( range ( 48 , 68 )) # 17-68 \u6574\u4e2a\u8138 FACE_POINTS = list ( range ( 17 , 68 )) FACE_END = 68 # Points used to line up the images. ALIGN_POINTS = ( LEFT_BROW_POINTS + RIGHT_EYE_POINTS + LEFT_EYE_POINTS + RIGHT_BROW_POINTS + NOSE_POINTS + MOUTH_POINTS ) # Points from the second image to overlay on the first. The convex hull of each # element will be overlaid. OVERLAY_POINTS = [ FACE_POINTS ] # Amount of blur to use during colour correction, as a fraction of the # pupillary distance. COLOUR_CORRECT_BLUR_FRAC = 0.6 detector = dlib . get_frontal_face_detector () predictor = dlib . shape_predictor ( PREDICTOR_PATH ) class TooManyFaces ( Exception ): pass class NoFaces ( Exception ): pass def draw_point ( img , p , color ): cv2 . circle ( img , ( p [ 0 ], p [ 1 ]), 2 , color , cv2 . FILLED , cv2 . LINE_AA , 0 ) def rect_contains ( rect , point ): if point [ 0 ] < rect [ 0 ]: return False elif point [ 1 ] < rect [ 1 ]: return False elif point [ 0 ] > rect [ 0 ] + rect [ 2 ]: return False elif point [ 1 ] > rect [ 1 ] + rect [ 3 ]: return False return True def measure_triangle ( shape , points ): rect = ( 0 , 0 , shape [ 1 ], shape [ 0 ]) sub_div = cv2 . Subdiv2D ( rect ) for p in points : sub_div . insert (( p [ 0 ], p [ 1 ])) #sub_div.insert(points) triangle_list = sub_div . getTriangleList () triangle = [] for t in triangle_list : pt = [( t [ 0 ], t [ 1 ]), ( t [ 2 ], t [ 3 ]), ( t [ 4 ], t [ 5 ])] pt1 = ( t [ 0 ], t [ 1 ]) pt2 = ( t [ 2 ], t [ 3 ]) pt3 = ( t [ 4 ], t [ 5 ]) if rect_contains ( rect , pt1 ) and rect_contains ( rect , pt2 ) and rect_contains ( rect , pt3 ): ind = [] for j in range ( 0 , 3 ): for k in range ( 0 , len ( points )): if abs ( pt [ j ][ 0 ] - points [ k ][ 0 ]) < 1.0 and abs ( pt [ j ][ 1 ] - points [ k ][ 1 ]) < 1.0 : ind . append ( k ) if len ( ind ) == 3 : triangle . append (( ind [ 0 ], ind [ 1 ], ind [ 2 ])) return triangle def morph_triangle ( src , dst , img , t_src , t_dst , t , alpha ): r1 = cv2 . boundingRect ( np . float32 ([ t_src ])) r2 = cv2 . boundingRect ( np . float32 ([ t_dst ])) r = cv2 . boundingRect ( np . float32 ([ t ])) t1_rect = [] t2_rect = [] t_rect = [] for i in range ( 0 , 3 ): t_rect . append ((( t [ i ][ 0 ] - r [ 0 ]), ( t [ i ][ 1 ] - r [ 1 ]))) t1_rect . append ((( t_src [ i ][ 0 ] - r1 [ 0 ]), ( t_src [ i ][ 1 ] - r1 [ 1 ]))) t2_rect . append ((( t_dst [ i ][ 0 ] - r2 [ 0 ]), ( t_dst [ i ][ 1 ] - r2 [ 1 ]))) mask = np . zeros (( r [ 3 ], r [ 2 ], 3 ), dtype = np . float32 ) cv2 . fillConvexPoly ( mask , np . int32 ( t_rect ), ( 1.0 , 1.0 , 1.0 ), 16 , 0 ) img1_rect = src [ r1 [ 1 ]: r1 [ 1 ] + r1 [ 3 ], r1 [ 0 ]: r1 [ 0 ] + r1 [ 2 ]] img2_rect = dst [ r2 [ 1 ]: r2 [ 1 ] + r2 [ 3 ], r2 [ 0 ]: r2 [ 0 ] + r2 [ 2 ]] size = ( r [ 2 ], r [ 3 ]) warp_img1 = affine_transform ( img1_rect , t1_rect , t_rect , size ) warp_img2 = affine_transform ( img2_rect , t2_rect , t_rect , size ) img_rect = ( 1.0 - alpha ) * warp_img1 + alpha * warp_img2 img [ r [ 1 ]: r [ 1 ] + r [ 3 ], r [ 0 ]: r [ 0 ] + r [ 2 ]] = img [ r [ 1 ]: r [ 1 ] + r [ 3 ], r [ 0 ]: r [ 0 ] + r [ 2 ]] * ( 1 - mask ) + img_rect * mask def affine_triangle ( src , dst , t_src , t_dst ): r1 = cv2 . boundingRect ( np . float32 ([ t_src ])) r2 = cv2 . boundingRect ( np . float32 ([ t_dst ])) t1_rect = [] t2_rect = [] t2_rect_int = [] for i in range ( 0 , 3 ): t1_rect . append (( t_src [ i ][ 0 ] - r1 [ 0 ], t_src [ i ][ 1 ] - r1 [ 1 ])) t2_rect . append (( t_dst [ i ][ 0 ] - r2 [ 0 ], t_dst [ i ][ 1 ] - r2 [ 1 ])) t2_rect_int . append (( t_dst [ i ][ 0 ] - r2 [ 0 ], t_dst [ i ][ 1 ] - r2 [ 1 ])) mask = np . zeros (( r2 [ 3 ], r2 [ 2 ], 3 ), dtype = np . float32 ) cv2 . fillConvexPoly ( mask , np . int32 ( t2_rect_int ), ( 1.0 , 1.0 , 1.0 ), 16 , 0 ) img1_rect = src [ r1 [ 1 ]: r1 [ 1 ] + r1 [ 3 ], r1 [ 0 ]: r1 [ 0 ] + r1 [ 2 ]] size = ( r2 [ 2 ], r2 [ 3 ]) img2_rect = affine_transform ( img1_rect , t1_rect , t2_rect , size ) img2_rect = img2_rect * mask dst [ r2 [ 1 ]: r2 [ 1 ] + r2 [ 3 ], r2 [ 0 ]: r2 [ 0 ] + r2 [ 2 ]] = dst [ r2 [ 1 ]: r2 [ 1 ] + r2 [ 3 ], r2 [ 0 ]: r2 [ 0 ] + r2 [ 2 ]] * ( ( 1.0 , 1.0 , 1.0 ) - mask ) dst [ r2 [ 1 ]: r2 [ 1 ] + r2 [ 3 ], r2 [ 0 ]: r2 [ 0 ] + r2 [ 2 ]] = dst [ r2 [ 1 ]: r2 [ 1 ] + r2 [ 3 ], r2 [ 0 ]: r2 [ 0 ] + r2 [ 2 ]] + img2_rect def affine_transform ( src , src_tri , dst_tri , size ): warp_mat = cv2 . getAffineTransform ( np . float32 ( src_tri ), np . float32 ( dst_tri )) dst = cv2 . warpAffine ( src , warp_mat , ( size [ 0 ], size [ 1 ]), None , flags = cv2 . INTER_LINEAR , borderMode = cv2 . BORDER_REFLECT_101 ) return dst def get_landmarks ( im ): rects = detector ( im , 1 ) if len ( rects ) > 1 : raise TooManyFaces if len ( rects ) == 0 : raise NoFaces # \u7279\u5f81\u63d0\u53d6\u5668\uff08predictor\uff09\u8981\u4e00\u4e2a\u7c97\u7cd9\u7684\u8fb9\u754c\u6846\u4f5c\u4e3a\u7b97\u6cd5\u8f93\u5165\uff0c\u7531\u4f20\u7edf\u7684\u80fd\u8fd4\u56de\u4e00\u4e2a\u77e9\u5f62\u5217\u8868\u7684\u4eba\u8138\u68c0\u6d4b\u5668\uff08detector\uff09\u63d0\u4f9b\uff0c\u5176\u6bcf\u4e2a\u77e9\u5f62\u5217\u8868\u5728\u56fe\u50cf\u4e2d\u5bf9\u5e94\u4e00\u4e2a\u8138\u3002 return numpy . matrix ([[ p . x , p . y ] for p in predictor ( im , rects [ 0 ]) . parts ()]) def draw_convex_hull ( im , points , color ): points = cv2 . convexHull ( points ) cv2 . fillConvexPoly ( im , points , color = color ) # \u7528\u666e\u6c0f\u5206\u6790\u6cd5\uff08Procrustes Analysis\uff09\u5b9e\u73b0\u4eba\u8138\u5bf9\u9f50 def transformation_from_points ( points1 , points2 ): \"\"\" Return an affine transformation [s * R | T] such that: sum ||s*R*p1,i + T - p2,i||^2 is minimized. \"\"\" # Solve the procrustes problem by subtracting centroids, scaling by the # standard deviation, and then using the SVD to calculate the rotation. See # the following for more details: # https://en.wikipedia.org/wiki/Orthogonal_Procrustes_problem # 1.\u5c062\u4e2a\u56fe\u7247\u7684\u8138\u90e8\u6d6e\u70b9\u8f6c\u6362\u6210\u77e9\u9635 points1 = points1 . astype ( numpy . float64 ) points2 = points2 . astype ( numpy . float64 ) # 2.\u5c06\u6bcf\u4e00\u4e2a\u70b9\u96c6\u51cf\u53bb\u5b83\u7684\u77e9\u5fc3\u3002\u4e00\u65e6\u4e3a\u8fd9\u4e24\u4e2a\u65b0\u7684\u70b9\u96c6\u627e\u5230\u4e86\u4e00\u4e2a\u6700\u4f73\u7684\u7f29\u653e\u548c\u65cb\u8f6c\u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u77e9\u5fc3c1\u548cc2\u5c31\u53ef\u4ee5\u7528\u6765\u627e\u5230\u5b8c\u6574\u7684\u89e3\u51b3\u65b9\u6848\u3002 c1 = numpy . mean ( points1 , axis = 0 ) c2 = numpy . mean ( points2 , axis = 0 ) points1 -= c1 points2 -= c2 # 3.\u540c\u6837\uff0c\u5c06\u6bcf\u4e00\u4e2a\u70b9\u96c6\u9664\u4ee5\u5b83\u7684\u6807\u51c6\u504f\u5dee\u3002\u8fd9\u6d88\u9664\u4e86\u7f29\u653e\u504f\u5dee\u3002 s1 = numpy . std ( points1 ) s2 = numpy . std ( points2 ) points1 /= s1 points2 /= s2 # 4.\u4f7f\u7528\u5947\u5f02\u503c\u5206\u89e3\uff08singular value decomposition\uff09\u8ba1\u7b97\u65cb\u8f6c\u90e8\u5206\u3002\u8bf7\u53c2\u9605\u7ef4\u57fa\u767e\u79d1\u6709\u5173Orthogonal Procrustes Problem\u7684\u6587\u7ae0\uff0c\u4ee5\u4e86\u89e3\u5b83\u7684\u5177\u4f53\u5de5\u4f5c\u539f\u7406\u3002 U , S , Vt = numpy . linalg . svd ( points1 . T * points2 ) # The R we seek is in fact the transpose of the one given by U * Vt. This # is because the above formulation assumes the matrix goes on the right # (with row vectors) where as our solution requires the matrix to be on the # left (with column vectors). R = ( U * Vt ) . T # 5.\u5c06\u6574\u4e2a\u53d8\u6362\u8fc7\u7a0b\u4ee5\u4eff\u5c04\u53d8\u6362\u77e9\u9635\u5f62\u5f0f\u8fd4\u56de\u3002 return numpy . vstack ([ numpy . hstack ((( s2 / s1 ) * R , c2 . T - ( s2 / s1 ) * R * c1 . T )), numpy . matrix ([ 0. , 0. , 1. ]) ]) def read_im_and_landmarks ( fname ): im = cv2 . imread ( fname , cv2 . IMREAD_COLOR ) im = cv2 . resize ( im , ( im . shape [ 1 ] * SCALE_FACTOR , im . shape [ 0 ] * SCALE_FACTOR )) s = get_landmarks ( im ) return im , s def warp_im ( im , M , dshape ): output_im = numpy . zeros ( dshape , dtype = im . dtype ) cv2 . warpAffine ( im , M [: 2 ], ( dshape [ 1 ], dshape [ 0 ]), dst = output_im , borderMode = cv2 . BORDER_TRANSPARENT , flags = cv2 . WARP_INVERSE_MAP ) return output_im def get_face_mask ( im , landmarks ): im = numpy . zeros ( im . shape [: 2 ], dtype = numpy . float64 ) for group in OVERLAY_POINTS : draw_convex_hull ( im , landmarks [ group ], color = 1 ) im = numpy . array ([ im , im , im ]) . transpose (( 1 , 2 , 0 )) im = ( cv2 . GaussianBlur ( im , ( FEATHER_AMOUNT , FEATHER_AMOUNT ), 0 ) > 0 ) * 1.0 im = cv2 . GaussianBlur ( im , ( FEATHER_AMOUNT , FEATHER_AMOUNT ), 0 ) return im def correct_colours ( im1 , im2 , landmarks1 ): blur_amount = COLOUR_CORRECT_BLUR_FRAC * numpy . linalg . norm ( numpy . mean ( landmarks1 [ LEFT_EYE_POINTS ], axis = 0 ) - numpy . mean ( landmarks1 [ RIGHT_EYE_POINTS ], axis = 0 )) blur_amount = int ( blur_amount ) if blur_amount % 2 == 0 : blur_amount += 1 im1_blur = cv2 . GaussianBlur ( im1 , ( blur_amount , blur_amount ), 0 ) im2_blur = cv2 . GaussianBlur ( im2 , ( blur_amount , blur_amount ), 0 ) # Avoid divide-by-zero errors. im2_blur += ( 128 * ( im2_blur <= 1.0 )) . astype ( im2_blur . dtype ) return ( im2 . astype ( numpy . float64 ) * im1_blur . astype ( numpy . float64 ) / im2_blur . astype ( numpy . float64 )) def change_face ( src_img , dst_img , out_img ): # \u4e00\u3001\u5c06face\u53d8\u5f62\u6210model\u7684\u5f62\u72b6 # 1.\u5c06\u4e24\u5f20\u56fe\u7247\u8f6c\u5316\u6210numpy\u6570\u7ec4\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a68 x2\u5143\u7d20\u77e9\u9635\uff0c\u8f93\u5165\u56fe\u50cf\u7684\u6bcf\u4e2a\u7279\u5f81\u70b9\u5bf9\u5e94\u6bcf\u884c\u7684\u4e00\u4e2ax\uff0cy\u5750\u6807\u3002 model_img , model_landmarks = read_im_and_landmarks ( src_img ) face_img , face_landmarks = read_im_and_landmarks ( dst_img ) # 2.\u7528\u666e\u6c0f\u5206\u6790\u6cd5\uff08Procrustes Analysis\uff09\u5b9e\u73b0\u4eba\u8138\u5bf9\u9f50 M = transformation_from_points ( model_landmarks [ ALIGN_POINTS ], face_landmarks [ ALIGN_POINTS ]) mask = get_face_mask ( face_img , face_landmarks ) warped_mask = warp_im ( mask , M , model_img . shape ) combined_mask = numpy . max ( [ get_face_mask ( model_img , model_landmarks ), warped_mask ], axis = 0 ) warped_im2 = warp_im ( face_img , M , model_img . shape ) warped_corrected_im2 = correct_colours ( model_img , warped_im2 , model_landmarks ) output_im = model_img * ( 1.0 - combined_mask ) + warped_corrected_im2 * combined_mask cv2 . imwrite ( out_img , output_im ) if __name__ == '__main__' : change_face ( 'target.jpg' , 'face.jpg' , 'output.jpg' )","title":"\u4eba\u5de5\u667a\u80fd-\u6362\u8138"},{"location":"python/io-file/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u7ec3\u4e60 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 import struct # \u4f7f\u7528\u590d\u6742\u5ea6\u7531\u9ad8\u5230\u4f4e\u7684 70 \u4e2a\u53ef\u6253\u5370 ASCII \u5b57\u7b26\u4ee3\u8868 70 \u4e2a\u4e0d\u540c\u7684\u7070\u5ea6 gray_scale = '$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1 {} []?-_+~<>i!lI;:,\"^` \\' . ' # \u8ba1\u7b97\u91cf\u5316\u6240\u7528\u7684\u503c scale = 256 / len ( gray_scale ) with open ( 'test.txt' , 'w' ) as output : # \u4f7f\u7528 r \u8bfb\u53d6 b \u4e8c\u8fdb\u5236 \u6a21\u5f0f\u6253\u5f00\u6587\u4ef6 with open ( 'test.bmp' , 'rb' ) as f : # \u8bfb\u53d6 14 \u5b57\u8282\u7684\u6587\u4ef6\u5934 bmp_file_header = f . read ( 14 ) # BMP \u6587\u4ef6\u5934 # bm \u5bf9\u5e94 2 \u5b57\u8282\u7684\u6807\u5fd7'BM' # size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u6587\u4ef6\u5927\u5c0f # r1 r2 \u5bf9\u5e94 2 \u4e2a\u5bbd\u5ea6\u4e3a 2 \u5b57\u8282\u7684\u4fdd\u7559\u4f4d\u7f6e # offset \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u6570\u636e\u7684\u8d77\u59cb\u504f\u79fb bm , size , r1 , r2 , offset = struct . unpack ( '<2sIHHI' , bmp_file_header ) print ( bm , size , offset ) # \u8bfb\u53d6 40 \u5b57\u8282\u7684\u6587\u4ef6\u5934 bmp_info_header = f . read ( 40 ) # \u4e0d\u5b9a\u957f\u7684\u4fe1\u606f\u5934\uff0c\u4e00\u822c\u4e3a 40 \u5b57\u8282 # info_size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u4fe1\u606f\u5934\u5927\u5c0f # width \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u5bbd\u5ea6 # height \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u9ad8\u5ea6 # planes \u5bf9\u5e94 2 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8272\u5f69\u5c42\u6570\uff0c\u4e00\u822c\u503c\u4e3a 1 # bits \u5bf9\u5e94 2 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u4f4d\u6df1\u5ea6\uff0c\u5373\u7528\u591a\u5c11\u6bd4\u7279\u8868\u793a\u989c\u8272 # compression \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u538b\u7f29\u65b9\u5f0f # data_size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u6570\u636e\u5927\u5c0f = width * height * bits # x_res \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u6a2a\u5411\uff08x\u8f74\uff09\u5206\u8fa8\u7387\uff08\u591a\u5c11\u50cf\u7d20\u6bcf\u7c73\uff09 # y_res \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u7eb5\u5411\uff08y\u8f74\uff09\u5206\u8fa8\u7387\uff08\u591a\u5c11\u50cf\u7d20\u6bcf\u7c73\uff09 # clr_used \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8c03\u8272\u677f\u989c\u8272\u6570\u91cf # clr_important \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8c03\u8272\u677f\u91cd\u8981\u989c\u8272\u6570\u91cf info_size , width , height , planes , bits , compression , data_size , x_res , y_res , clr_used , clr_important = struct . unpack ( '<IiiHHIIiiII' , bmp_info_header ) print ( info_size , width , height , bits , data_size ) for h in range ( height ): for w in range ( width ): # \u8bfb\u53d6 3 \u5b57\u8282\u7684\u989c\u8272\uff0c\u5171\u8ba1 24 bits \uff0c\u5bf9\u5e94 Blue Green Red. current_pix_color = f . read ( 3 ) # \u5c06 BGR \u6309\u81ea\u5df1\u5012\u5e8f\u4e3a RGB \u65b9\u4fbf\u663e\u793a current_pix_color = current_pix_color [:: - 1 ] # Gray = R*0.2126 + G*0.7152 + B*0.0722 gray = int ( current_pix_color [ 0 ] * 0.2126 + current_pix_color [ 1 ] * 0.7152 + current_pix_color [ 2 ] * 0.0722 ) # \u8ba1\u7b97\u91cf\u5316\u540e\u7684\u7d22\u5f15\u503c index = int ( gray / scale ) # \u8bfb\u51fa\u5bf9\u5e94\u7684 ASCII \u5b57\u7b26 ascii_gray = gray_scale [ index ] # \u5199\u5165\u6587\u4ef6 output . write ( ascii_gray ) # \u6bcf\u5199\u5b8c\u4e00\u884c\u5199\u5165\u4e00\u4e2a\u6362\u884c\u7b26 output . write ( ' \\n ' )","title":"\u8f93\u5165\u8f93\u51fa"},{"location":"python/io-file/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 import struct # \u4f7f\u7528\u590d\u6742\u5ea6\u7531\u9ad8\u5230\u4f4e\u7684 70 \u4e2a\u53ef\u6253\u5370 ASCII \u5b57\u7b26\u4ee3\u8868 70 \u4e2a\u4e0d\u540c\u7684\u7070\u5ea6 gray_scale = '$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1 {} []?-_+~<>i!lI;:,\"^` \\' . ' # \u8ba1\u7b97\u91cf\u5316\u6240\u7528\u7684\u503c scale = 256 / len ( gray_scale ) with open ( 'test.txt' , 'w' ) as output : # \u4f7f\u7528 r \u8bfb\u53d6 b \u4e8c\u8fdb\u5236 \u6a21\u5f0f\u6253\u5f00\u6587\u4ef6 with open ( 'test.bmp' , 'rb' ) as f : # \u8bfb\u53d6 14 \u5b57\u8282\u7684\u6587\u4ef6\u5934 bmp_file_header = f . read ( 14 ) # BMP \u6587\u4ef6\u5934 # bm \u5bf9\u5e94 2 \u5b57\u8282\u7684\u6807\u5fd7'BM' # size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u6587\u4ef6\u5927\u5c0f # r1 r2 \u5bf9\u5e94 2 \u4e2a\u5bbd\u5ea6\u4e3a 2 \u5b57\u8282\u7684\u4fdd\u7559\u4f4d\u7f6e # offset \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u6570\u636e\u7684\u8d77\u59cb\u504f\u79fb bm , size , r1 , r2 , offset = struct . unpack ( '<2sIHHI' , bmp_file_header ) print ( bm , size , offset ) # \u8bfb\u53d6 40 \u5b57\u8282\u7684\u6587\u4ef6\u5934 bmp_info_header = f . read ( 40 ) # \u4e0d\u5b9a\u957f\u7684\u4fe1\u606f\u5934\uff0c\u4e00\u822c\u4e3a 40 \u5b57\u8282 # info_size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u4fe1\u606f\u5934\u5927\u5c0f # width \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u5bbd\u5ea6 # height \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u9ad8\u5ea6 # planes \u5bf9\u5e94 2 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8272\u5f69\u5c42\u6570\uff0c\u4e00\u822c\u503c\u4e3a 1 # bits \u5bf9\u5e94 2 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u4f4d\u6df1\u5ea6\uff0c\u5373\u7528\u591a\u5c11\u6bd4\u7279\u8868\u793a\u989c\u8272 # compression \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u538b\u7f29\u65b9\u5f0f # data_size \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u56fe\u50cf\u6570\u636e\u5927\u5c0f = width * height * bits # x_res \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u6a2a\u5411\uff08x\u8f74\uff09\u5206\u8fa8\u7387\uff08\u591a\u5c11\u50cf\u7d20\u6bcf\u7c73\uff09 # y_res \u5bf9\u5e94 4 \u5b57\u8282\u6709\u7b26\u53f7\u6574\u578b\u8868\u793a\u7eb5\u5411\uff08y\u8f74\uff09\u5206\u8fa8\u7387\uff08\u591a\u5c11\u50cf\u7d20\u6bcf\u7c73\uff09 # clr_used \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8c03\u8272\u677f\u989c\u8272\u6570\u91cf # clr_important \u5bf9\u5e94 4 \u5b57\u8282\u65e0\u7b26\u53f7\u6574\u578b\u8868\u793a\u8c03\u8272\u677f\u91cd\u8981\u989c\u8272\u6570\u91cf info_size , width , height , planes , bits , compression , data_size , x_res , y_res , clr_used , clr_important = struct . unpack ( '<IiiHHIIiiII' , bmp_info_header ) print ( info_size , width , height , bits , data_size ) for h in range ( height ): for w in range ( width ): # \u8bfb\u53d6 3 \u5b57\u8282\u7684\u989c\u8272\uff0c\u5171\u8ba1 24 bits \uff0c\u5bf9\u5e94 Blue Green Red. current_pix_color = f . read ( 3 ) # \u5c06 BGR \u6309\u81ea\u5df1\u5012\u5e8f\u4e3a RGB \u65b9\u4fbf\u663e\u793a current_pix_color = current_pix_color [:: - 1 ] # Gray = R*0.2126 + G*0.7152 + B*0.0722 gray = int ( current_pix_color [ 0 ] * 0.2126 + current_pix_color [ 1 ] * 0.7152 + current_pix_color [ 2 ] * 0.0722 ) # \u8ba1\u7b97\u91cf\u5316\u540e\u7684\u7d22\u5f15\u503c index = int ( gray / scale ) # \u8bfb\u51fa\u5bf9\u5e94\u7684 ASCII \u5b57\u7b26 ascii_gray = gray_scale [ index ] # \u5199\u5165\u6587\u4ef6 output . write ( ascii_gray ) # \u6bcf\u5199\u5b8c\u4e00\u884c\u5199\u5165\u4e00\u4e2a\u6362\u884c\u7b26 output . write ( ' \\n ' )","title":"\u7ec3\u4e60"},{"location":"substitute/windbg-script/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u8bfe\u4ef6\u5185\u5bb9\u53c2\u8003 \u5fae\u8f6f\u5b98\u65b9\u6587\u6863 - WinDBG \u547d\u4ee4 \u3002 \u5b9e\u9a8c \u8981\u4e0b\u8f7d Windows 7 \u53ef\u7528\u7684 WinDBG \u3002\u8bf7\u91c7\u7528\u4e0b\u8f7d\u65e7\u7248\u7684 Windows SDK \u5728\u7ebf\u5b89\u88c5\u7a0b\u5e8f\u5e76\u4ec5\u9009\u62e9\u5b89\u88c5 WinDBG\u3002 \u5b98\u65b9 SDK \u5f52\u6863\u9875\u9762 Windows 7 SDK \u5728\u7ebf\u5b89\u88c5\u7a0b\u5e8f \u8bf7\u4fee\u6539 32 \u4f4d Windows 7 \u4e0b\u7684\u8ba1\u7b97\u5668\u7684\u663e\u793a\u8fc7\u7a0b\uff0c\u4f7f\u5f97\u5f53\u4f60\u8f93\u5165\u7684\u5185\u5bb9\u662f\u7279\u5b9a\u6570\u5b57\u5982 \"999\" \u7684\u65f6\u5019\u901a\u8fc7\u8c03\u8bd5\u5668\u811a\u672c\u81ea\u52a8\u6539\u4e3a \"666\"\u3002 \u6821\u56ed\u7f51\u67e5\u770b\u89c6\u9891\u8bf7\u70b9\u51fb \u6b64\u5904 \u3002","title":"WinDBG \u811a\u672c"},{"location":"substitute/windbg-script/#_1","text":"\u8981\u4e0b\u8f7d Windows 7 \u53ef\u7528\u7684 WinDBG \u3002\u8bf7\u91c7\u7528\u4e0b\u8f7d\u65e7\u7248\u7684 Windows SDK \u5728\u7ebf\u5b89\u88c5\u7a0b\u5e8f\u5e76\u4ec5\u9009\u62e9\u5b89\u88c5 WinDBG\u3002 \u5b98\u65b9 SDK \u5f52\u6863\u9875\u9762 Windows 7 SDK \u5728\u7ebf\u5b89\u88c5\u7a0b\u5e8f \u8bf7\u4fee\u6539 32 \u4f4d Windows 7 \u4e0b\u7684\u8ba1\u7b97\u5668\u7684\u663e\u793a\u8fc7\u7a0b\uff0c\u4f7f\u5f97\u5f53\u4f60\u8f93\u5165\u7684\u5185\u5bb9\u662f\u7279\u5b9a\u6570\u5b57\u5982 \"999\" \u7684\u65f6\u5019\u901a\u8fc7\u8c03\u8bd5\u5668\u811a\u672c\u81ea\u52a8\u6539\u4e3a \"666\"\u3002 \u6821\u56ed\u7f51\u67e5\u770b\u89c6\u9891\u8bf7\u70b9\u51fb \u6b64\u5904 \u3002","title":"\u5b9e\u9a8c"},{"location":"substitute/windbg/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u8bfe\u4ef6\u5185\u5bb9\u53c2\u8003 \u5fae\u8f6f\u5b98\u65b9\u6587\u6863 \u3002","title":"WinDBG"},{"location":"web/bootstrap/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u5b9e\u4f8b \u57fa\u4e8e Bootstrap \u7684\u5b66\u751f\u7b80\u5386\uff0c\u5927\u5bb6\u53ef\u4ee5\u5b66\u4e60\u4fee\u6539\u3002 \u7b80\u5386","title":"Bootstrap"},{"location":"web/bootstrap/#_1","text":"\u57fa\u4e8e Bootstrap \u7684\u5b66\u751f\u7b80\u5386\uff0c\u5927\u5bb6\u53ef\u4ee5\u5b66\u4e60\u4fee\u6539\u3002 \u7b80\u5386","title":"\u5b9e\u4f8b"},{"location":"web/css-box/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u8868\u683c\u7f8e\u5316\u6a21\u677f \u6a21\u677f","title":"CSS \u76d2\u5b50\u6837\u5f0f"},{"location":"web/css-first-steps/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u5916\u90e8\u6837\u5f0f - HTML \u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" /> < title > \u7b80\u5386 </ title > < link rel = \"stylesheet\" href = \"styles.css\" /> </ head > < body > < h1 > \u7f8e\u5316\u7b80\u5386 </ h1 > < p > \u6211\u8981\u53d8\u7f8e\u6211\u7684\u670b\u53cb\u3002 </ p > </ body > </ html > \u5916\u90e8\u6837\u5f0f - style.css \u6587\u4ef6 1 2 3 4 5 6 7 8 9 h1 { color : blue ; background-color : yellow ; border : 1 px solid black ; } p { color : red ; } \u5185\u90e8\u6837\u5f0f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" /> < title > \u7b80\u5386 </ title > < style > h1 { color : blue ; background-color : yellow ; border : 1 px solid black ; } p { color : red ; } </ style > </ head > < body > < h1 > \u7f8e\u5316\u7b80\u5386 </ h1 > < p > \u6211\u8981\u53d8\u7f8e\u6211\u7684\u670b\u53cb\u3002 </ p > </ body > </ html > \u5185\u8054\u6837\u5f0f 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" /> < title > \u7b80\u5386 </ title > </ head > < body > < h1 style = \"color: blue;background-color: yellow;border: 1px solid black;\" > \u7f8e\u5316\u7b80\u5386 </ h1 > < p style = \"color:red;\" > \u6211\u8981\u53d8\u7f8e\u6211\u7684\u670b\u53cb\u3002 </ p > </ body > </ html >","title":"CSS \u6837\u5f0f\u8868"},{"location":"web/css-first-steps/#-html","text":"1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" /> < title > \u7b80\u5386 </ title > < link rel = \"stylesheet\" href = \"styles.css\" /> </ head > < body > < h1 > \u7f8e\u5316\u7b80\u5386 </ h1 > < p > \u6211\u8981\u53d8\u7f8e\u6211\u7684\u670b\u53cb\u3002 </ p > </ body > </ html >","title":"\u5916\u90e8\u6837\u5f0f - HTML \u6587\u4ef6"},{"location":"web/css-first-steps/#-stylecss","text":"1 2 3 4 5 6 7 8 9 h1 { color : blue ; background-color : yellow ; border : 1 px solid black ; } p { color : red ; }","title":"\u5916\u90e8\u6837\u5f0f - style.css \u6587\u4ef6"},{"location":"web/css-first-steps/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" /> < title > \u7b80\u5386 </ title > < style > h1 { color : blue ; background-color : yellow ; border : 1 px solid black ; } p { color : red ; } </ style > </ head > < body > < h1 > \u7f8e\u5316\u7b80\u5386 </ h1 > < p > \u6211\u8981\u53d8\u7f8e\u6211\u7684\u670b\u53cb\u3002 </ p > </ body > </ html >","title":"\u5185\u90e8\u6837\u5f0f"},{"location":"web/css-first-steps/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" /> < title > \u7b80\u5386 </ title > </ head > < body > < h1 style = \"color: blue;background-color: yellow;border: 1px solid black;\" > \u7f8e\u5316\u7b80\u5386 </ h1 > < p style = \"color:red;\" > \u6211\u8981\u53d8\u7f8e\u6211\u7684\u670b\u53cb\u3002 </ p > </ body > </ html >","title":"\u5185\u8054\u6837\u5f0f"},{"location":"web/css-layout/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"CSS \u5e03\u5c40"},{"location":"web/css-text/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u4f5c\u4e1a \u8bf7\u4e0b\u8f7d\u538b\u7f29\u5305 \u4f5c\u4e1a\u6a21\u677f \u5e76\u5b8c\u6210\u4ee5\u4e0b\u4efb\u52a1\uff1a \u4f60\u6709\u4e00\u4e2a\u865a\u6784\u7684\u793e\u533a\u5927\u5b66\u4e3b\u9875\u7684\u672a\u5904\u7406 HTML \u6587\u4ef6\u548c\u4e00\u4e9b CSS \u6587\u4ef6\u3002\u8fd9\u4e9b CSS \u6587\u4ef6\u628a\u7f51\u9875\u5206\u6210\u4e24\u680f\u5e03\u5c40\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u6837\u5f0f\u5316\u3002\u4f60\u5c06\u5728 CSS \u6587\u4ef6\u5e95\u90e8\u7684\u6ce8\u91ca\u4e0b\u9762\u5199\u4f60\u7684 CSS\uff0c\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u5730\u6807\u51fa\u4f60\u7684\u5de5\u4f5c\u3002 \u5b57\u4f53 \u9009\u62e9\u4e00\u4e9b\u81ea\u5df1\u559c\u6b22\u7684\u5b57\u4f53\u6765\u6539\u8fdb\u9875\u9762\u3002 \u6587\u672c\u6837\u5f0f\u5316\u57fa\u7840 \u8bbe\u7f6e\u5168\u7ad9\u7f51\u9875 font-size \u4e3a 10px\u3002 \u4f7f\u7528\u76f8\u5bf9\u5355\u4f4d\uff08relative unit\uff09\u4e3a\u6807\u9898\u548c\u5176\u4ed6\u5143\u7d20\u7684 font-sizes \u8bbe\u7f6e\u5408\u9002\u7684\u503c\u3002 \u4e3a body \u6587\u672c\u8bbe\u7f6e\u5408\u9002\u7684 line-height\u3002 \u5c45\u4e2d\u9875\u9762\u9876\u7ea7\u6807\u9898\u3002 \u4e3a\u6807\u9898\u8bbe\u7f6e letter-spacing \u907f\u514d\u5b57\u95f4\u592a\u8fc7\u62e5\u6324\u3002 \u4e3a body \u6587\u672c\u8bbe\u7f6e\u5408\u9002\u7684 letter-spacing \u548c word-spacing\u3002 \u94fe\u63a5 \u8bbe\u7f6e link, visited, focus, \u548c hover \u72b6\u6001\u8bbe\u7f6e\u989c\u8272\uff0c\u4e0e\u9875\u9762\u9876\u90e8\u548c\u5e95\u90e8\u7684\u6c34\u5e73\u7ebf\u989c\u8272\u76f8\u5339\u914d\u3002 \u8bbe\u7f6e\u94fe\u63a5\u9ed8\u8ba4\u5e26\u4e0b\u5212\u7ebf\uff0c\u4f46 hover \u548c focus \u65f6\u4e0b\u5212\u7ebf\u6d88\u5931\u3002 \u53d6\u6d88\u9875\u9762\u4e2d\u6240\u6709\u94fe\u63a5 focus \u65f6\u9ed8\u8ba4\u7684\u5916\u8fb9\u7ebf\u3002 \u8bbe\u7f6e active \u65f6\u6709\u663e\u8457\u4e0d\u540c\u7684\u6837\u5f0f\uff0c\u4f7f\u5176\u53c8\u7a81\u51fa\u53c8\u4e0e\u6574\u4f53\u9875\u9762\u8bbe\u8ba1\u548c\u8c10\u3002 \u5217\u8868 \u786e\u4fdd\u5217\u8868\u548c\u5217\u8868\u9879\u4e0e\u9875\u9762\u6574\u4f53\u6837\u5f0f\u548c\u8c10\u3002\u6bcf\u4e2a\u5217\u8868\u9879\u5e94\u8be5\u6709\u540c\u6837\u7684\u4e0e\u6bb5\u843d\u884c\u76f8\u540c\u7684 line-height \u3002\u6bcf\u4e2a\u5217\u8868\u4e0a\u4e0b\u95f4\u8ddd\u5e94\u8be5\u4e0e\u6bb5\u843d\u95f4\u8ddd\u76f8\u540c\u3002 \u4f7f\u7528\u4e0e\u9875\u9762\u8bbe\u8ba1\u5339\u914d\u7684\u5217\u8868\u9879\u7b26\u53f7\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u81ea\u5b9a\u4e49\u7684\u56fe\u50cf\u6216\u8005\u5176\u4ed6\u7684\u559c\u6b22\u7684\u7b26\u53f7\u3002 \u5bfc\u822a\u680f\u83dc\u5355 \u6837\u5f0f\u5316\u4f60\u7684\u5bfc\u822a\u680f\u83dc\u5355\uff0c\u4f7f\u5b83\u62e5\u6709\u4e0e\u9875\u9762\u6574\u4f53\u76f8\u5339\u914d\u7684\u5916\u89c2\u3002 \u5b8c\u6210\u540e\uff0c\u540c\u6837\u538b\u7f29\u53d1\u9001\u5230\u90ae\u7bb1\uff0c\u622a\u81f3 2019-10-11\u3002 \u4f5c\u4e1a\u53c2\u8003 \u5982\u679c\u5b9e\u5728\u65e0\u6cd5\u5b8c\u6210\uff0c\u8bf7\u53c2\u8003 \u4f5c\u4e1a\u53c2\u8003","title":"CSS \u6587\u672c\u6837\u5f0f"},{"location":"web/css-text/#_1","text":"\u8bf7\u4e0b\u8f7d\u538b\u7f29\u5305 \u4f5c\u4e1a\u6a21\u677f \u5e76\u5b8c\u6210\u4ee5\u4e0b\u4efb\u52a1\uff1a \u4f60\u6709\u4e00\u4e2a\u865a\u6784\u7684\u793e\u533a\u5927\u5b66\u4e3b\u9875\u7684\u672a\u5904\u7406 HTML \u6587\u4ef6\u548c\u4e00\u4e9b CSS \u6587\u4ef6\u3002\u8fd9\u4e9b CSS \u6587\u4ef6\u628a\u7f51\u9875\u5206\u6210\u4e24\u680f\u5e03\u5c40\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u6837\u5f0f\u5316\u3002\u4f60\u5c06\u5728 CSS \u6587\u4ef6\u5e95\u90e8\u7684\u6ce8\u91ca\u4e0b\u9762\u5199\u4f60\u7684 CSS\uff0c\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u5730\u6807\u51fa\u4f60\u7684\u5de5\u4f5c\u3002","title":"\u4f5c\u4e1a"},{"location":"web/css-text/#_2","text":"\u9009\u62e9\u4e00\u4e9b\u81ea\u5df1\u559c\u6b22\u7684\u5b57\u4f53\u6765\u6539\u8fdb\u9875\u9762\u3002","title":"\u5b57\u4f53"},{"location":"web/css-text/#_3","text":"\u8bbe\u7f6e\u5168\u7ad9\u7f51\u9875 font-size \u4e3a 10px\u3002 \u4f7f\u7528\u76f8\u5bf9\u5355\u4f4d\uff08relative unit\uff09\u4e3a\u6807\u9898\u548c\u5176\u4ed6\u5143\u7d20\u7684 font-sizes \u8bbe\u7f6e\u5408\u9002\u7684\u503c\u3002 \u4e3a body \u6587\u672c\u8bbe\u7f6e\u5408\u9002\u7684 line-height\u3002 \u5c45\u4e2d\u9875\u9762\u9876\u7ea7\u6807\u9898\u3002 \u4e3a\u6807\u9898\u8bbe\u7f6e letter-spacing \u907f\u514d\u5b57\u95f4\u592a\u8fc7\u62e5\u6324\u3002 \u4e3a body \u6587\u672c\u8bbe\u7f6e\u5408\u9002\u7684 letter-spacing \u548c word-spacing\u3002","title":"\u6587\u672c\u6837\u5f0f\u5316\u57fa\u7840"},{"location":"web/css-text/#_4","text":"\u8bbe\u7f6e link, visited, focus, \u548c hover \u72b6\u6001\u8bbe\u7f6e\u989c\u8272\uff0c\u4e0e\u9875\u9762\u9876\u90e8\u548c\u5e95\u90e8\u7684\u6c34\u5e73\u7ebf\u989c\u8272\u76f8\u5339\u914d\u3002 \u8bbe\u7f6e\u94fe\u63a5\u9ed8\u8ba4\u5e26\u4e0b\u5212\u7ebf\uff0c\u4f46 hover \u548c focus \u65f6\u4e0b\u5212\u7ebf\u6d88\u5931\u3002 \u53d6\u6d88\u9875\u9762\u4e2d\u6240\u6709\u94fe\u63a5 focus \u65f6\u9ed8\u8ba4\u7684\u5916\u8fb9\u7ebf\u3002 \u8bbe\u7f6e active \u65f6\u6709\u663e\u8457\u4e0d\u540c\u7684\u6837\u5f0f\uff0c\u4f7f\u5176\u53c8\u7a81\u51fa\u53c8\u4e0e\u6574\u4f53\u9875\u9762\u8bbe\u8ba1\u548c\u8c10\u3002","title":"\u94fe\u63a5"},{"location":"web/css-text/#_5","text":"\u786e\u4fdd\u5217\u8868\u548c\u5217\u8868\u9879\u4e0e\u9875\u9762\u6574\u4f53\u6837\u5f0f\u548c\u8c10\u3002\u6bcf\u4e2a\u5217\u8868\u9879\u5e94\u8be5\u6709\u540c\u6837\u7684\u4e0e\u6bb5\u843d\u884c\u76f8\u540c\u7684 line-height \u3002\u6bcf\u4e2a\u5217\u8868\u4e0a\u4e0b\u95f4\u8ddd\u5e94\u8be5\u4e0e\u6bb5\u843d\u95f4\u8ddd\u76f8\u540c\u3002 \u4f7f\u7528\u4e0e\u9875\u9762\u8bbe\u8ba1\u5339\u914d\u7684\u5217\u8868\u9879\u7b26\u53f7\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u81ea\u5b9a\u4e49\u7684\u56fe\u50cf\u6216\u8005\u5176\u4ed6\u7684\u559c\u6b22\u7684\u7b26\u53f7\u3002","title":"\u5217\u8868"},{"location":"web/css-text/#_6","text":"\u6837\u5f0f\u5316\u4f60\u7684\u5bfc\u822a\u680f\u83dc\u5355\uff0c\u4f7f\u5b83\u62e5\u6709\u4e0e\u9875\u9762\u6574\u4f53\u76f8\u5339\u914d\u7684\u5916\u89c2\u3002 \u5b8c\u6210\u540e\uff0c\u540c\u6837\u538b\u7f29\u53d1\u9001\u5230\u90ae\u7bb1\uff0c\u622a\u81f3 2019-10-11\u3002","title":"\u5bfc\u822a\u680f\u83dc\u5355"},{"location":"web/css-text/#_7","text":"\u5982\u679c\u5b9e\u5728\u65e0\u6cd5\u5b8c\u6210\uff0c\u8bf7\u53c2\u8003 \u4f5c\u4e1a\u53c2\u8003","title":"\u4f5c\u4e1a\u53c2\u8003"},{"location":"web/homework/","text":"\u7b2c\u4e00\u6b21\u4f5c\u4e1a\u8981\u6c42 \u8bf7\u53c2\u8003 \u8bfe\u7a0b\u7b80\u4ecb \u4e00\u8282\u7684\u5185\u5bb9\u7f16\u5199\u4e00\u4e2a HTML \u5f62\u5f0f\u7684\u4e2a\u4eba\u7b80\u5386\u3002 \u7b2c\u4e8c\u6b21\u4f5c\u4e1a\u8981\u6c42 \u65b0\u95fb\u4e13\u4e1a \u5728\u4e0a\u4e00\u6b21\u8bfe\u7a0b\u7684\u57fa\u7840\u4e0a\uff0c\u5b66\u4e60 CSS \u7ae0\u8282\u5185\u5bb9\uff0c\u7f8e\u5316\u81ea\u5df1\u7684\u7b80\u5386\u3002 \u6570\u5a92\u4e13\u4e1a \u5b8c\u6210 CSS \u6587\u672c\u6837\u5f0f \u4e00\u8282\u7684\u4f5c\u4e1a\u90e8\u5206\u5185\u5bb9\u3002 \u7b2c\u4e09\u6b21\u4f5c\u4e1a\u8981\u6c42 \u5b8c\u6210 JavaScript \u7ed3\u6784\u5316\u4ee3\u7801 \u4e00\u8282\u7684\u5b9e\u9a8c\u90e8\u5206\u5185\u5bb9\u3002 \u6ce8\u610f\uff1a\u4e0d\u4f1a\u7684\u8bdd\u53ef\u4ee5\u70b9\u51fb Show solution \u6765\u53c2\u8003\u6b63\u786e\u7b54\u6848\u3002 \u7b2c\u56db\u6b21\u4f5c\u4e1a\u8981\u6c42 \u4e0b\u8f7d Bootstrap \u4e00\u8282\u7684\u5b9e\u4f8b\u4e2d\u7684\u7b80\u5386\uff0c\u4e86\u89e3\u8be5\u7b80\u5386\u7684\u7ed3\u6784\uff0c\u5728\u8fd9\u4e2a\u7b80\u5386\u7684\u57fa\u7840\u4e0a\uff0c\u8bbe\u8ba1\u81ea\u5df1\u7684\u7b80\u5386\u3002 \u8bf7\u5c06\u4e0a\u9762\u7684\u56db\u6b21\u4f5c\u4e1a\u5206\u522b\u653e\u5728\u4e0d\u540c\u6587\u4ef6\u5939\u949f\uff0c\u7136\u540e\u6574\u4f53\u538b\u7f29\u6210\u4e3a \u4f5c\u4e1a-\u5b66\u53f7-\u540d\u5b57.zip \u5e76\u53d1\u9001\u5230 anjingcuc@vip.qq.com \u3002","title":"\u4f5c\u4e1a"},{"location":"web/homework/#_1","text":"\u8bf7\u53c2\u8003 \u8bfe\u7a0b\u7b80\u4ecb \u4e00\u8282\u7684\u5185\u5bb9\u7f16\u5199\u4e00\u4e2a HTML \u5f62\u5f0f\u7684\u4e2a\u4eba\u7b80\u5386\u3002","title":"\u7b2c\u4e00\u6b21\u4f5c\u4e1a\u8981\u6c42"},{"location":"web/homework/#_2","text":"","title":"\u7b2c\u4e8c\u6b21\u4f5c\u4e1a\u8981\u6c42"},{"location":"web/homework/#_3","text":"\u5728\u4e0a\u4e00\u6b21\u8bfe\u7a0b\u7684\u57fa\u7840\u4e0a\uff0c\u5b66\u4e60 CSS \u7ae0\u8282\u5185\u5bb9\uff0c\u7f8e\u5316\u81ea\u5df1\u7684\u7b80\u5386\u3002","title":"\u65b0\u95fb\u4e13\u4e1a"},{"location":"web/homework/#_4","text":"\u5b8c\u6210 CSS \u6587\u672c\u6837\u5f0f \u4e00\u8282\u7684\u4f5c\u4e1a\u90e8\u5206\u5185\u5bb9\u3002","title":"\u6570\u5a92\u4e13\u4e1a"},{"location":"web/homework/#_5","text":"\u5b8c\u6210 JavaScript \u7ed3\u6784\u5316\u4ee3\u7801 \u4e00\u8282\u7684\u5b9e\u9a8c\u90e8\u5206\u5185\u5bb9\u3002 \u6ce8\u610f\uff1a\u4e0d\u4f1a\u7684\u8bdd\u53ef\u4ee5\u70b9\u51fb Show solution \u6765\u53c2\u8003\u6b63\u786e\u7b54\u6848\u3002","title":"\u7b2c\u4e09\u6b21\u4f5c\u4e1a\u8981\u6c42"},{"location":"web/homework/#_6","text":"\u4e0b\u8f7d Bootstrap \u4e00\u8282\u7684\u5b9e\u4f8b\u4e2d\u7684\u7b80\u5386\uff0c\u4e86\u89e3\u8be5\u7b80\u5386\u7684\u7ed3\u6784\uff0c\u5728\u8fd9\u4e2a\u7b80\u5386\u7684\u57fa\u7840\u4e0a\uff0c\u8bbe\u8ba1\u81ea\u5df1\u7684\u7b80\u5386\u3002 \u8bf7\u5c06\u4e0a\u9762\u7684\u56db\u6b21\u4f5c\u4e1a\u5206\u522b\u653e\u5728\u4e0d\u540c\u6587\u4ef6\u5939\u949f\uff0c\u7136\u540e\u6574\u4f53\u538b\u7f29\u6210\u4e3a \u4f5c\u4e1a-\u5b66\u53f7-\u540d\u5b57.zip \u5e76\u53d1\u9001\u5230 anjingcuc@vip.qq.com \u3002","title":"\u7b2c\u56db\u6b21\u4f5c\u4e1a\u8981\u6c42"},{"location":"web/html-elements/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u672c\u8282\u5185\u5bb9\u6e90\u81ea https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element \u3002","title":"HTML \u5143\u7d20\u8be6\u89e3"},{"location":"web/introduction/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u4f5c\u4e1a\u8bf7\u53d1\u5230 anjingcuc@vip.qq.com \u6587\u4ef6\u540d\u4e3a \u5b66\u53f7-\u59d3\u540d.zip \u3002","title":"\u8bfe\u7a0b\u6982\u8ff0"},{"location":"web/jQuery/","text":"","title":"jQuery"},{"location":"web/javascript-API/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u7ec3\u4e60 DOM \u64cd\u4f5c\u7ec3\u4e60 \u4fee\u6539\u9875\u9762\u5143\u7d20\u7684\u6587\u672c\u6216\u5c5e\u6027\u503c \u53f3\u952e\u53e6\u5b58 dom-example.html \u5230\u672c\u5730\u3002 \u5728 </body> \u524d\u6dfb\u52a0 <script></script> \u6807\u7b7e\u3002 \u5728 script \u5143\u7d20\u4e2d\u9009\u4e2d a \u5143\u7d20\uff1a const link = document.querySelector(\"a\"); \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 link \u8fd9\u4e2a\u53d8\u91cf\u6765\u8bbf\u95ee\u8fd9\u4e2a\u5143\u7d20\u4e86\uff0c\u5b83\u5bf9\u5e94 HTMLAnchorElement \u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u7684\u7236\u5bf9\u8c61 HTMLElement \u548c Node \u6765\u5bf9\u5b83\u8fdb\u884c\u64cd\u4f5c\uff0c\u9996\u5148\u901a\u8fc7 Node.textContent \u5c5e\u6027\u6765\u6539\u53d8\u5b83\u663e\u793a\u7684\u5185\u5bb9\uff1a link.textContent = '\u6559\u5b66 Wiki'; \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u5176 href \u5c5e\u6027\u6765\u6539\u53d8\u5b83\u6307\u5411\u7684\u94fe\u63a5\uff1a link.href = 'https://anjingcuc.github.io/courses-wiki/web/'; \u7ecf\u8fc7\u4ee5\u4e0a\u64cd\u4f5c\uff0c\u73b0\u5728\u8fd9\u4e2a\u94fe\u63a5\u6307\u5411\u4e86\u6211\u4eec\u7684\u6559\u5b66 wiki \u3002\u6211\u4eec\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u5e76\u5728\u4e00\u4e2a\u53d8\u91cf\u6216\u5e38\u91cf\u4e2d\u3002 Document.querySelector() \u662f\u63a8\u8350\u7684\u4e3b\u6d41\u65b9\u6cd5\uff0c\u5b83\u5141\u8bb8\u4f60\u4f7f\u7528 CSS \u9009\u62e9\u5668\u9009\u62e9\u5143\u7d20\uff0c\u4f7f\u7528\u5f88\u65b9\u4fbf\u3002\u4e0a\u9762\u7684 querySelector() \u8c03\u7528\u4f1a\u5339\u914d\u5b83\u5728\u6587\u6863\u4e2d\u9047\u5230\u7684 \u7b2c\u4e00\u4e2a <a> \u5143\u7d20\u3002\u5982\u679c\u60f3\u5bf9 \u591a\u4e2a\u5143\u7d20 \u8fdb\u884c\u5339\u914d\u548c\u64cd\u4f5c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Document.querySelectorAll() \uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5339\u914d\u6587\u6863\u4e2d\u6bcf\u4e2a\u5339\u914d\u9009\u62e9\u5668\u7684\u5143\u7d20\uff0c\u5e76\u628a\u5b83\u4eec\u7684\u5f15\u7528\u5b58\u50a8\u5728\u4e00\u4e2a array \u4e2d\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u4ee5\u4e0b\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\uff1a Document.getElementById() \uff0c\u9009\u62e9\u4e00\u4e2a id \u5c5e\u6027\u503c\u5df2\u77e5\u7684\u5143\u7d20\uff0c\u4f8b\u5982 <p id=\"myId\">My paragraph</p> \u3002 id \u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u5373 var elementRef = document.getElementById('myId') \u3002 Document.getElementsByTagName() \uff0c\u8fd4\u56de\u9875\u9762\u4e2d\u5305\u542b\u7684\u6240\u6709\u5df2\u77e5\u7c7b\u578b\u5143\u7d20\u7684\u6570\u7ec4\u3002\u5982 <p> , <a> \u3002\u5143\u7d20\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u5373 var elementRefArray = document.getElementsByTagName('p') \uff0c\u7b49\u4ef7\u4e8e Document.querySelectorAll() \u3002 \u521b\u5efa\u5e76\u6dfb\u52a0\u65b0\u8282\u70b9 \u9664\u4e86\u5bf9\u73b0\u6709\u5143\u7d20\u4fee\u6539\u610f\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u65b0\u7684\u5143\u7d20\uff0c\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u5728\u4e0a\u9762\u7684\u5185\u5bb9\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e00\u6bb5\u8bf4\u660e\uff0c\u4ecb\u7ecd\u4e00\u4e0b\u6211\u4eec\u7684\u6559\u5b66 Wiki \u7684\u5185\u5bb9\u3002 \u5728\u5df2\u6709 script \u5143\u7d20\u4e2d\u6dfb\u52a0\u4e0b\u5217\u4ee3\u7801\uff0c\u83b7\u53d6\u5230 body \u5143\u7d20\u7684\u4fdd\u5b58\u8d77\u6765\uff1a const body = document.querySelector('body'); \u4f7f\u7528 API Document.createElement() \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6bb5\u843d\uff0c\u7528\u4e0e\u4e4b\u524d\u76f8\u540c\u7684\u65b9\u6cd5\u8d4b\u4e88\u76f8\u540c\u7684\u6587\u672c\uff1a const para = document.createElement('p'); para.textContent = '\u6559\u5b66 Wiki\u4e2d\u4fdd\u5b58\u4e86\u8bfe\u7a0b\u76f8\u5173\u8d44\u6599\uff0c\u65b9\u4fbf\u540c\u5b66\u4eec\u6e29\u6545\u77e5\u65b0\u3002'; \u867d\u7136\u5df2\u7ecf\u521b\u5efa\u4e86\u8fd9\u4e2a\u5143\u7d20\uff0c\u4f46\u662f\u5b83\u8fd8\u4e0d\u77e5\u9053\u81ea\u5df1\u5e94\u8be5\u653e\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u7528 Node.appendChild() \u65b9\u6cd5\u5728 body \u7684\u6700\u540e\u8ffd\u52a0\u65b0\u7684\u6bb5\u843d\uff1a body.appendChild(para); \u8fd8\u53ef\u4ee5\u5728\u6bb5\u843d\u5143\u7d20\u540e\u9762\u8865\u5145\u65b0\u7684\u6587\u672c\uff0c\u4f7f\u7528 Document.createTextNode() \u521b\u5efa\u4e00\u4e2a\u6587\u672c\u8282\u70b9\uff1a const text = document.createTextNode('\u8bfe\u4ef6\u53ef\u4ee5\u5728\u7ebf\u76f4\u63a5\u67e5\u770b\uff0c\u65e0\u9700\u4e0b\u8f7d\uff0c\u6b22\u8fce\u5927\u5bb6\u8bbf\u95ee\u3002'); \u540c\u6837\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e2a\u65b0\u7684\u6587\u672c\u8282\u70b9\u8ffd\u52a0\u5230\u6211\u4eec\u7684\u521a\u624d\u521b\u5efa\u7684\u6bb5\u843d\u540e\u9762\uff1a para.appendChild(text); \u5220\u9664\u5143\u7d20 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 Node.removeChild() \u6765\u5220\u9664\u67d0\u4e2a\u5143\u7d20\uff0c\u6bd4\u5982\u4f60\u89c9\u5f97\u4e4b\u524d\u8865\u5145\u7684\u6587\u672c\u592a\u7f57\u55e6\u4e86\u5c31\u53ef\u4ee5\uff1a 1 para . removeChild ( text ); \u64cd\u4f5c\u6837\u5f0f \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7 JavaScript \u6765\u52a8\u6001\u7684\u6539\u53d8\u9875\u9762\u5143\u7d20\u7684\u6837\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 HTMLElement.style \u5c5e\u6027\u6765\u6539\u53d8\u5143\u7d20\u7684\u6837\u5f0f\uff0c\u8fd9\u4e2a\u5c5e\u6027\u7684\u503c\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a CSSStyleDeclaration \u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5305\u542b\u591a\u4e2a\u5c5e\u6027\u6765\u8868\u793a\u5143\u7d20\u7684\u6837\u5f0f\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9 CSSStyleDeclaration \u5bf9\u8c61\u7684\u4e0d\u540c\u5c5e\u6027\u8fdb\u884c\u8d4b\u503c\u6765\u5b9e\u73b0\u6837\u5f0f\u7684\u4fee\u6539\u3002 para.style.color = 'white'; para.style.backgroundColor = 'black'; para.style.padding = '10px'; para.style.width = '250px'; para.style.textAlign = 'center'; \u5237\u65b0\u9875\u9762\uff0c\u53ef\u4ee5\u770b\u5230 p \u5143\u7d20\u88ab\u52a0\u5165\u4e86\u76f8\u5e94\u7684\u5185\u8054\u6837\u5f0f\u3002 \u8fd8\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u5143\u7d20\u7684 class \u5c5e\u6027\u503c\u6765\u4fee\u6539\u5143\u7d20\u6837\u5f0f\uff0c\u6bd4\u5982\uff1a \u5220\u6389\u4e0a\u9762\u4fee\u6539\u6837\u5f0f\u7684\u4e94\u884c\u4ee3\u7801\uff0c\u5e76\u5728\u793a\u4f8b HTML \u6587\u4ef6 head \u5143\u7d20\u4e2d\u52a0\u5165\uff1a <style> .highlight { color: white; background-color: black; padding: 10px; width: 250px; text-align: center; } </style> \u7136\u540e\u6211\u4eec\u4f7f\u7528\u4fee\u6539 HTML \u5143\u7d20\u5c5e\u6027\u7684\u64cd\u4f5c\u7684\u5e38\u7528\u65b9\u6cd5 Element.setAttribute() \uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5c5e\u6027\u7684\u540d\u5b57\u6bd4\u5982 class \uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4f60\u8981\u4e3a\u5b83\u8bbe\u7f6e\u7684\u503c\u6bd4\u5982 highlight \u3002\u4ee3\u7801\u5982\u4e0b\uff1a para.setAttribute('class', 'highlight'); \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u66f4\u52a0\u6b63\u7edf\uff0c\u6ca1\u6709 CSS \u548c JavaScript \u7684\u6df7\u5408\uff0c\u6ca1\u6709\u5185\u8054\u6837\u5f0f\u3002 \u52a8\u6001\u8d2d\u7269\u5355 \u8fd9\u91cc\u6709\u4e2a\u5c0f\u5c0f\u7684\u6311\u6218\uff0c\u53f3\u952e\u53e6\u5b58 shopping-cart.html \uff0c\u8bf7\u4f60\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u8d2d\u7269\u8f66\u7684\u4f8b\u5b50\uff0c\u4f7f\u7528\u8868\u5355\u7684\u8f93\u5165\u6846\u548c\u6309\u94ae\u52a8\u6001\u7684\u5411\u8d2d\u7269\u5355\u4e2d\u6dfb\u52a0\u8d2d\u7269\u9879\u3002\u5728\u8f93\u5165\u4e2d\u6dfb\u52a0\u9879\uff0c\u7136\u540e\u6309\u4e0b\u6dfb\u52a0\u6309\u94ae\uff1a \u8d2d\u7269\u9879\u5e94\u8be5\u51fa\u73b0\u5728\u6e05\u5355\u4e2d\u3002 \u6bcf\u4e2a\u7269\u54c1\u90fd\u5173\u8054\u4e00\u4e2a\u5220\u9664\u6309\u94ae\uff0c\u53ef\u4ee5\u4ece\u6e05\u5355\u4e2d\u5220\u9664\u8be5\u7269\u54c1\u3002 \u8f93\u5165\u6846\u5e94\u8be5\u662f\u7a7a\u767d\u7684\uff0c\u7b49\u5f85\u4f60\u8f93\u5165\u53e6\u4e00\u4e2a\u7269\u54c1\u3002 \u770b\u8d77\u6765\u8fd9\u4e2a\u8d2d\u7269\u8f66\u5927\u6982\u957f\u8fd9\u6837\uff1a \u8981\u5b8c\u6210\u5b9e\u9a8c\uff0c\u8981\u6309\u7167\u4e0b\u9762\u7684\u6b65\u9aa4\uff0c\u786e\u4fdd\u8d2d\u7269\u5355\u7684\u884c\u4e3a\u5982\u4e0a\u6240\u8ff0\u3002 \u9996\u5148\uff0c\u4e0b\u8f7d shopping-list.html \u6587\u4ef6\uff0c\u5e76\u5b58\u5165\u672c\u5730\u3002\u4f60\u4f1a\u770b\u5230\u5b83\u6709\u4e00\u4e9b\u6781\u5c0f\u7684 CSS\uff0c\u4e00\u4e2a\u5e26\u6709 label\u3001input \u548c button \u7684 list \u548c\u4e00\u4e2a\u7a7a\u7684 list \u4ee5\u53ca script \u5143\u7d20\u3002\u8981\u6dfb\u52a0\u7684\u6240\u6709\u7a0b\u5e8f\u90fd\u5728 script \u91cc\u9762\u3002 \u521b\u5efa\u4e09\u4e2a\u53d8\u91cf\u6765\u4fdd\u5b58 <ul> \u3001 <input> \u548c <button> \u5143\u7d20\u7684\u5f15\u7528\u3002 \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u54cd\u5e94\u70b9\u51fb\u6309\u94ae\u3002 \u5728\u51fd\u6570\u4f53\u5185\uff0c\u5f00\u59cb\u8981\u5728\u4e00\u4e2a\u53d8\u91cf\u4e2d\u5b58\u50a8\u8f93\u5165\u6846\u7684\u5f53\u524d\u503c\u3002 \u7136\u540e\uff0c\u4e3a\u8f93\u5165\u6846\u5143\u7d20\u8bbe\u7f6e\u7a7a\u5b57\u7b26 - ''\u4f7f\u5176\u4e3a\u7a7a \u521b\u5efa\u4e09\u4e2a\u65b0\u5143\u7d20 \u2014 \u4e00\u4e2a list \u9879 <li> \uff0c <span> \u548c <button> \uff0c\u5e76\u628a\u5b83\u4eec\u5b58\u5165\u53d8\u91cf\u4e4b\u4e2d\u3002 \u628a span \u548c button \u4f5c\u4e3a list \u9879\u7684\u5b50\u8282\u70b9\u3002 \u628a\u4e4b\u524d\u4fdd\u5b58\u7684\u8f93\u5165\u6846\u5143\u7d20\u7684\u503c\u8bbe\u7f6e\u4e3a span \u7684\u6587\u672c\u5185\u5bb9\uff0c\u6309\u94ae\u7684\u6587\u672c\u5185\u5bb9\u8bbe\u7f6e\u4e3a'Delete' \u628a list \u9879\u8bbe\u7f6e\u4e3a list \u7684\u5b50\u8282\u70b9\u3002 \u4e3a\u5220\u9664\u6309\u94ae\u7ed1\u5b9a\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002\u5f53\u70b9\u51fb\u6309\u94ae\u65f6\uff0c\u5220\u9664\u5b83\u6240\u5728\u7684\u6574\u4e2a list \u9879\u3002 \u6700\u540e\uff0c\u4f7f\u7528 focus()\u65b9\u6cd5\u805a\u7126\u8f93\u5165\u6846\u51c6\u5907\u8f93\u5165\u4e0b\u4e00\u4e2a\u8d2d\u7269\u9879\u3002 \u5982\u679c\u5361\u4f4f\u4e86\u5b9e\u5728\u505a\u4e0d\u51fa\u6765\uff0c\u8bf7\u53c2\u8003 shopping-cart-finished.html \u3002","title":"JavaScript API"},{"location":"web/javascript-API/#_1","text":"","title":"\u7ec3\u4e60"},{"location":"web/javascript-API/#dom","text":"","title":"DOM \u64cd\u4f5c\u7ec3\u4e60"},{"location":"web/javascript-API/#_2","text":"\u53f3\u952e\u53e6\u5b58 dom-example.html \u5230\u672c\u5730\u3002 \u5728 </body> \u524d\u6dfb\u52a0 <script></script> \u6807\u7b7e\u3002 \u5728 script \u5143\u7d20\u4e2d\u9009\u4e2d a \u5143\u7d20\uff1a const link = document.querySelector(\"a\"); \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 link \u8fd9\u4e2a\u53d8\u91cf\u6765\u8bbf\u95ee\u8fd9\u4e2a\u5143\u7d20\u4e86\uff0c\u5b83\u5bf9\u5e94 HTMLAnchorElement \u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u7684\u7236\u5bf9\u8c61 HTMLElement \u548c Node \u6765\u5bf9\u5b83\u8fdb\u884c\u64cd\u4f5c\uff0c\u9996\u5148\u901a\u8fc7 Node.textContent \u5c5e\u6027\u6765\u6539\u53d8\u5b83\u663e\u793a\u7684\u5185\u5bb9\uff1a link.textContent = '\u6559\u5b66 Wiki'; \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u5176 href \u5c5e\u6027\u6765\u6539\u53d8\u5b83\u6307\u5411\u7684\u94fe\u63a5\uff1a link.href = 'https://anjingcuc.github.io/courses-wiki/web/'; \u7ecf\u8fc7\u4ee5\u4e0a\u64cd\u4f5c\uff0c\u73b0\u5728\u8fd9\u4e2a\u94fe\u63a5\u6307\u5411\u4e86\u6211\u4eec\u7684\u6559\u5b66 wiki \u3002\u6211\u4eec\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u5e76\u5728\u4e00\u4e2a\u53d8\u91cf\u6216\u5e38\u91cf\u4e2d\u3002 Document.querySelector() \u662f\u63a8\u8350\u7684\u4e3b\u6d41\u65b9\u6cd5\uff0c\u5b83\u5141\u8bb8\u4f60\u4f7f\u7528 CSS \u9009\u62e9\u5668\u9009\u62e9\u5143\u7d20\uff0c\u4f7f\u7528\u5f88\u65b9\u4fbf\u3002\u4e0a\u9762\u7684 querySelector() \u8c03\u7528\u4f1a\u5339\u914d\u5b83\u5728\u6587\u6863\u4e2d\u9047\u5230\u7684 \u7b2c\u4e00\u4e2a <a> \u5143\u7d20\u3002\u5982\u679c\u60f3\u5bf9 \u591a\u4e2a\u5143\u7d20 \u8fdb\u884c\u5339\u914d\u548c\u64cd\u4f5c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Document.querySelectorAll() \uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5339\u914d\u6587\u6863\u4e2d\u6bcf\u4e2a\u5339\u914d\u9009\u62e9\u5668\u7684\u5143\u7d20\uff0c\u5e76\u628a\u5b83\u4eec\u7684\u5f15\u7528\u5b58\u50a8\u5728\u4e00\u4e2a array \u4e2d\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u4ee5\u4e0b\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\uff1a Document.getElementById() \uff0c\u9009\u62e9\u4e00\u4e2a id \u5c5e\u6027\u503c\u5df2\u77e5\u7684\u5143\u7d20\uff0c\u4f8b\u5982 <p id=\"myId\">My paragraph</p> \u3002 id \u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u5373 var elementRef = document.getElementById('myId') \u3002 Document.getElementsByTagName() \uff0c\u8fd4\u56de\u9875\u9762\u4e2d\u5305\u542b\u7684\u6240\u6709\u5df2\u77e5\u7c7b\u578b\u5143\u7d20\u7684\u6570\u7ec4\u3002\u5982 <p> , <a> \u3002\u5143\u7d20\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u5373 var elementRefArray = document.getElementsByTagName('p') \uff0c\u7b49\u4ef7\u4e8e Document.querySelectorAll() \u3002","title":"\u4fee\u6539\u9875\u9762\u5143\u7d20\u7684\u6587\u672c\u6216\u5c5e\u6027\u503c"},{"location":"web/javascript-API/#_3","text":"\u9664\u4e86\u5bf9\u73b0\u6709\u5143\u7d20\u4fee\u6539\u610f\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u65b0\u7684\u5143\u7d20\uff0c\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u5728\u4e0a\u9762\u7684\u5185\u5bb9\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e00\u6bb5\u8bf4\u660e\uff0c\u4ecb\u7ecd\u4e00\u4e0b\u6211\u4eec\u7684\u6559\u5b66 Wiki \u7684\u5185\u5bb9\u3002 \u5728\u5df2\u6709 script \u5143\u7d20\u4e2d\u6dfb\u52a0\u4e0b\u5217\u4ee3\u7801\uff0c\u83b7\u53d6\u5230 body \u5143\u7d20\u7684\u4fdd\u5b58\u8d77\u6765\uff1a const body = document.querySelector('body'); \u4f7f\u7528 API Document.createElement() \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6bb5\u843d\uff0c\u7528\u4e0e\u4e4b\u524d\u76f8\u540c\u7684\u65b9\u6cd5\u8d4b\u4e88\u76f8\u540c\u7684\u6587\u672c\uff1a const para = document.createElement('p'); para.textContent = '\u6559\u5b66 Wiki\u4e2d\u4fdd\u5b58\u4e86\u8bfe\u7a0b\u76f8\u5173\u8d44\u6599\uff0c\u65b9\u4fbf\u540c\u5b66\u4eec\u6e29\u6545\u77e5\u65b0\u3002'; \u867d\u7136\u5df2\u7ecf\u521b\u5efa\u4e86\u8fd9\u4e2a\u5143\u7d20\uff0c\u4f46\u662f\u5b83\u8fd8\u4e0d\u77e5\u9053\u81ea\u5df1\u5e94\u8be5\u653e\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u7528 Node.appendChild() \u65b9\u6cd5\u5728 body \u7684\u6700\u540e\u8ffd\u52a0\u65b0\u7684\u6bb5\u843d\uff1a body.appendChild(para); \u8fd8\u53ef\u4ee5\u5728\u6bb5\u843d\u5143\u7d20\u540e\u9762\u8865\u5145\u65b0\u7684\u6587\u672c\uff0c\u4f7f\u7528 Document.createTextNode() \u521b\u5efa\u4e00\u4e2a\u6587\u672c\u8282\u70b9\uff1a const text = document.createTextNode('\u8bfe\u4ef6\u53ef\u4ee5\u5728\u7ebf\u76f4\u63a5\u67e5\u770b\uff0c\u65e0\u9700\u4e0b\u8f7d\uff0c\u6b22\u8fce\u5927\u5bb6\u8bbf\u95ee\u3002'); \u540c\u6837\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e2a\u65b0\u7684\u6587\u672c\u8282\u70b9\u8ffd\u52a0\u5230\u6211\u4eec\u7684\u521a\u624d\u521b\u5efa\u7684\u6bb5\u843d\u540e\u9762\uff1a para.appendChild(text);","title":"\u521b\u5efa\u5e76\u6dfb\u52a0\u65b0\u8282\u70b9"},{"location":"web/javascript-API/#_4","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 Node.removeChild() \u6765\u5220\u9664\u67d0\u4e2a\u5143\u7d20\uff0c\u6bd4\u5982\u4f60\u89c9\u5f97\u4e4b\u524d\u8865\u5145\u7684\u6587\u672c\u592a\u7f57\u55e6\u4e86\u5c31\u53ef\u4ee5\uff1a 1 para . removeChild ( text );","title":"\u5220\u9664\u5143\u7d20"},{"location":"web/javascript-API/#_5","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7 JavaScript \u6765\u52a8\u6001\u7684\u6539\u53d8\u9875\u9762\u5143\u7d20\u7684\u6837\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 HTMLElement.style \u5c5e\u6027\u6765\u6539\u53d8\u5143\u7d20\u7684\u6837\u5f0f\uff0c\u8fd9\u4e2a\u5c5e\u6027\u7684\u503c\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a CSSStyleDeclaration \u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5305\u542b\u591a\u4e2a\u5c5e\u6027\u6765\u8868\u793a\u5143\u7d20\u7684\u6837\u5f0f\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9 CSSStyleDeclaration \u5bf9\u8c61\u7684\u4e0d\u540c\u5c5e\u6027\u8fdb\u884c\u8d4b\u503c\u6765\u5b9e\u73b0\u6837\u5f0f\u7684\u4fee\u6539\u3002 para.style.color = 'white'; para.style.backgroundColor = 'black'; para.style.padding = '10px'; para.style.width = '250px'; para.style.textAlign = 'center'; \u5237\u65b0\u9875\u9762\uff0c\u53ef\u4ee5\u770b\u5230 p \u5143\u7d20\u88ab\u52a0\u5165\u4e86\u76f8\u5e94\u7684\u5185\u8054\u6837\u5f0f\u3002 \u8fd8\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u5143\u7d20\u7684 class \u5c5e\u6027\u503c\u6765\u4fee\u6539\u5143\u7d20\u6837\u5f0f\uff0c\u6bd4\u5982\uff1a \u5220\u6389\u4e0a\u9762\u4fee\u6539\u6837\u5f0f\u7684\u4e94\u884c\u4ee3\u7801\uff0c\u5e76\u5728\u793a\u4f8b HTML \u6587\u4ef6 head \u5143\u7d20\u4e2d\u52a0\u5165\uff1a <style> .highlight { color: white; background-color: black; padding: 10px; width: 250px; text-align: center; } </style> \u7136\u540e\u6211\u4eec\u4f7f\u7528\u4fee\u6539 HTML \u5143\u7d20\u5c5e\u6027\u7684\u64cd\u4f5c\u7684\u5e38\u7528\u65b9\u6cd5 Element.setAttribute() \uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5c5e\u6027\u7684\u540d\u5b57\u6bd4\u5982 class \uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4f60\u8981\u4e3a\u5b83\u8bbe\u7f6e\u7684\u503c\u6bd4\u5982 highlight \u3002\u4ee3\u7801\u5982\u4e0b\uff1a para.setAttribute('class', 'highlight'); \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u66f4\u52a0\u6b63\u7edf\uff0c\u6ca1\u6709 CSS \u548c JavaScript \u7684\u6df7\u5408\uff0c\u6ca1\u6709\u5185\u8054\u6837\u5f0f\u3002","title":"\u64cd\u4f5c\u6837\u5f0f"},{"location":"web/javascript-API/#_6","text":"\u8fd9\u91cc\u6709\u4e2a\u5c0f\u5c0f\u7684\u6311\u6218\uff0c\u53f3\u952e\u53e6\u5b58 shopping-cart.html \uff0c\u8bf7\u4f60\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u8d2d\u7269\u8f66\u7684\u4f8b\u5b50\uff0c\u4f7f\u7528\u8868\u5355\u7684\u8f93\u5165\u6846\u548c\u6309\u94ae\u52a8\u6001\u7684\u5411\u8d2d\u7269\u5355\u4e2d\u6dfb\u52a0\u8d2d\u7269\u9879\u3002\u5728\u8f93\u5165\u4e2d\u6dfb\u52a0\u9879\uff0c\u7136\u540e\u6309\u4e0b\u6dfb\u52a0\u6309\u94ae\uff1a \u8d2d\u7269\u9879\u5e94\u8be5\u51fa\u73b0\u5728\u6e05\u5355\u4e2d\u3002 \u6bcf\u4e2a\u7269\u54c1\u90fd\u5173\u8054\u4e00\u4e2a\u5220\u9664\u6309\u94ae\uff0c\u53ef\u4ee5\u4ece\u6e05\u5355\u4e2d\u5220\u9664\u8be5\u7269\u54c1\u3002 \u8f93\u5165\u6846\u5e94\u8be5\u662f\u7a7a\u767d\u7684\uff0c\u7b49\u5f85\u4f60\u8f93\u5165\u53e6\u4e00\u4e2a\u7269\u54c1\u3002 \u770b\u8d77\u6765\u8fd9\u4e2a\u8d2d\u7269\u8f66\u5927\u6982\u957f\u8fd9\u6837\uff1a \u8981\u5b8c\u6210\u5b9e\u9a8c\uff0c\u8981\u6309\u7167\u4e0b\u9762\u7684\u6b65\u9aa4\uff0c\u786e\u4fdd\u8d2d\u7269\u5355\u7684\u884c\u4e3a\u5982\u4e0a\u6240\u8ff0\u3002 \u9996\u5148\uff0c\u4e0b\u8f7d shopping-list.html \u6587\u4ef6\uff0c\u5e76\u5b58\u5165\u672c\u5730\u3002\u4f60\u4f1a\u770b\u5230\u5b83\u6709\u4e00\u4e9b\u6781\u5c0f\u7684 CSS\uff0c\u4e00\u4e2a\u5e26\u6709 label\u3001input \u548c button \u7684 list \u548c\u4e00\u4e2a\u7a7a\u7684 list \u4ee5\u53ca script \u5143\u7d20\u3002\u8981\u6dfb\u52a0\u7684\u6240\u6709\u7a0b\u5e8f\u90fd\u5728 script \u91cc\u9762\u3002 \u521b\u5efa\u4e09\u4e2a\u53d8\u91cf\u6765\u4fdd\u5b58 <ul> \u3001 <input> \u548c <button> \u5143\u7d20\u7684\u5f15\u7528\u3002 \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u54cd\u5e94\u70b9\u51fb\u6309\u94ae\u3002 \u5728\u51fd\u6570\u4f53\u5185\uff0c\u5f00\u59cb\u8981\u5728\u4e00\u4e2a\u53d8\u91cf\u4e2d\u5b58\u50a8\u8f93\u5165\u6846\u7684\u5f53\u524d\u503c\u3002 \u7136\u540e\uff0c\u4e3a\u8f93\u5165\u6846\u5143\u7d20\u8bbe\u7f6e\u7a7a\u5b57\u7b26 - ''\u4f7f\u5176\u4e3a\u7a7a \u521b\u5efa\u4e09\u4e2a\u65b0\u5143\u7d20 \u2014 \u4e00\u4e2a list \u9879 <li> \uff0c <span> \u548c <button> \uff0c\u5e76\u628a\u5b83\u4eec\u5b58\u5165\u53d8\u91cf\u4e4b\u4e2d\u3002 \u628a span \u548c button \u4f5c\u4e3a list \u9879\u7684\u5b50\u8282\u70b9\u3002 \u628a\u4e4b\u524d\u4fdd\u5b58\u7684\u8f93\u5165\u6846\u5143\u7d20\u7684\u503c\u8bbe\u7f6e\u4e3a span \u7684\u6587\u672c\u5185\u5bb9\uff0c\u6309\u94ae\u7684\u6587\u672c\u5185\u5bb9\u8bbe\u7f6e\u4e3a'Delete' \u628a list \u9879\u8bbe\u7f6e\u4e3a list \u7684\u5b50\u8282\u70b9\u3002 \u4e3a\u5220\u9664\u6309\u94ae\u7ed1\u5b9a\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002\u5f53\u70b9\u51fb\u6309\u94ae\u65f6\uff0c\u5220\u9664\u5b83\u6240\u5728\u7684\u6574\u4e2a list \u9879\u3002 \u6700\u540e\uff0c\u4f7f\u7528 focus()\u65b9\u6cd5\u805a\u7126\u8f93\u5165\u6846\u51c6\u5907\u8f93\u5165\u4e0b\u4e00\u4e2a\u8d2d\u7269\u9879\u3002 \u5982\u679c\u5361\u4f4f\u4e86\u5b9e\u5728\u505a\u4e0d\u51fa\u6765\uff0c\u8bf7\u53c2\u8003 shopping-cart-finished.html \u3002","title":"\u52a8\u6001\u8d2d\u7269\u5355"},{"location":"web/javascript-basic/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"JavaScript \u57fa\u7840"},{"location":"web/javascript-blocks/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u5206\u652f\u5b9e\u9a8c if...else \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u8bf7\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u65e5\u5386\u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\uff1a \u4e00\u4e2a <select> \u5143\u7d20\uff0c\u5141\u8bb8\u7528\u6237\u5728\u4e0d\u540c\u6708\u4efd\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002 onchange \u68c0\u6d4b <select> \u83dc\u5355\u4e2d\u9009\u62e9\u7684\u503c\u4f55\u65f6\u66f4\u6539\u7684\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002 \u4e00\u4e2a\u51fd\u6570\u53eb\u505a createCalendar() \u7ed8\u5236\u65e5\u5386\u5e76\u5728 <h1> \u5143\u7d20\u4e2d\u663e\u793a\u6b63\u786e\u7684\u6708\u4efd\u3002 \u5728 onchange \u5904\u7406\u51fd\u6570\u4e2d\u5199\u4e00\u4e2a\u6761\u4ef6\u8bed\u53e5\uff0c\u5c31\u5728 // ADD CONDITIONAL HERE \u7684\u4e0b\u9762\u3002\u529f\u80fd\u5305\u62ec\uff1a \u67e5\u770b\u6240\u9009\u6708\u4efd\uff08\u5b58\u50a8\u5728 choice \u53d8\u91cf\u4e2d\uff0c\u8fd9\u5c06\u662f <select> \u503c\u66f4\u6539\u540e\u7684\u5143\u7d20\u503c\uff0c\u4f8b\u5982 \"1 \u6708\"\uff09\u3002 \u8bbe\u7f6e\u4e00\u4e2a\u88ab\u8c03\u7528 days \u4e3a\u7b49\u4e8e\u6240\u9009\u6708\u4efd\u5929\u6570\u7684\u53d8\u91cf\uff0c\u6765\u5b9e\u73b0\u67e5\u770b\u4e00\u5e74\u4e2d\u6bcf\u4e2a\u6708\u7684\u5929\u6570\uff0c\u53ef\u4ee5\u5ffd\u7565\u95f0\u5e74\u3002 \u63d0\u793a\uff1a \u5efa\u8bae\u4f7f\u7528\u903b\u8f91\u6216 || \u5c06\u591a\u4e2a\u6708\u7ec4\u5408\u6210\u4e00\u4e2a\u5355\u4e00\u6761\u4ef6\uff1b\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5171\u4eab\u76f8\u540c\u7684\u5929\u6570\u3002 \u8003\u8651\u6700\u5e38\u7528\u7684\u5929\u6570\uff0c\u5e76\u5c06\u5176\u7528\u4f5c\u9ed8\u8ba4\u503c\u3002 \u53ef\u4ee5\u968f\u65f6\u4f7f\u7528 \"Reset\" \u6309\u94ae\u91cd\u7f6e\u8be5\u793a\u4f8b\u3002 \u5982\u679c\u4f60\u771f\u7684\u5361\u4f4f\u4e86\uff0c\u70b9 \"Show solution\" \u6765\u67e5\u770b\u89e3\u51b3\u65b9\u6848\u3002 See the Pen Calender for if..else by anjing ( @anjingcuc ) on CodePen . switch \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u4f60\u9700\u8981\u7ec3\u4e60\u4f7f\u7528 switch \u8bed\u53e5\uff0c\u8fd9\u5c06\u5141\u8bb8\u6211\u4eec\u5bf9\u7b80\u5355\u7684\u7f51\u7ad9\u5e94\u7528\u66f4\u591a\u7684\u9009\u62e9\u3002\u770b\u770b <select> - \u4e00\u5171\u6709\u4e94\u4e2a\u4e3b\u9898\u9009\u9879\u3002\u4f60\u9700\u8981\u5728 // ADD SWITCH STATEMENT \u6ce8\u91ca\u4e0b\u9762\u6dfb\u52a0\u4e00\u4e2a switch \u8bed\u53e5\uff1a \u5b83\u5e94\u8be5\u63a5\u53d7 choice \u53d8\u91cf\u4f5c\u4e3a\u5176\u8f93\u5165\u8868\u8fbe\u5f0f\u3002 \u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\uff0c\u9009\u62e9\u5e94\u8be5\u7b49\u4e8e\u53ef\u4ee5\u9009\u62e9\u7684\u53ef\u80fd\u503c\u4e4b\u4e00\uff0c\u5373\u767d\u8272\uff0c\u9ed1\u8272\uff0c\u7d2b\u8272\uff0c\u9ec4\u8272\u6216\u8ff7\u5e7b\u8272\u3002 \u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\uff0c\u5e94\u8fd0\u884c update()\u51fd\u6570\uff0c\u5e76\u4f20\u9012\u4e24\u4e2a\u989c\u8272\u503c\uff0c\u7b2c\u4e00\u4e2a\u989c\u8272\u503c\u4e3a\u80cc\u666f\u989c\u8272\uff0c\u7b2c\u4e8c\u4e2a\u989c\u8272\u503c\u4e3a\u6587\u672c\u989c\u8272\u3002\u8bf7\u8bb0\u4f4f\uff0c\u989c\u8272\u503c\u662f\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u9700\u8981\u7528\u5f15\u53f7\u62ec\u8d77\u6765\u3002 \u53ef\u4ee5\u968f\u65f6\u4f7f\u7528 \"Reset\" \u6309\u94ae\u91cd\u7f6e\u8be5\u793a\u4f8b\u3002 \u5982\u679c\u4f60\u771f\u7684\u5361\u4f4f\u4e86\uff0c\u70b9 \"Show solution\" \u6765\u67e5\u770b\u89e3\u51b3\u65b9\u6848\u3002 See the Pen More Color for switch by anjing ( @anjingcuc ) on CodePen . while \u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u4f60\u9700\u8981\u6253\u5370\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u542f\u52a8\u5012\u8ba1\u65f6\u5230\u8f93\u51fa\u6846\uff0c\u4ece 10 \u5230\u5173\u95ed\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5e0c\u671b\u4f60\uff1a \u4ece 10 \u4e0b\u964d\u5230 0\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e86\u521d\u59cb\u4ee3\u7801 - var i = 10 ; \u5bf9\u4e8e\u6bcf\u6b21\u8fed\u4ee3\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6bb5\u843d\u5e76\u5c06\u5176\u9644\u52a0\u5230\u8f93\u51fa <div> \uff0c\u4f7f\u7528 var output = document.querySelector('.output'); \u9009\u4e2d\u8be5 <div> \uff0c\u5e76\u5728\u793a\u4f8b\u4ee3\u7801\u4e2d\u5df2\u7ecf\u5199\u597d\u4e86\u521b\u5efa\u5e76\u9644\u52a0\u6bb5\u843d\u7684\u90e8\u5206\u4ee3\u7801\uff1a var para = document.createElement('p'); \u2014 \u65b0\u5efa\u4e00\u4e2a\u6bb5\u843d\u3002 output.appendChild(para); \u2014 \u5c06\u6bb5\u843d\u9644\u52a0\u5230\u8f93\u51fa <div> \u4e2d\u3002 para.textContent = \u2014 = \u53f7\u540e\u9762\u5e94\u8be5\u5199\u4e0a\u4f60\u9700\u8981\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u6216\u5b57\u7b26\u4e32\u53d8\u91cf\u5e76\u4ee5\u5206\u53f7\u7ed3\u5c3e\u3002 \u4e0d\u540c\u7684\u8fed\u4ee3\u6570\u5b57\u9700\u8981\u5c06\u4e0d\u540c\u7684\u6587\u672c\u653e\u5728\u8be5\u8fed\u4ee3\u7684\u6bb5\u843d\u4e2d\uff08\u4f60\u9700\u8981\u4e00\u4e2a\u6761\u4ef6\u8bed\u53e5\u548c\u591a\u4e2a para.textContent = lines \uff09\uff1a \u5982\u679c\u6570\u5b57\u662f 10\uff0c\u6bb5\u843d\u5185\u5bb9\u663e\u793a \"Countdown 10\"\u3002 \u5982\u679c\u6570\u5b57\u4e3a 0\uff0c\u6bb5\u843d\u5185\u5bb9\u663e\u793a \"Blast off!\"\u3002 \u5bf9\u4e8e\u4efb\u4f55\u5176\u4ed6\u6570\u5b57\uff0c\u6bb5\u843d\u5185\u5bb9\u53ea\u663e\u793a\u6570\u5b57\u672c\u8eab\u3002 \u8bb0\u4f4f\u8981\u5305\u62ec\u4e00\u4e2a\u6700\u7ec8\u64cd\u4f5c\uff08\u6216\u79f0\u4e3a\u8fed\u4ee3\u5668\uff09\uff01 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7a0b\u5e8f\u7684\u6570\u5b57\u5e94\u8be5\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e4b\u540e\u90fd\u51cf\u5c11\uff0c\u800c\u4e0d\u662f\u589e\u52a0\uff0c\u6240\u4ee5\u4e0d\u80fd\u4f7f\u7528 i++ - \u5e94\u8be5\u7528\u5565\u5462\uff1f \u53ef\u4ee5\u968f\u65f6\u4f7f\u7528 \"Reset\" \u6309\u94ae\u91cd\u7f6e\u8be5\u793a\u4f8b\u3002 \u5982\u679c\u4f60\u771f\u7684\u5361\u4f4f\u4e86\uff0c\u70b9 \"Show solution\" \u6765\u67e5\u770b\u89e3\u51b3\u65b9\u6848\u3002 See the Pen Count down for while by anjing ( @anjingcuc ) on CodePen . while \u5728\u672c\u7ec3\u4e60\u4e2d\uff0c\u4f60\u9700\u8981\u83b7\u53d6\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u7684\u540d\u79f0\u5217\u8868\uff0c\u5e76\u5c06\u5176\u653e\u5165\u6765\u5bbe\u5217\u8868\u4e2d\u3002 \u4f46\u8fd9\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613 - \u4f60\u9700\u8981\u6392\u9664\u83f2\u5c14\u548c\u6d1b\u62c9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u662f\u8d2a\u5a6a\u548c\u7c97\u9c81\u7684\uff0c\u603b\u662f\u5403\u6240\u6709\u7684\u98df\u7269\uff01 \u56e0\u6b64\u9700\u8981\u4ea7\u751f\u4e24\u4e2a\u540d\u5355\uff0c\u4e00\u4e2a\u662f\u6b22\u8fce\u7684\u5ba2\u4eba\u540d\u5355\uff0c\u4e00\u4e2a\u662f\u62d2\u7edd\u7684\u5ba2\u4eba\u540d\u5355\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5e0c\u671b\u4f60\uff1a \u7f16\u5199\u4e00\u4e2a\u5faa\u73af\uff0c\u5b83\u5c06\u4ece 0 \u8fed\u4ee3\u5230 people \u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u4f60\u9700\u8981\u4ece\u4e00\u4e2a\u521d\u59cb\u5316\u5668 var i = 0 \u5f00\u59cb\uff0c\u4f46\u662f\u4f60\u9700\u8981\u4ec0\u4e48\u9000\u51fa\u6761\u4ef6\uff1f \u5728\u6bcf\u4e2a\u5faa\u73af\u8fed\u4ee3\u671f\u95f4\uff0c\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u68c0\u67e5\u5f53\u524d\u6570\u7ec4\u9879\u662f\u5426\u7b49\u4e8e\u201cPhil\u201d\u6216\u201cLola\u201d\uff1a \u5982\u679c\u662f\uff0c\u5219\u5c06\u6570\u7ec4\u9879\u8fde\u63a5\u5230\u62d2\u7edd\u6bb5\u843d\u7684 textContent \u7684\u672b\u5c3e\uff0c\u540e\u8ddf\u9017\u53f7\u548c\u7a7a\u683c\u3002 \u5982\u679c\u4e0d\u662f\uff0c\u5219\u5c06\u6570\u7ec4\u9879\u8fde\u63a5\u5230\u63a5\u6536\u6bb5\u843d\u7684 textContent \u7684\u672b\u5c3e\uff0c\u540e\u8ddf\u9017\u53f7\u548c\u7a7a\u683c\u3002 \u5df2\u63d0\u4f9b\u7684\u521d\u59cb\u5316\u4ee3\u7801\u5305\u62ec\uff1a var i = 0; \u2014 \u4f60\u7684\u521d\u59cb\u5316\u7a0b\u5e8f refused.textContent += - \u5c06\u8fde\u63a5\u67d0\u4e9b\u4e1c\u897f\u7684\u884c\u7684\u5f00\u5934\uff0c\u7ed3\u675f\u4e8e refused.textContent\u3002 admitted.textContent += - \u5c06\u8fde\u63a5\u67d0\u4e9b\u5185\u5bb9\u5230\u4e00\u884c\u7684\u7ed3\u5c3e\u7684\u884c\u7684\u5f00\u59cb\u3002 \u989d\u5916\u8981\u6c42 - \u6210\u529f\u5b8c\u6210\u4e0a\u8ff0\u4efb\u52a1\u540e\uff0c\u5c06\u7559\u4e0b\u4e24\u4e2a\u540d\u79f0\u5217\u8868\uff0c\u7528\u9017\u53f7\u5206\u9694\uff0c\u4f46\u5b83\u4eec\u5c06\u4e0d\u6574\u9f50 - \u6bcf\u4e2a\u7ed3\u5c3e\u5904\u90fd\u4f1a\u6709\u4e00\u4e2a\u9017\u53f7\u3002\u4f60\u9700\u8981\u601d\u8003\u5e76\u5b9e\u73b0\u6700\u540e\u4e00\u4e2a\u540d\u5b57\u540e\u9762\u8ddf\u8fd9\u4e00\u4e2a\u53e5\u53f7\u3002 \u53ef\u4ee5\u968f\u65f6\u4f7f\u7528 \"Reset\" \u6309\u94ae\u91cd\u7f6e\u8be5\u793a\u4f8b\u3002 \u5982\u679c\u4f60\u771f\u7684\u5361\u4f4f\u4e86\uff0c\u70b9 \"Show solution\" \u6765\u67e5\u770b\u89e3\u51b3\u65b9\u6848\u3002 See the Pen Guest List for while by anjing ( @anjingcuc ) on CodePen . \u63d0\u4ea4 \u8bf7\u5b8c\u6210\u4e0a\u8ff0\u56db\u4e2a\u5c0f\u5b9e\u9a8c\uff0c\u5e76\u5c06\u4ee3\u7801\u548c\u6587\u6863\u53d1\u9001\u5230 anjingcuc@vip.qq.com \u6587\u4ef6\u540d\u4e3a \u5b66\u53f7-\u59d3\u540d.zip \u3002","title":"JavaScript \u7ed3\u6784\u5316\u4ee3\u7801"},{"location":"web/javascript-blocks/#_1","text":"","title":"\u5206\u652f\u5b9e\u9a8c"},{"location":"web/javascript-blocks/#ifelse","text":"\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u8bf7\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u65e5\u5386\u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\uff1a \u4e00\u4e2a <select> \u5143\u7d20\uff0c\u5141\u8bb8\u7528\u6237\u5728\u4e0d\u540c\u6708\u4efd\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002 onchange \u68c0\u6d4b <select> \u83dc\u5355\u4e2d\u9009\u62e9\u7684\u503c\u4f55\u65f6\u66f4\u6539\u7684\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002 \u4e00\u4e2a\u51fd\u6570\u53eb\u505a createCalendar() \u7ed8\u5236\u65e5\u5386\u5e76\u5728 <h1> \u5143\u7d20\u4e2d\u663e\u793a\u6b63\u786e\u7684\u6708\u4efd\u3002 \u5728 onchange \u5904\u7406\u51fd\u6570\u4e2d\u5199\u4e00\u4e2a\u6761\u4ef6\u8bed\u53e5\uff0c\u5c31\u5728 // ADD CONDITIONAL HERE \u7684\u4e0b\u9762\u3002\u529f\u80fd\u5305\u62ec\uff1a \u67e5\u770b\u6240\u9009\u6708\u4efd\uff08\u5b58\u50a8\u5728 choice \u53d8\u91cf\u4e2d\uff0c\u8fd9\u5c06\u662f <select> \u503c\u66f4\u6539\u540e\u7684\u5143\u7d20\u503c\uff0c\u4f8b\u5982 \"1 \u6708\"\uff09\u3002 \u8bbe\u7f6e\u4e00\u4e2a\u88ab\u8c03\u7528 days \u4e3a\u7b49\u4e8e\u6240\u9009\u6708\u4efd\u5929\u6570\u7684\u53d8\u91cf\uff0c\u6765\u5b9e\u73b0\u67e5\u770b\u4e00\u5e74\u4e2d\u6bcf\u4e2a\u6708\u7684\u5929\u6570\uff0c\u53ef\u4ee5\u5ffd\u7565\u95f0\u5e74\u3002 \u63d0\u793a\uff1a \u5efa\u8bae\u4f7f\u7528\u903b\u8f91\u6216 || \u5c06\u591a\u4e2a\u6708\u7ec4\u5408\u6210\u4e00\u4e2a\u5355\u4e00\u6761\u4ef6\uff1b\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5171\u4eab\u76f8\u540c\u7684\u5929\u6570\u3002 \u8003\u8651\u6700\u5e38\u7528\u7684\u5929\u6570\uff0c\u5e76\u5c06\u5176\u7528\u4f5c\u9ed8\u8ba4\u503c\u3002 \u53ef\u4ee5\u968f\u65f6\u4f7f\u7528 \"Reset\" \u6309\u94ae\u91cd\u7f6e\u8be5\u793a\u4f8b\u3002 \u5982\u679c\u4f60\u771f\u7684\u5361\u4f4f\u4e86\uff0c\u70b9 \"Show solution\" \u6765\u67e5\u770b\u89e3\u51b3\u65b9\u6848\u3002 See the Pen Calender for if..else by anjing ( @anjingcuc ) on CodePen .","title":"if...else"},{"location":"web/javascript-blocks/#switch","text":"\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u4f60\u9700\u8981\u7ec3\u4e60\u4f7f\u7528 switch \u8bed\u53e5\uff0c\u8fd9\u5c06\u5141\u8bb8\u6211\u4eec\u5bf9\u7b80\u5355\u7684\u7f51\u7ad9\u5e94\u7528\u66f4\u591a\u7684\u9009\u62e9\u3002\u770b\u770b <select> - \u4e00\u5171\u6709\u4e94\u4e2a\u4e3b\u9898\u9009\u9879\u3002\u4f60\u9700\u8981\u5728 // ADD SWITCH STATEMENT \u6ce8\u91ca\u4e0b\u9762\u6dfb\u52a0\u4e00\u4e2a switch \u8bed\u53e5\uff1a \u5b83\u5e94\u8be5\u63a5\u53d7 choice \u53d8\u91cf\u4f5c\u4e3a\u5176\u8f93\u5165\u8868\u8fbe\u5f0f\u3002 \u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\uff0c\u9009\u62e9\u5e94\u8be5\u7b49\u4e8e\u53ef\u4ee5\u9009\u62e9\u7684\u53ef\u80fd\u503c\u4e4b\u4e00\uff0c\u5373\u767d\u8272\uff0c\u9ed1\u8272\uff0c\u7d2b\u8272\uff0c\u9ec4\u8272\u6216\u8ff7\u5e7b\u8272\u3002 \u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\uff0c\u5e94\u8fd0\u884c update()\u51fd\u6570\uff0c\u5e76\u4f20\u9012\u4e24\u4e2a\u989c\u8272\u503c\uff0c\u7b2c\u4e00\u4e2a\u989c\u8272\u503c\u4e3a\u80cc\u666f\u989c\u8272\uff0c\u7b2c\u4e8c\u4e2a\u989c\u8272\u503c\u4e3a\u6587\u672c\u989c\u8272\u3002\u8bf7\u8bb0\u4f4f\uff0c\u989c\u8272\u503c\u662f\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u9700\u8981\u7528\u5f15\u53f7\u62ec\u8d77\u6765\u3002 \u53ef\u4ee5\u968f\u65f6\u4f7f\u7528 \"Reset\" \u6309\u94ae\u91cd\u7f6e\u8be5\u793a\u4f8b\u3002 \u5982\u679c\u4f60\u771f\u7684\u5361\u4f4f\u4e86\uff0c\u70b9 \"Show solution\" \u6765\u67e5\u770b\u89e3\u51b3\u65b9\u6848\u3002 See the Pen More Color for switch by anjing ( @anjingcuc ) on CodePen .","title":"switch"},{"location":"web/javascript-blocks/#while","text":"\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u4f60\u9700\u8981\u6253\u5370\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u542f\u52a8\u5012\u8ba1\u65f6\u5230\u8f93\u51fa\u6846\uff0c\u4ece 10 \u5230\u5173\u95ed\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5e0c\u671b\u4f60\uff1a \u4ece 10 \u4e0b\u964d\u5230 0\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e86\u521d\u59cb\u4ee3\u7801 - var i = 10 ; \u5bf9\u4e8e\u6bcf\u6b21\u8fed\u4ee3\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6bb5\u843d\u5e76\u5c06\u5176\u9644\u52a0\u5230\u8f93\u51fa <div> \uff0c\u4f7f\u7528 var output = document.querySelector('.output'); \u9009\u4e2d\u8be5 <div> \uff0c\u5e76\u5728\u793a\u4f8b\u4ee3\u7801\u4e2d\u5df2\u7ecf\u5199\u597d\u4e86\u521b\u5efa\u5e76\u9644\u52a0\u6bb5\u843d\u7684\u90e8\u5206\u4ee3\u7801\uff1a var para = document.createElement('p'); \u2014 \u65b0\u5efa\u4e00\u4e2a\u6bb5\u843d\u3002 output.appendChild(para); \u2014 \u5c06\u6bb5\u843d\u9644\u52a0\u5230\u8f93\u51fa <div> \u4e2d\u3002 para.textContent = \u2014 = \u53f7\u540e\u9762\u5e94\u8be5\u5199\u4e0a\u4f60\u9700\u8981\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u6216\u5b57\u7b26\u4e32\u53d8\u91cf\u5e76\u4ee5\u5206\u53f7\u7ed3\u5c3e\u3002 \u4e0d\u540c\u7684\u8fed\u4ee3\u6570\u5b57\u9700\u8981\u5c06\u4e0d\u540c\u7684\u6587\u672c\u653e\u5728\u8be5\u8fed\u4ee3\u7684\u6bb5\u843d\u4e2d\uff08\u4f60\u9700\u8981\u4e00\u4e2a\u6761\u4ef6\u8bed\u53e5\u548c\u591a\u4e2a para.textContent = lines \uff09\uff1a \u5982\u679c\u6570\u5b57\u662f 10\uff0c\u6bb5\u843d\u5185\u5bb9\u663e\u793a \"Countdown 10\"\u3002 \u5982\u679c\u6570\u5b57\u4e3a 0\uff0c\u6bb5\u843d\u5185\u5bb9\u663e\u793a \"Blast off!\"\u3002 \u5bf9\u4e8e\u4efb\u4f55\u5176\u4ed6\u6570\u5b57\uff0c\u6bb5\u843d\u5185\u5bb9\u53ea\u663e\u793a\u6570\u5b57\u672c\u8eab\u3002 \u8bb0\u4f4f\u8981\u5305\u62ec\u4e00\u4e2a\u6700\u7ec8\u64cd\u4f5c\uff08\u6216\u79f0\u4e3a\u8fed\u4ee3\u5668\uff09\uff01 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7a0b\u5e8f\u7684\u6570\u5b57\u5e94\u8be5\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e4b\u540e\u90fd\u51cf\u5c11\uff0c\u800c\u4e0d\u662f\u589e\u52a0\uff0c\u6240\u4ee5\u4e0d\u80fd\u4f7f\u7528 i++ - \u5e94\u8be5\u7528\u5565\u5462\uff1f \u53ef\u4ee5\u968f\u65f6\u4f7f\u7528 \"Reset\" \u6309\u94ae\u91cd\u7f6e\u8be5\u793a\u4f8b\u3002 \u5982\u679c\u4f60\u771f\u7684\u5361\u4f4f\u4e86\uff0c\u70b9 \"Show solution\" \u6765\u67e5\u770b\u89e3\u51b3\u65b9\u6848\u3002 See the Pen Count down for while by anjing ( @anjingcuc ) on CodePen .","title":"while"},{"location":"web/javascript-blocks/#while_1","text":"\u5728\u672c\u7ec3\u4e60\u4e2d\uff0c\u4f60\u9700\u8981\u83b7\u53d6\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u7684\u540d\u79f0\u5217\u8868\uff0c\u5e76\u5c06\u5176\u653e\u5165\u6765\u5bbe\u5217\u8868\u4e2d\u3002 \u4f46\u8fd9\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613 - \u4f60\u9700\u8981\u6392\u9664\u83f2\u5c14\u548c\u6d1b\u62c9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u662f\u8d2a\u5a6a\u548c\u7c97\u9c81\u7684\uff0c\u603b\u662f\u5403\u6240\u6709\u7684\u98df\u7269\uff01 \u56e0\u6b64\u9700\u8981\u4ea7\u751f\u4e24\u4e2a\u540d\u5355\uff0c\u4e00\u4e2a\u662f\u6b22\u8fce\u7684\u5ba2\u4eba\u540d\u5355\uff0c\u4e00\u4e2a\u662f\u62d2\u7edd\u7684\u5ba2\u4eba\u540d\u5355\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5e0c\u671b\u4f60\uff1a \u7f16\u5199\u4e00\u4e2a\u5faa\u73af\uff0c\u5b83\u5c06\u4ece 0 \u8fed\u4ee3\u5230 people \u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u4f60\u9700\u8981\u4ece\u4e00\u4e2a\u521d\u59cb\u5316\u5668 var i = 0 \u5f00\u59cb\uff0c\u4f46\u662f\u4f60\u9700\u8981\u4ec0\u4e48\u9000\u51fa\u6761\u4ef6\uff1f \u5728\u6bcf\u4e2a\u5faa\u73af\u8fed\u4ee3\u671f\u95f4\uff0c\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u68c0\u67e5\u5f53\u524d\u6570\u7ec4\u9879\u662f\u5426\u7b49\u4e8e\u201cPhil\u201d\u6216\u201cLola\u201d\uff1a \u5982\u679c\u662f\uff0c\u5219\u5c06\u6570\u7ec4\u9879\u8fde\u63a5\u5230\u62d2\u7edd\u6bb5\u843d\u7684 textContent \u7684\u672b\u5c3e\uff0c\u540e\u8ddf\u9017\u53f7\u548c\u7a7a\u683c\u3002 \u5982\u679c\u4e0d\u662f\uff0c\u5219\u5c06\u6570\u7ec4\u9879\u8fde\u63a5\u5230\u63a5\u6536\u6bb5\u843d\u7684 textContent \u7684\u672b\u5c3e\uff0c\u540e\u8ddf\u9017\u53f7\u548c\u7a7a\u683c\u3002 \u5df2\u63d0\u4f9b\u7684\u521d\u59cb\u5316\u4ee3\u7801\u5305\u62ec\uff1a var i = 0; \u2014 \u4f60\u7684\u521d\u59cb\u5316\u7a0b\u5e8f refused.textContent += - \u5c06\u8fde\u63a5\u67d0\u4e9b\u4e1c\u897f\u7684\u884c\u7684\u5f00\u5934\uff0c\u7ed3\u675f\u4e8e refused.textContent\u3002 admitted.textContent += - \u5c06\u8fde\u63a5\u67d0\u4e9b\u5185\u5bb9\u5230\u4e00\u884c\u7684\u7ed3\u5c3e\u7684\u884c\u7684\u5f00\u59cb\u3002 \u989d\u5916\u8981\u6c42 - \u6210\u529f\u5b8c\u6210\u4e0a\u8ff0\u4efb\u52a1\u540e\uff0c\u5c06\u7559\u4e0b\u4e24\u4e2a\u540d\u79f0\u5217\u8868\uff0c\u7528\u9017\u53f7\u5206\u9694\uff0c\u4f46\u5b83\u4eec\u5c06\u4e0d\u6574\u9f50 - \u6bcf\u4e2a\u7ed3\u5c3e\u5904\u90fd\u4f1a\u6709\u4e00\u4e2a\u9017\u53f7\u3002\u4f60\u9700\u8981\u601d\u8003\u5e76\u5b9e\u73b0\u6700\u540e\u4e00\u4e2a\u540d\u5b57\u540e\u9762\u8ddf\u8fd9\u4e00\u4e2a\u53e5\u53f7\u3002 \u53ef\u4ee5\u968f\u65f6\u4f7f\u7528 \"Reset\" \u6309\u94ae\u91cd\u7f6e\u8be5\u793a\u4f8b\u3002 \u5982\u679c\u4f60\u771f\u7684\u5361\u4f4f\u4e86\uff0c\u70b9 \"Show solution\" \u6765\u67e5\u770b\u89e3\u51b3\u65b9\u6848\u3002 See the Pen Guest List for while by anjing ( @anjingcuc ) on CodePen .","title":"while"},{"location":"web/javascript-blocks/#_2","text":"\u8bf7\u5b8c\u6210\u4e0a\u8ff0\u56db\u4e2a\u5c0f\u5b9e\u9a8c\uff0c\u5e76\u5c06\u4ee3\u7801\u548c\u6587\u6863\u53d1\u9001\u5230 anjingcuc@vip.qq.com \u6587\u4ef6\u540d\u4e3a \u5b66\u53f7-\u59d3\u540d.zip \u3002","title":"\u63d0\u4ea4"},{"location":"web/javascript-introduction/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002 \u731c\u6570\u5b57\u6e38\u620f","title":"JavaScript \u521d\u63a2"},{"location":"web/javascript-introduction/#_1","text":"","title":"\u731c\u6570\u5b57\u6e38\u620f"},{"location":"web/javascript-lib-framework/","text":"","title":"JavaScript \u5e93\u4e0e\u6846\u67b6"},{"location":"web/javascript-oo/","text":"\u4e0b\u65b9\u8bfe\u4ef6\u533a\u57df\u65b9\u5411\u952e\u63a7\u5236\u7ffb\u9875\uff0c f \u952e\u5168\u5c4f\u3002","title":"\u9762\u5411\u5bf9\u8c61\u7684 JavaScript"}]}